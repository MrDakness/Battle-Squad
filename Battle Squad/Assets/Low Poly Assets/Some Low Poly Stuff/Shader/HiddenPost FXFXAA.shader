Shader "Hidden/Post FX/FXAA" {
	Properties {
		_MainTex ("Texture", 2D) = "white" {}
	}
	SubShader {
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 27251
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DITHERING" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "GRAIN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "GRAIN" "DITHERING" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 10
					mad r0.xy, v1.xyxx, cb0[3].xyxx, cb0[3].zwzz
					sample_l r1.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
					mad r2.xyzw, cb0[2].xyxy, l(0.000000, 1.000000, 1.000000, 0.000000), r0.xyxy
					sample_l r3.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
					sample_l r2.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
					mad r4.xyzw, cb0[2].xyxy, l(0.000000, -1.000000, -1.000000, 0.000000), r0.xyxy
					sample_l r5.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
					sample_l r4.xyzw, r4.zwzz, t0.xyzw, s0, l(0.000000)
					max r0.z, r1.y, r3.y
					min r0.w, r1.y, r3.y
					max r0.z, r0.z, r2.y
					min r0.w, r0.w, r2.y
					max r2.x, r4.y, r5.y
					min r2.z, r4.y, r5.y
					max r0.z, r0.z, r2.x
					min r0.w, r0.w, r2.z
					mul r2.x, r0.z, cb0[7].y
					add r0.z, -r0.w, r0.z
					max r0.w, r2.x, cb0[7].z
					ge r0.w, r0.z, r0.w
					if_nz r0.w
					  add r2.xz, r0.xxyx, -cb0[2].xxyx
					  sample_l r6.xyzw, r2.xzxx, t0.xyzw, s0, l(0.000000)
					  add r2.xz, r0.xxyx, cb0[2].xxyx
					  sample_l r7.xyzw, r2.xzxx, t0.xyzw, s0, l(0.000000)
					  mad r8.xyzw, cb0[2].xyxy, l(1.000000, -1.000000, -1.000000, 1.000000), r0.xyxy
					  sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					  sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					  add r0.w, r3.y, r5.y
					  add r2.x, r2.y, r4.y
					  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					  add r2.z, r0.w, r2.x
					  mad r0.w, r1.y, l(-2.000000), r0.w
					  mad r2.x, r1.y, l(-2.000000), r2.x
					  add r2.w, r7.y, r9.y
					  add r3.x, r6.y, r9.y
					  mad r3.z, r2.y, l(-2.000000), r2.w
					  mad r3.x, r5.y, l(-2.000000), r3.x
					  add r3.w, r6.y, r8.y
					  add r4.x, r7.y, r8.y
					  mad r0.w, |r0.w|, l(2.000000), |r3.z|
					  mad r2.x, |r2.x|, l(2.000000), |r3.x|
					  mad r3.x, r4.y, l(-2.000000), r3.w
					  mad r3.z, r3.y, l(-2.000000), r4.x
					  add r0.w, r0.w, |r3.x|
					  add r2.x, r2.x, |r3.z|
					  add r2.w, r2.w, r3.w
					  ge r0.w, r0.w, r2.x
					  mad r2.x, r2.z, l(2.000000), r2.w
					  movc r2.z, r0.w, r5.y, r4.y
					  movc r2.y, r0.w, r3.y, r2.y
					  movc r2.w, r0.w, cb0[2].y, cb0[2].x
					  mad r2.x, r2.x, l(0.083333), -r1.y
					  add r3.xy, -r1.yyyy, r2.zyzz
					  add r2.yz, r1.yyyy, r2.yyzy
					  ge r3.z, |r3.x|, |r3.y|
					  max r3.x, |r3.y|, |r3.x|
					  movc r2.w, r3.z, -r2.w, r2.w
					  mul_sat r0.z, r0.z, |r2.x|
					  and r2.x, r0.w, cb0[2].x
					  movc r3.y, r0.w, l(0), cb0[2].y
					  mad r4.xy, r2.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), r0.xyxx
					  movc r3.w, r0.w, r0.x, r4.x
					  movc r4.x, r0.w, r4.y, r0.y
					  add r5.x, -r2.x, r3.w
					  add r5.y, -r3.y, r4.x
					  add r6.x, r2.x, r3.w
					  add r6.y, r3.y, r4.x
					  mad r3.w, r0.z, l(-2.000000), l(3.000000)
					  sample_l r4.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
					  mul r0.z, r0.z, r0.z
					  sample_l r7.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
					  movc r2.y, r3.z, r2.z, r2.y
					  mul r2.z, r3.x, l(0.250000)
					  mad r3.x, -r2.y, l(0.500000), r1.y
					  mul r0.z, r0.z, r3.w
					  lt r3.x, r3.x, l(0.000000)
					  mad r4.y, -r2.y, l(0.500000), r4.y
					  mad r4.x, -r2.y, l(0.500000), r7.y
					  ge r3.zw, |r4.yyyx|, r2.zzzz
					  add r5.z, -r2.x, r5.x
					  movc r5.x, r3.z, r5.x, r5.z
					  add r5.w, -r3.y, r5.y
					  movc r5.z, r3.z, r5.y, r5.w
					  not r5.yw, r3.zzzw
					  or r5.y, r5.w, r5.y
					  add r5.w, r2.x, r6.x
					  movc r6.x, r3.w, r6.x, r5.w
					  add r5.w, r3.y, r6.y
					  movc r6.z, r3.w, r6.y, r5.w
					  if_nz r5.y
					    if_z r3.z
					      sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					    else 
					      mov r7.x, r4.y
					    endif 
					    if_z r3.w
					      sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					    endif 
					    mad r5.y, -r2.y, l(0.500000), r7.x
					    movc r4.y, r3.z, r7.x, r5.y
					    mad r3.z, -r2.y, l(0.500000), r4.x
					    movc r4.x, r3.w, r4.x, r3.z
					    ge r3.zw, |r4.yyyx|, r2.zzzz
					    add r5.y, -r2.x, r5.x
					    movc r5.x, r3.z, r5.x, r5.y
					    add r5.y, -r3.y, r5.z
					    movc r5.z, r3.z, r5.z, r5.y
					    not r5.yw, r3.zzzw
					    or r5.y, r5.w, r5.y
					    add r5.w, r2.x, r6.x
					    movc r6.x, r3.w, r6.x, r5.w
					    add r5.w, r3.y, r6.z
					    movc r6.z, r3.w, r6.z, r5.w
					    if_nz r5.y
					      if_z r3.z
					        sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					      else 
					        mov r7.x, r4.y
					      endif 
					      if_z r3.w
					        sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					      endif 
					      mad r5.y, -r2.y, l(0.500000), r7.x
					      movc r4.y, r3.z, r7.x, r5.y
					      mad r3.z, -r2.y, l(0.500000), r4.x
					      movc r4.x, r3.w, r4.x, r3.z
					      ge r3.zw, |r4.yyyx|, r2.zzzz
					      add r5.y, -r2.x, r5.x
					      movc r5.x, r3.z, r5.x, r5.y
					      add r5.y, -r3.y, r5.z
					      movc r5.z, r3.z, r5.z, r5.y
					      not r5.yw, r3.zzzw
					      or r5.y, r5.w, r5.y
					      add r5.w, r2.x, r6.x
					      movc r6.x, r3.w, r6.x, r5.w
					      add r5.w, r3.y, r6.z
					      movc r6.z, r3.w, r6.z, r5.w
					      if_nz r5.y
					        if_z r3.z
					          sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					        else 
					          mov r7.x, r4.y
					        endif 
					        if_z r3.w
					          sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					        endif 
					        mad r5.y, -r2.y, l(0.500000), r7.x
					        movc r4.y, r3.z, r7.x, r5.y
					        mad r3.z, -r2.y, l(0.500000), r4.x
					        movc r4.x, r3.w, r4.x, r3.z
					        ge r3.zw, |r4.yyyx|, r2.zzzz
					        add r5.y, -r2.x, r5.x
					        movc r5.x, r3.z, r5.x, r5.y
					        add r5.y, -r3.y, r5.z
					        movc r5.z, r3.z, r5.z, r5.y
					        not r5.yw, r3.zzzw
					        or r5.y, r5.w, r5.y
					        add r5.w, r2.x, r6.x
					        movc r6.x, r3.w, r6.x, r5.w
					        add r5.w, r3.y, r6.z
					        movc r6.z, r3.w, r6.z, r5.w
					        if_nz r5.y
					          if_z r3.z
					            sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					          else 
					            mov r7.x, r4.y
					          endif 
					          if_z r3.w
					            sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					          endif 
					          mad r5.y, -r2.y, l(0.500000), r7.x
					          movc r4.y, r3.z, r7.x, r5.y
					          mad r3.z, -r2.y, l(0.500000), r4.x
					          movc r4.x, r3.w, r4.x, r3.z
					          ge r3.zw, |r4.yyyx|, r2.zzzz
					          mad r5.y, -r2.x, l(1.500000), r5.x
					          movc r5.x, r3.z, r5.x, r5.y
					          mad r5.y, -r3.y, l(1.500000), r5.z
					          movc r5.z, r3.z, r5.z, r5.y
					          not r5.yw, r3.zzzw
					          or r5.y, r5.w, r5.y
					          mad r5.w, r2.x, l(1.500000), r6.x
					          movc r6.x, r3.w, r6.x, r5.w
					          mad r5.w, r3.y, l(1.500000), r6.z
					          movc r6.z, r3.w, r6.z, r5.w
					          if_nz r5.y
					            if_z r3.z
					              sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					            else 
					              mov r7.x, r4.y
					            endif 
					            if_z r3.w
					              sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					            endif 
					            mad r5.y, -r2.y, l(0.500000), r7.x
					            movc r4.y, r3.z, r7.x, r5.y
					            mad r3.z, -r2.y, l(0.500000), r4.x
					            movc r4.x, r3.w, r4.x, r3.z
					            ge r3.zw, |r4.yyyx|, r2.zzzz
					            mad r5.y, -r2.x, l(2.000000), r5.x
					            movc r5.x, r3.z, r5.x, r5.y
					            mad r5.y, -r3.y, l(2.000000), r5.z
					            movc r5.z, r3.z, r5.z, r5.y
					            not r5.yw, r3.zzzw
					            or r5.y, r5.w, r5.y
					            mad r5.w, r2.x, l(2.000000), r6.x
					            movc r6.x, r3.w, r6.x, r5.w
					            mad r5.w, r3.y, l(2.000000), r6.z
					            movc r6.z, r3.w, r6.z, r5.w
					            if_nz r5.y
					              if_z r3.z
					                sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					              else 
					                mov r7.x, r4.y
					              endif 
					              if_z r3.w
					                sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					              endif 
					              mad r5.y, -r2.y, l(0.500000), r7.x
					              movc r4.y, r3.z, r7.x, r5.y
					              mad r3.z, -r2.y, l(0.500000), r4.x
					              movc r4.x, r3.w, r4.x, r3.z
					              ge r3.zw, |r4.yyyx|, r2.zzzz
					              mad r5.y, -r2.x, l(2.000000), r5.x
					              movc r5.x, r3.z, r5.x, r5.y
					              mad r5.y, -r3.y, l(2.000000), r5.z
					              movc r5.z, r3.z, r5.z, r5.y
					              not r5.yw, r3.zzzw
					              or r5.y, r5.w, r5.y
					              mad r5.w, r2.x, l(2.000000), r6.x
					              movc r6.x, r3.w, r6.x, r5.w
					              mad r5.w, r3.y, l(2.000000), r6.z
					              movc r6.z, r3.w, r6.z, r5.w
					              if_nz r5.y
					                if_z r3.z
					                  sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                else 
					                  mov r7.x, r4.y
					                endif 
					                if_z r3.w
					                  sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                endif 
					                mad r5.y, -r2.y, l(0.500000), r7.x
					                movc r4.y, r3.z, r7.x, r5.y
					                mad r3.z, -r2.y, l(0.500000), r4.x
					                movc r4.x, r3.w, r4.x, r3.z
					                ge r3.zw, |r4.yyyx|, r2.zzzz
					                mad r5.y, -r2.x, l(2.000000), r5.x
					                movc r5.x, r3.z, r5.x, r5.y
					                mad r5.y, -r3.y, l(2.000000), r5.z
					                movc r5.z, r3.z, r5.z, r5.y
					                not r5.yw, r3.zzzw
					                or r5.y, r5.w, r5.y
					                mad r5.w, r2.x, l(2.000000), r6.x
					                movc r6.x, r3.w, r6.x, r5.w
					                mad r5.w, r3.y, l(2.000000), r6.z
					                movc r6.z, r3.w, r6.z, r5.w
					                if_nz r5.y
					                  if_z r3.z
					                    sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                  else 
					                    mov r7.x, r4.y
					                  endif 
					                  if_z r3.w
					                    sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                  endif 
					                  mad r5.y, -r2.y, l(0.500000), r7.x
					                  movc r4.y, r3.z, r7.x, r5.y
					                  mad r3.z, -r2.y, l(0.500000), r4.x
					                  movc r4.x, r3.w, r4.x, r3.z
					                  ge r3.zw, |r4.yyyx|, r2.zzzz
					                  mad r5.y, -r2.x, l(2.000000), r5.x
					                  movc r5.x, r3.z, r5.x, r5.y
					                  mad r5.y, -r3.y, l(2.000000), r5.z
					                  movc r5.z, r3.z, r5.z, r5.y
					                  not r5.yw, r3.zzzw
					                  or r5.y, r5.w, r5.y
					                  mad r5.w, r2.x, l(2.000000), r6.x
					                  movc r6.x, r3.w, r6.x, r5.w
					                  mad r5.w, r3.y, l(2.000000), r6.z
					                  movc r6.z, r3.w, r6.z, r5.w
					                  if_nz r5.y
					                    if_z r3.z
					                      sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                    else 
					                      mov r7.x, r4.y
					                    endif 
					                    if_z r3.w
					                      sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                    endif 
					                    mad r5.y, -r2.y, l(0.500000), r7.x
					                    movc r4.y, r3.z, r7.x, r5.y
					                    mad r3.z, -r2.y, l(0.500000), r4.x
					                    movc r4.x, r3.w, r4.x, r3.z
					                    ge r3.zw, |r4.yyyx|, r2.zzzz
					                    mad r5.y, -r2.x, l(4.000000), r5.x
					                    movc r5.x, r3.z, r5.x, r5.y
					                    mad r5.y, -r3.y, l(4.000000), r5.z
					                    movc r5.z, r3.z, r5.z, r5.y
					                    not r5.yw, r3.zzzw
					                    or r5.y, r5.w, r5.y
					                    mad r5.w, r2.x, l(4.000000), r6.x
					                    movc r6.x, r3.w, r6.x, r5.w
					                    mad r5.w, r3.y, l(4.000000), r6.z
					                    movc r6.z, r3.w, r6.z, r5.w
					                    if_nz r5.y
					                      if_z r3.z
					                        sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                      else 
					                        mov r7.x, r4.y
					                      endif 
					                      if_z r3.w
					                        sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                      endif 
					                      mad r4.z, -r2.y, l(0.500000), r7.x
					                      movc r4.y, r3.z, r7.x, r4.z
					                      mad r2.y, -r2.y, l(0.500000), r4.x
					                      movc r4.x, r3.w, r4.x, r2.y
					                      ge r2.yz, |r4.yyxy|, r2.zzzz
					                      mad r3.z, -r2.x, l(8.000000), r5.x
					                      movc r5.x, r2.y, r5.x, r3.z
					                      mad r3.z, -r3.y, l(8.000000), r5.z
					                      movc r5.z, r2.y, r5.z, r3.z
					                      mad r2.x, r2.x, l(8.000000), r6.x
					                      movc r6.x, r2.z, r6.x, r2.x
					                      mad r2.x, r3.y, l(8.000000), r6.z
					                      movc r6.z, r2.z, r6.z, r2.x
					                    endif 
					                  endif 
					                endif 
					              endif 
					            endif 
					          endif 
					        endif 
					      endif 
					    endif 
					  endif 
					  add r2.xz, r0.xxyx, -r5.xxzx
					  movc r2.x, r0.w, r2.x, r2.z
					  add r2.yz, -r0.xxyx, r6.xxzx
					  movc r2.y, r0.w, r2.y, r2.z
					  lt r3.yz, r4.yyxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  add r2.z, r2.x, r2.y
					  ine r3.xy, r3.xxxx, r3.yzyy
					  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
					  lt r3.z, r2.x, r2.y
					  min r2.x, r2.y, r2.x
					  movc r2.y, r3.z, r3.x, r3.y
					  mul r0.z, r0.z, r0.z
					  mad r2.x, r2.x, -r2.z, l(0.500000)
					  mul r0.z, r0.z, cb0[7].x
					  and r2.x, r2.x, r2.y
					  max r0.z, r0.z, r2.x
					  mad r2.xy, r0.zzzz, r2.wwww, r0.xyxx
					  movc r3.x, r0.w, r0.x, r2.x
					  movc r3.y, r0.w, r2.y, r0.y
					  sample_l r1.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
					endif 
					mov o0.xyz, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DITHERING" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 10
					mad r0.xy, v1.xyxx, cb0[3].xyxx, cb0[3].zwzz
					sample_l r1.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
					mad r2.xyzw, cb0[2].xyxy, l(0.000000, 1.000000, 1.000000, 0.000000), r0.xyxy
					sample_l r3.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
					sample_l r2.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
					mad r4.xyzw, cb0[2].xyxy, l(0.000000, -1.000000, -1.000000, 0.000000), r0.xyxy
					sample_l r5.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
					sample_l r4.xyzw, r4.zwzz, t0.xyzw, s0, l(0.000000)
					max r0.z, r1.y, r3.y
					min r0.w, r1.y, r3.y
					max r0.z, r0.z, r2.y
					min r0.w, r0.w, r2.y
					max r2.x, r4.y, r5.y
					min r2.z, r4.y, r5.y
					max r0.z, r0.z, r2.x
					min r0.w, r0.w, r2.z
					mul r2.x, r0.z, cb0[7].y
					add r0.z, -r0.w, r0.z
					max r0.w, r2.x, cb0[7].z
					ge r0.w, r0.z, r0.w
					if_nz r0.w
					  add r2.xz, r0.xxyx, -cb0[2].xxyx
					  sample_l r6.xyzw, r2.xzxx, t0.xyzw, s0, l(0.000000)
					  add r2.xz, r0.xxyx, cb0[2].xxyx
					  sample_l r7.xyzw, r2.xzxx, t0.xyzw, s0, l(0.000000)
					  mad r8.xyzw, cb0[2].xyxy, l(1.000000, -1.000000, -1.000000, 1.000000), r0.xyxy
					  sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					  sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					  add r0.w, r3.y, r5.y
					  add r2.x, r2.y, r4.y
					  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					  add r2.z, r0.w, r2.x
					  mad r0.w, r1.y, l(-2.000000), r0.w
					  mad r2.x, r1.y, l(-2.000000), r2.x
					  add r2.w, r7.y, r9.y
					  add r3.x, r6.y, r9.y
					  mad r3.z, r2.y, l(-2.000000), r2.w
					  mad r3.x, r5.y, l(-2.000000), r3.x
					  add r3.w, r6.y, r8.y
					  add r4.x, r7.y, r8.y
					  mad r0.w, |r0.w|, l(2.000000), |r3.z|
					  mad r2.x, |r2.x|, l(2.000000), |r3.x|
					  mad r3.x, r4.y, l(-2.000000), r3.w
					  mad r3.z, r3.y, l(-2.000000), r4.x
					  add r0.w, r0.w, |r3.x|
					  add r2.x, r2.x, |r3.z|
					  add r2.w, r2.w, r3.w
					  ge r0.w, r0.w, r2.x
					  mad r2.x, r2.z, l(2.000000), r2.w
					  movc r2.z, r0.w, r5.y, r4.y
					  movc r2.y, r0.w, r3.y, r2.y
					  movc r2.w, r0.w, cb0[2].y, cb0[2].x
					  mad r2.x, r2.x, l(0.083333), -r1.y
					  add r3.xy, -r1.yyyy, r2.zyzz
					  add r2.yz, r1.yyyy, r2.yyzy
					  ge r3.z, |r3.x|, |r3.y|
					  max r3.x, |r3.y|, |r3.x|
					  movc r2.w, r3.z, -r2.w, r2.w
					  mul_sat r0.z, r0.z, |r2.x|
					  and r2.x, r0.w, cb0[2].x
					  movc r3.y, r0.w, l(0), cb0[2].y
					  mad r4.xy, r2.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), r0.xyxx
					  movc r3.w, r0.w, r0.x, r4.x
					  movc r4.x, r0.w, r4.y, r0.y
					  add r5.x, -r2.x, r3.w
					  add r5.y, -r3.y, r4.x
					  add r6.x, r2.x, r3.w
					  add r6.y, r3.y, r4.x
					  mad r3.w, r0.z, l(-2.000000), l(3.000000)
					  sample_l r4.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
					  mul r0.z, r0.z, r0.z
					  sample_l r7.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
					  movc r2.y, r3.z, r2.z, r2.y
					  mul r2.z, r3.x, l(0.250000)
					  mad r3.x, -r2.y, l(0.500000), r1.y
					  mul r0.z, r0.z, r3.w
					  lt r3.x, r3.x, l(0.000000)
					  mad r4.y, -r2.y, l(0.500000), r4.y
					  mad r4.x, -r2.y, l(0.500000), r7.y
					  ge r3.zw, |r4.yyyx|, r2.zzzz
					  add r5.z, -r2.x, r5.x
					  movc r5.x, r3.z, r5.x, r5.z
					  add r5.w, -r3.y, r5.y
					  movc r5.z, r3.z, r5.y, r5.w
					  not r5.yw, r3.zzzw
					  or r5.y, r5.w, r5.y
					  add r5.w, r2.x, r6.x
					  movc r6.x, r3.w, r6.x, r5.w
					  add r5.w, r3.y, r6.y
					  movc r6.z, r3.w, r6.y, r5.w
					  if_nz r5.y
					    if_z r3.z
					      sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					    else 
					      mov r7.x, r4.y
					    endif 
					    if_z r3.w
					      sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					    endif 
					    mad r5.y, -r2.y, l(0.500000), r7.x
					    movc r4.y, r3.z, r7.x, r5.y
					    mad r3.z, -r2.y, l(0.500000), r4.x
					    movc r4.x, r3.w, r4.x, r3.z
					    ge r3.zw, |r4.yyyx|, r2.zzzz
					    add r5.y, -r2.x, r5.x
					    movc r5.x, r3.z, r5.x, r5.y
					    add r5.y, -r3.y, r5.z
					    movc r5.z, r3.z, r5.z, r5.y
					    not r5.yw, r3.zzzw
					    or r5.y, r5.w, r5.y
					    add r5.w, r2.x, r6.x
					    movc r6.x, r3.w, r6.x, r5.w
					    add r5.w, r3.y, r6.z
					    movc r6.z, r3.w, r6.z, r5.w
					    if_nz r5.y
					      if_z r3.z
					        sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					      else 
					        mov r7.x, r4.y
					      endif 
					      if_z r3.w
					        sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					      endif 
					      mad r5.y, -r2.y, l(0.500000), r7.x
					      movc r4.y, r3.z, r7.x, r5.y
					      mad r3.z, -r2.y, l(0.500000), r4.x
					      movc r4.x, r3.w, r4.x, r3.z
					      ge r3.zw, |r4.yyyx|, r2.zzzz
					      add r5.y, -r2.x, r5.x
					      movc r5.x, r3.z, r5.x, r5.y
					      add r5.y, -r3.y, r5.z
					      movc r5.z, r3.z, r5.z, r5.y
					      not r5.yw, r3.zzzw
					      or r5.y, r5.w, r5.y
					      add r5.w, r2.x, r6.x
					      movc r6.x, r3.w, r6.x, r5.w
					      add r5.w, r3.y, r6.z
					      movc r6.z, r3.w, r6.z, r5.w
					      if_nz r5.y
					        if_z r3.z
					          sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					        else 
					          mov r7.x, r4.y
					        endif 
					        if_z r3.w
					          sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					        endif 
					        mad r5.y, -r2.y, l(0.500000), r7.x
					        movc r4.y, r3.z, r7.x, r5.y
					        mad r3.z, -r2.y, l(0.500000), r4.x
					        movc r4.x, r3.w, r4.x, r3.z
					        ge r3.zw, |r4.yyyx|, r2.zzzz
					        add r5.y, -r2.x, r5.x
					        movc r5.x, r3.z, r5.x, r5.y
					        add r5.y, -r3.y, r5.z
					        movc r5.z, r3.z, r5.z, r5.y
					        not r5.yw, r3.zzzw
					        or r5.y, r5.w, r5.y
					        add r5.w, r2.x, r6.x
					        movc r6.x, r3.w, r6.x, r5.w
					        add r5.w, r3.y, r6.z
					        movc r6.z, r3.w, r6.z, r5.w
					        if_nz r5.y
					          if_z r3.z
					            sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					          else 
					            mov r7.x, r4.y
					          endif 
					          if_z r3.w
					            sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					          endif 
					          mad r5.y, -r2.y, l(0.500000), r7.x
					          movc r4.y, r3.z, r7.x, r5.y
					          mad r3.z, -r2.y, l(0.500000), r4.x
					          movc r4.x, r3.w, r4.x, r3.z
					          ge r3.zw, |r4.yyyx|, r2.zzzz
					          mad r5.y, -r2.x, l(1.500000), r5.x
					          movc r5.x, r3.z, r5.x, r5.y
					          mad r5.y, -r3.y, l(1.500000), r5.z
					          movc r5.z, r3.z, r5.z, r5.y
					          not r5.yw, r3.zzzw
					          or r5.y, r5.w, r5.y
					          mad r5.w, r2.x, l(1.500000), r6.x
					          movc r6.x, r3.w, r6.x, r5.w
					          mad r5.w, r3.y, l(1.500000), r6.z
					          movc r6.z, r3.w, r6.z, r5.w
					          if_nz r5.y
					            if_z r3.z
					              sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					            else 
					              mov r7.x, r4.y
					            endif 
					            if_z r3.w
					              sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					            endif 
					            mad r5.y, -r2.y, l(0.500000), r7.x
					            movc r4.y, r3.z, r7.x, r5.y
					            mad r3.z, -r2.y, l(0.500000), r4.x
					            movc r4.x, r3.w, r4.x, r3.z
					            ge r3.zw, |r4.yyyx|, r2.zzzz
					            mad r5.y, -r2.x, l(2.000000), r5.x
					            movc r5.x, r3.z, r5.x, r5.y
					            mad r5.y, -r3.y, l(2.000000), r5.z
					            movc r5.z, r3.z, r5.z, r5.y
					            not r5.yw, r3.zzzw
					            or r5.y, r5.w, r5.y
					            mad r5.w, r2.x, l(2.000000), r6.x
					            movc r6.x, r3.w, r6.x, r5.w
					            mad r5.w, r3.y, l(2.000000), r6.z
					            movc r6.z, r3.w, r6.z, r5.w
					            if_nz r5.y
					              if_z r3.z
					                sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					              else 
					                mov r7.x, r4.y
					              endif 
					              if_z r3.w
					                sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					              endif 
					              mad r5.y, -r2.y, l(0.500000), r7.x
					              movc r4.y, r3.z, r7.x, r5.y
					              mad r3.z, -r2.y, l(0.500000), r4.x
					              movc r4.x, r3.w, r4.x, r3.z
					              ge r3.zw, |r4.yyyx|, r2.zzzz
					              mad r5.y, -r2.x, l(2.000000), r5.x
					              movc r5.x, r3.z, r5.x, r5.y
					              mad r5.y, -r3.y, l(2.000000), r5.z
					              movc r5.z, r3.z, r5.z, r5.y
					              not r5.yw, r3.zzzw
					              or r5.y, r5.w, r5.y
					              mad r5.w, r2.x, l(2.000000), r6.x
					              movc r6.x, r3.w, r6.x, r5.w
					              mad r5.w, r3.y, l(2.000000), r6.z
					              movc r6.z, r3.w, r6.z, r5.w
					              if_nz r5.y
					                if_z r3.z
					                  sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                else 
					                  mov r7.x, r4.y
					                endif 
					                if_z r3.w
					                  sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                endif 
					                mad r5.y, -r2.y, l(0.500000), r7.x
					                movc r4.y, r3.z, r7.x, r5.y
					                mad r3.z, -r2.y, l(0.500000), r4.x
					                movc r4.x, r3.w, r4.x, r3.z
					                ge r3.zw, |r4.yyyx|, r2.zzzz
					                mad r5.y, -r2.x, l(2.000000), r5.x
					                movc r5.x, r3.z, r5.x, r5.y
					                mad r5.y, -r3.y, l(2.000000), r5.z
					                movc r5.z, r3.z, r5.z, r5.y
					                not r5.yw, r3.zzzw
					                or r5.y, r5.w, r5.y
					                mad r5.w, r2.x, l(2.000000), r6.x
					                movc r6.x, r3.w, r6.x, r5.w
					                mad r5.w, r3.y, l(2.000000), r6.z
					                movc r6.z, r3.w, r6.z, r5.w
					                if_nz r5.y
					                  if_z r3.z
					                    sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                  else 
					                    mov r7.x, r4.y
					                  endif 
					                  if_z r3.w
					                    sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                  endif 
					                  mad r5.y, -r2.y, l(0.500000), r7.x
					                  movc r4.y, r3.z, r7.x, r5.y
					                  mad r3.z, -r2.y, l(0.500000), r4.x
					                  movc r4.x, r3.w, r4.x, r3.z
					                  ge r3.zw, |r4.yyyx|, r2.zzzz
					                  mad r5.y, -r2.x, l(2.000000), r5.x
					                  movc r5.x, r3.z, r5.x, r5.y
					                  mad r5.y, -r3.y, l(2.000000), r5.z
					                  movc r5.z, r3.z, r5.z, r5.y
					                  not r5.yw, r3.zzzw
					                  or r5.y, r5.w, r5.y
					                  mad r5.w, r2.x, l(2.000000), r6.x
					                  movc r6.x, r3.w, r6.x, r5.w
					                  mad r5.w, r3.y, l(2.000000), r6.z
					                  movc r6.z, r3.w, r6.z, r5.w
					                  if_nz r5.y
					                    if_z r3.z
					                      sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                    else 
					                      mov r7.x, r4.y
					                    endif 
					                    if_z r3.w
					                      sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                    endif 
					                    mad r5.y, -r2.y, l(0.500000), r7.x
					                    movc r4.y, r3.z, r7.x, r5.y
					                    mad r3.z, -r2.y, l(0.500000), r4.x
					                    movc r4.x, r3.w, r4.x, r3.z
					                    ge r3.zw, |r4.yyyx|, r2.zzzz
					                    mad r5.y, -r2.x, l(4.000000), r5.x
					                    movc r5.x, r3.z, r5.x, r5.y
					                    mad r5.y, -r3.y, l(4.000000), r5.z
					                    movc r5.z, r3.z, r5.z, r5.y
					                    not r5.yw, r3.zzzw
					                    or r5.y, r5.w, r5.y
					                    mad r5.w, r2.x, l(4.000000), r6.x
					                    movc r6.x, r3.w, r6.x, r5.w
					                    mad r5.w, r3.y, l(4.000000), r6.z
					                    movc r6.z, r3.w, r6.z, r5.w
					                    if_nz r5.y
					                      if_z r3.z
					                        sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                      else 
					                        mov r7.x, r4.y
					                      endif 
					                      if_z r3.w
					                        sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                      endif 
					                      mad r4.z, -r2.y, l(0.500000), r7.x
					                      movc r4.y, r3.z, r7.x, r4.z
					                      mad r2.y, -r2.y, l(0.500000), r4.x
					                      movc r4.x, r3.w, r4.x, r2.y
					                      ge r2.yz, |r4.yyxy|, r2.zzzz
					                      mad r3.z, -r2.x, l(8.000000), r5.x
					                      movc r5.x, r2.y, r5.x, r3.z
					                      mad r3.z, -r3.y, l(8.000000), r5.z
					                      movc r5.z, r2.y, r5.z, r3.z
					                      mad r2.x, r2.x, l(8.000000), r6.x
					                      movc r6.x, r2.z, r6.x, r2.x
					                      mad r2.x, r3.y, l(8.000000), r6.z
					                      movc r6.z, r2.z, r6.z, r2.x
					                    endif 
					                  endif 
					                endif 
					              endif 
					            endif 
					          endif 
					        endif 
					      endif 
					    endif 
					  endif 
					  add r2.xz, r0.xxyx, -r5.xxzx
					  movc r2.x, r0.w, r2.x, r2.z
					  add r2.yz, -r0.xxyx, r6.xxzx
					  movc r2.y, r0.w, r2.y, r2.z
					  lt r3.yz, r4.yyxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  add r2.z, r2.x, r2.y
					  ine r3.xy, r3.xxxx, r3.yzyy
					  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
					  lt r3.z, r2.x, r2.y
					  min r2.x, r2.y, r2.x
					  movc r2.y, r3.z, r3.x, r3.y
					  mul r0.z, r0.z, r0.z
					  mad r2.x, r2.x, -r2.z, l(0.500000)
					  mul r0.z, r0.z, cb0[7].x
					  and r2.x, r2.x, r2.y
					  max r0.z, r0.z, r2.x
					  mad r2.xy, r0.zzzz, r2.wwww, r0.xyxx
					  movc r3.x, r0.w, r0.x, r2.x
					  movc r3.y, r0.w, r2.y, r0.y
					  sample_l r1.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
					endif 
					mad r0.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r0.xyzw, r0.xyxx, t1.xyzw, s1
					mad r0.x, r0.w, l(2.000000), l(-1.000000)
					lt r0.y, l(0.000000), r0.x
					lt r0.z, r0.x, l(0.000000)
					iadd r0.y, -r0.y, r0.z
					itof r0.y, r0.y
					add r0.x, -|r0.x|, l(1.000000)
					sqrt r0.x, r0.x
					add r0.x, -r0.x, l(1.000000)
					mul r0.x, r0.x, r0.y
					mad o0.xyz, r0.xxxx, l(0.003922, 0.003922, 0.003922, 0.000000), r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "GRAIN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 10
					mad r0.xy, v1.xyxx, cb0[3].xyxx, cb0[3].zwzz
					sample_l r1.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
					mad r2.xyzw, cb0[2].xyxy, l(0.000000, 1.000000, 1.000000, 0.000000), r0.xyxy
					sample_l r3.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
					sample_l r2.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
					mad r4.xyzw, cb0[2].xyxy, l(0.000000, -1.000000, -1.000000, 0.000000), r0.xyxy
					sample_l r5.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
					sample_l r4.xyzw, r4.zwzz, t0.xyzw, s0, l(0.000000)
					max r0.z, r1.y, r3.y
					min r0.w, r1.y, r3.y
					max r0.z, r0.z, r2.y
					min r0.w, r0.w, r2.y
					max r2.x, r4.y, r5.y
					min r2.z, r4.y, r5.y
					max r0.z, r0.z, r2.x
					min r0.w, r0.w, r2.z
					mul r2.x, r0.z, cb0[7].y
					add r0.z, -r0.w, r0.z
					max r0.w, r2.x, cb0[7].z
					ge r0.w, r0.z, r0.w
					if_nz r0.w
					  add r2.xz, r0.xxyx, -cb0[2].xxyx
					  sample_l r6.xyzw, r2.xzxx, t0.xyzw, s0, l(0.000000)
					  add r2.xz, r0.xxyx, cb0[2].xxyx
					  sample_l r7.xyzw, r2.xzxx, t0.xyzw, s0, l(0.000000)
					  mad r8.xyzw, cb0[2].xyxy, l(1.000000, -1.000000, -1.000000, 1.000000), r0.xyxy
					  sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					  sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					  add r0.w, r3.y, r5.y
					  add r2.x, r2.y, r4.y
					  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					  add r2.z, r0.w, r2.x
					  mad r0.w, r1.y, l(-2.000000), r0.w
					  mad r2.x, r1.y, l(-2.000000), r2.x
					  add r2.w, r7.y, r9.y
					  add r3.x, r6.y, r9.y
					  mad r3.z, r2.y, l(-2.000000), r2.w
					  mad r3.x, r5.y, l(-2.000000), r3.x
					  add r3.w, r6.y, r8.y
					  add r4.x, r7.y, r8.y
					  mad r0.w, |r0.w|, l(2.000000), |r3.z|
					  mad r2.x, |r2.x|, l(2.000000), |r3.x|
					  mad r3.x, r4.y, l(-2.000000), r3.w
					  mad r3.z, r3.y, l(-2.000000), r4.x
					  add r0.w, r0.w, |r3.x|
					  add r2.x, r2.x, |r3.z|
					  add r2.w, r2.w, r3.w
					  ge r0.w, r0.w, r2.x
					  mad r2.x, r2.z, l(2.000000), r2.w
					  movc r2.z, r0.w, r5.y, r4.y
					  movc r2.y, r0.w, r3.y, r2.y
					  movc r2.w, r0.w, cb0[2].y, cb0[2].x
					  mad r2.x, r2.x, l(0.083333), -r1.y
					  add r3.xy, -r1.yyyy, r2.zyzz
					  add r2.yz, r1.yyyy, r2.yyzy
					  ge r3.z, |r3.x|, |r3.y|
					  max r3.x, |r3.y|, |r3.x|
					  movc r2.w, r3.z, -r2.w, r2.w
					  mul_sat r0.z, r0.z, |r2.x|
					  and r2.x, r0.w, cb0[2].x
					  movc r3.y, r0.w, l(0), cb0[2].y
					  mad r4.xy, r2.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), r0.xyxx
					  movc r3.w, r0.w, r0.x, r4.x
					  movc r4.x, r0.w, r4.y, r0.y
					  add r5.x, -r2.x, r3.w
					  add r5.y, -r3.y, r4.x
					  add r6.x, r2.x, r3.w
					  add r6.y, r3.y, r4.x
					  mad r3.w, r0.z, l(-2.000000), l(3.000000)
					  sample_l r4.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
					  mul r0.z, r0.z, r0.z
					  sample_l r7.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
					  movc r2.y, r3.z, r2.z, r2.y
					  mul r2.z, r3.x, l(0.250000)
					  mad r3.x, -r2.y, l(0.500000), r1.y
					  mul r0.z, r0.z, r3.w
					  lt r3.x, r3.x, l(0.000000)
					  mad r4.y, -r2.y, l(0.500000), r4.y
					  mad r4.x, -r2.y, l(0.500000), r7.y
					  ge r3.zw, |r4.yyyx|, r2.zzzz
					  add r5.z, -r2.x, r5.x
					  movc r5.x, r3.z, r5.x, r5.z
					  add r5.w, -r3.y, r5.y
					  movc r5.z, r3.z, r5.y, r5.w
					  not r5.yw, r3.zzzw
					  or r5.y, r5.w, r5.y
					  add r5.w, r2.x, r6.x
					  movc r6.x, r3.w, r6.x, r5.w
					  add r5.w, r3.y, r6.y
					  movc r6.z, r3.w, r6.y, r5.w
					  if_nz r5.y
					    if_z r3.z
					      sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					    else 
					      mov r7.x, r4.y
					    endif 
					    if_z r3.w
					      sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					    endif 
					    mad r5.y, -r2.y, l(0.500000), r7.x
					    movc r4.y, r3.z, r7.x, r5.y
					    mad r3.z, -r2.y, l(0.500000), r4.x
					    movc r4.x, r3.w, r4.x, r3.z
					    ge r3.zw, |r4.yyyx|, r2.zzzz
					    add r5.y, -r2.x, r5.x
					    movc r5.x, r3.z, r5.x, r5.y
					    add r5.y, -r3.y, r5.z
					    movc r5.z, r3.z, r5.z, r5.y
					    not r5.yw, r3.zzzw
					    or r5.y, r5.w, r5.y
					    add r5.w, r2.x, r6.x
					    movc r6.x, r3.w, r6.x, r5.w
					    add r5.w, r3.y, r6.z
					    movc r6.z, r3.w, r6.z, r5.w
					    if_nz r5.y
					      if_z r3.z
					        sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					      else 
					        mov r7.x, r4.y
					      endif 
					      if_z r3.w
					        sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					      endif 
					      mad r5.y, -r2.y, l(0.500000), r7.x
					      movc r4.y, r3.z, r7.x, r5.y
					      mad r3.z, -r2.y, l(0.500000), r4.x
					      movc r4.x, r3.w, r4.x, r3.z
					      ge r3.zw, |r4.yyyx|, r2.zzzz
					      add r5.y, -r2.x, r5.x
					      movc r5.x, r3.z, r5.x, r5.y
					      add r5.y, -r3.y, r5.z
					      movc r5.z, r3.z, r5.z, r5.y
					      not r5.yw, r3.zzzw
					      or r5.y, r5.w, r5.y
					      add r5.w, r2.x, r6.x
					      movc r6.x, r3.w, r6.x, r5.w
					      add r5.w, r3.y, r6.z
					      movc r6.z, r3.w, r6.z, r5.w
					      if_nz r5.y
					        if_z r3.z
					          sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					        else 
					          mov r7.x, r4.y
					        endif 
					        if_z r3.w
					          sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					        endif 
					        mad r5.y, -r2.y, l(0.500000), r7.x
					        movc r4.y, r3.z, r7.x, r5.y
					        mad r3.z, -r2.y, l(0.500000), r4.x
					        movc r4.x, r3.w, r4.x, r3.z
					        ge r3.zw, |r4.yyyx|, r2.zzzz
					        add r5.y, -r2.x, r5.x
					        movc r5.x, r3.z, r5.x, r5.y
					        add r5.y, -r3.y, r5.z
					        movc r5.z, r3.z, r5.z, r5.y
					        not r5.yw, r3.zzzw
					        or r5.y, r5.w, r5.y
					        add r5.w, r2.x, r6.x
					        movc r6.x, r3.w, r6.x, r5.w
					        add r5.w, r3.y, r6.z
					        movc r6.z, r3.w, r6.z, r5.w
					        if_nz r5.y
					          if_z r3.z
					            sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					          else 
					            mov r7.x, r4.y
					          endif 
					          if_z r3.w
					            sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					          endif 
					          mad r5.y, -r2.y, l(0.500000), r7.x
					          movc r4.y, r3.z, r7.x, r5.y
					          mad r3.z, -r2.y, l(0.500000), r4.x
					          movc r4.x, r3.w, r4.x, r3.z
					          ge r3.zw, |r4.yyyx|, r2.zzzz
					          mad r5.y, -r2.x, l(1.500000), r5.x
					          movc r5.x, r3.z, r5.x, r5.y
					          mad r5.y, -r3.y, l(1.500000), r5.z
					          movc r5.z, r3.z, r5.z, r5.y
					          not r5.yw, r3.zzzw
					          or r5.y, r5.w, r5.y
					          mad r5.w, r2.x, l(1.500000), r6.x
					          movc r6.x, r3.w, r6.x, r5.w
					          mad r5.w, r3.y, l(1.500000), r6.z
					          movc r6.z, r3.w, r6.z, r5.w
					          if_nz r5.y
					            if_z r3.z
					              sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					            else 
					              mov r7.x, r4.y
					            endif 
					            if_z r3.w
					              sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					            endif 
					            mad r5.y, -r2.y, l(0.500000), r7.x
					            movc r4.y, r3.z, r7.x, r5.y
					            mad r3.z, -r2.y, l(0.500000), r4.x
					            movc r4.x, r3.w, r4.x, r3.z
					            ge r3.zw, |r4.yyyx|, r2.zzzz
					            mad r5.y, -r2.x, l(2.000000), r5.x
					            movc r5.x, r3.z, r5.x, r5.y
					            mad r5.y, -r3.y, l(2.000000), r5.z
					            movc r5.z, r3.z, r5.z, r5.y
					            not r5.yw, r3.zzzw
					            or r5.y, r5.w, r5.y
					            mad r5.w, r2.x, l(2.000000), r6.x
					            movc r6.x, r3.w, r6.x, r5.w
					            mad r5.w, r3.y, l(2.000000), r6.z
					            movc r6.z, r3.w, r6.z, r5.w
					            if_nz r5.y
					              if_z r3.z
					                sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					              else 
					                mov r7.x, r4.y
					              endif 
					              if_z r3.w
					                sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					              endif 
					              mad r5.y, -r2.y, l(0.500000), r7.x
					              movc r4.y, r3.z, r7.x, r5.y
					              mad r3.z, -r2.y, l(0.500000), r4.x
					              movc r4.x, r3.w, r4.x, r3.z
					              ge r3.zw, |r4.yyyx|, r2.zzzz
					              mad r5.y, -r2.x, l(2.000000), r5.x
					              movc r5.x, r3.z, r5.x, r5.y
					              mad r5.y, -r3.y, l(2.000000), r5.z
					              movc r5.z, r3.z, r5.z, r5.y
					              not r5.yw, r3.zzzw
					              or r5.y, r5.w, r5.y
					              mad r5.w, r2.x, l(2.000000), r6.x
					              movc r6.x, r3.w, r6.x, r5.w
					              mad r5.w, r3.y, l(2.000000), r6.z
					              movc r6.z, r3.w, r6.z, r5.w
					              if_nz r5.y
					                if_z r3.z
					                  sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                else 
					                  mov r7.x, r4.y
					                endif 
					                if_z r3.w
					                  sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                endif 
					                mad r5.y, -r2.y, l(0.500000), r7.x
					                movc r4.y, r3.z, r7.x, r5.y
					                mad r3.z, -r2.y, l(0.500000), r4.x
					                movc r4.x, r3.w, r4.x, r3.z
					                ge r3.zw, |r4.yyyx|, r2.zzzz
					                mad r5.y, -r2.x, l(2.000000), r5.x
					                movc r5.x, r3.z, r5.x, r5.y
					                mad r5.y, -r3.y, l(2.000000), r5.z
					                movc r5.z, r3.z, r5.z, r5.y
					                not r5.yw, r3.zzzw
					                or r5.y, r5.w, r5.y
					                mad r5.w, r2.x, l(2.000000), r6.x
					                movc r6.x, r3.w, r6.x, r5.w
					                mad r5.w, r3.y, l(2.000000), r6.z
					                movc r6.z, r3.w, r6.z, r5.w
					                if_nz r5.y
					                  if_z r3.z
					                    sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                  else 
					                    mov r7.x, r4.y
					                  endif 
					                  if_z r3.w
					                    sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                  endif 
					                  mad r5.y, -r2.y, l(0.500000), r7.x
					                  movc r4.y, r3.z, r7.x, r5.y
					                  mad r3.z, -r2.y, l(0.500000), r4.x
					                  movc r4.x, r3.w, r4.x, r3.z
					                  ge r3.zw, |r4.yyyx|, r2.zzzz
					                  mad r5.y, -r2.x, l(2.000000), r5.x
					                  movc r5.x, r3.z, r5.x, r5.y
					                  mad r5.y, -r3.y, l(2.000000), r5.z
					                  movc r5.z, r3.z, r5.z, r5.y
					                  not r5.yw, r3.zzzw
					                  or r5.y, r5.w, r5.y
					                  mad r5.w, r2.x, l(2.000000), r6.x
					                  movc r6.x, r3.w, r6.x, r5.w
					                  mad r5.w, r3.y, l(2.000000), r6.z
					                  movc r6.z, r3.w, r6.z, r5.w
					                  if_nz r5.y
					                    if_z r3.z
					                      sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                    else 
					                      mov r7.x, r4.y
					                    endif 
					                    if_z r3.w
					                      sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                    endif 
					                    mad r5.y, -r2.y, l(0.500000), r7.x
					                    movc r4.y, r3.z, r7.x, r5.y
					                    mad r3.z, -r2.y, l(0.500000), r4.x
					                    movc r4.x, r3.w, r4.x, r3.z
					                    ge r3.zw, |r4.yyyx|, r2.zzzz
					                    mad r5.y, -r2.x, l(4.000000), r5.x
					                    movc r5.x, r3.z, r5.x, r5.y
					                    mad r5.y, -r3.y, l(4.000000), r5.z
					                    movc r5.z, r3.z, r5.z, r5.y
					                    not r5.yw, r3.zzzw
					                    or r5.y, r5.w, r5.y
					                    mad r5.w, r2.x, l(4.000000), r6.x
					                    movc r6.x, r3.w, r6.x, r5.w
					                    mad r5.w, r3.y, l(4.000000), r6.z
					                    movc r6.z, r3.w, r6.z, r5.w
					                    if_nz r5.y
					                      if_z r3.z
					                        sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                      else 
					                        mov r7.x, r4.y
					                      endif 
					                      if_z r3.w
					                        sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                      endif 
					                      mad r4.z, -r2.y, l(0.500000), r7.x
					                      movc r4.y, r3.z, r7.x, r4.z
					                      mad r2.y, -r2.y, l(0.500000), r4.x
					                      movc r4.x, r3.w, r4.x, r2.y
					                      ge r2.yz, |r4.yyxy|, r2.zzzz
					                      mad r3.z, -r2.x, l(8.000000), r5.x
					                      movc r5.x, r2.y, r5.x, r3.z
					                      mad r3.z, -r3.y, l(8.000000), r5.z
					                      movc r5.z, r2.y, r5.z, r3.z
					                      mad r2.x, r2.x, l(8.000000), r6.x
					                      movc r6.x, r2.z, r6.x, r2.x
					                      mad r2.x, r3.y, l(8.000000), r6.z
					                      movc r6.z, r2.z, r6.z, r2.x
					                    endif 
					                  endif 
					                endif 
					              endif 
					            endif 
					          endif 
					        endif 
					      endif 
					    endif 
					  endif 
					  add r2.xz, r0.xxyx, -r5.xxzx
					  movc r2.x, r0.w, r2.x, r2.z
					  add r2.yz, -r0.xxyx, r6.xxzx
					  movc r2.y, r0.w, r2.y, r2.z
					  lt r3.yz, r4.yyxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  add r2.z, r2.x, r2.y
					  ine r3.xy, r3.xxxx, r3.yzyy
					  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
					  lt r3.z, r2.x, r2.y
					  min r2.x, r2.y, r2.x
					  movc r2.y, r3.z, r3.x, r3.y
					  mul r0.z, r0.z, r0.z
					  mad r2.x, r2.x, -r2.z, l(0.500000)
					  mul r0.z, r0.z, cb0[7].x
					  and r2.x, r2.x, r2.y
					  max r0.z, r0.z, r2.x
					  mad r2.xy, r0.zzzz, r2.wwww, r0.xyxx
					  movc r3.x, r0.w, r0.x, r2.x
					  movc r3.y, r0.w, r2.y, r0.y
					  sample_l r1.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
					endif 
					mad r0.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r0.xyzw, r0.xyxx, t1.xyzw, s1
					dp3 r0.w, r1.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
					sqrt r0.w, r0.w
					mad r0.w, cb0[4].x, -r0.w, l(1.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, cb0[4].yyyy
					mad o0.xyz, r0.xyzx, r0.wwww, r1.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "GRAIN" "DITHERING" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 10
					mad r0.xy, v1.xyxx, cb0[3].xyxx, cb0[3].zwzz
					sample_l r1.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
					mad r2.xyzw, cb0[2].xyxy, l(0.000000, 1.000000, 1.000000, 0.000000), r0.xyxy
					sample_l r3.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
					sample_l r2.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
					mad r4.xyzw, cb0[2].xyxy, l(0.000000, -1.000000, -1.000000, 0.000000), r0.xyxy
					sample_l r5.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
					sample_l r4.xyzw, r4.zwzz, t0.xyzw, s0, l(0.000000)
					max r0.z, r1.y, r3.y
					min r0.w, r1.y, r3.y
					max r0.z, r0.z, r2.y
					min r0.w, r0.w, r2.y
					max r2.x, r4.y, r5.y
					min r2.z, r4.y, r5.y
					max r0.z, r0.z, r2.x
					min r0.w, r0.w, r2.z
					mul r2.x, r0.z, cb0[7].y
					add r0.z, -r0.w, r0.z
					max r0.w, r2.x, cb0[7].z
					ge r0.w, r0.z, r0.w
					if_nz r0.w
					  add r2.xz, r0.xxyx, -cb0[2].xxyx
					  sample_l r6.xyzw, r2.xzxx, t0.xyzw, s0, l(0.000000)
					  add r2.xz, r0.xxyx, cb0[2].xxyx
					  sample_l r7.xyzw, r2.xzxx, t0.xyzw, s0, l(0.000000)
					  mad r8.xyzw, cb0[2].xyxy, l(1.000000, -1.000000, -1.000000, 1.000000), r0.xyxy
					  sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					  sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					  add r0.w, r3.y, r5.y
					  add r2.x, r2.y, r4.y
					  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					  add r2.z, r0.w, r2.x
					  mad r0.w, r1.y, l(-2.000000), r0.w
					  mad r2.x, r1.y, l(-2.000000), r2.x
					  add r2.w, r7.y, r9.y
					  add r3.x, r6.y, r9.y
					  mad r3.z, r2.y, l(-2.000000), r2.w
					  mad r3.x, r5.y, l(-2.000000), r3.x
					  add r3.w, r6.y, r8.y
					  add r4.x, r7.y, r8.y
					  mad r0.w, |r0.w|, l(2.000000), |r3.z|
					  mad r2.x, |r2.x|, l(2.000000), |r3.x|
					  mad r3.x, r4.y, l(-2.000000), r3.w
					  mad r3.z, r3.y, l(-2.000000), r4.x
					  add r0.w, r0.w, |r3.x|
					  add r2.x, r2.x, |r3.z|
					  add r2.w, r2.w, r3.w
					  ge r0.w, r0.w, r2.x
					  mad r2.x, r2.z, l(2.000000), r2.w
					  movc r2.z, r0.w, r5.y, r4.y
					  movc r2.y, r0.w, r3.y, r2.y
					  movc r2.w, r0.w, cb0[2].y, cb0[2].x
					  mad r2.x, r2.x, l(0.083333), -r1.y
					  add r3.xy, -r1.yyyy, r2.zyzz
					  add r2.yz, r1.yyyy, r2.yyzy
					  ge r3.z, |r3.x|, |r3.y|
					  max r3.x, |r3.y|, |r3.x|
					  movc r2.w, r3.z, -r2.w, r2.w
					  mul_sat r0.z, r0.z, |r2.x|
					  and r2.x, r0.w, cb0[2].x
					  movc r3.y, r0.w, l(0), cb0[2].y
					  mad r4.xy, r2.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), r0.xyxx
					  movc r3.w, r0.w, r0.x, r4.x
					  movc r4.x, r0.w, r4.y, r0.y
					  add r5.x, -r2.x, r3.w
					  add r5.y, -r3.y, r4.x
					  add r6.x, r2.x, r3.w
					  add r6.y, r3.y, r4.x
					  mad r3.w, r0.z, l(-2.000000), l(3.000000)
					  sample_l r4.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
					  mul r0.z, r0.z, r0.z
					  sample_l r7.xyzw, r6.xyxx, t0.xyzw, s0, l(0.000000)
					  movc r2.y, r3.z, r2.z, r2.y
					  mul r2.z, r3.x, l(0.250000)
					  mad r3.x, -r2.y, l(0.500000), r1.y
					  mul r0.z, r0.z, r3.w
					  lt r3.x, r3.x, l(0.000000)
					  mad r4.y, -r2.y, l(0.500000), r4.y
					  mad r4.x, -r2.y, l(0.500000), r7.y
					  ge r3.zw, |r4.yyyx|, r2.zzzz
					  add r5.z, -r2.x, r5.x
					  movc r5.x, r3.z, r5.x, r5.z
					  add r5.w, -r3.y, r5.y
					  movc r5.z, r3.z, r5.y, r5.w
					  not r5.yw, r3.zzzw
					  or r5.y, r5.w, r5.y
					  add r5.w, r2.x, r6.x
					  movc r6.x, r3.w, r6.x, r5.w
					  add r5.w, r3.y, r6.y
					  movc r6.z, r3.w, r6.y, r5.w
					  if_nz r5.y
					    if_z r3.z
					      sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					    else 
					      mov r7.x, r4.y
					    endif 
					    if_z r3.w
					      sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					    endif 
					    mad r5.y, -r2.y, l(0.500000), r7.x
					    movc r4.y, r3.z, r7.x, r5.y
					    mad r3.z, -r2.y, l(0.500000), r4.x
					    movc r4.x, r3.w, r4.x, r3.z
					    ge r3.zw, |r4.yyyx|, r2.zzzz
					    add r5.y, -r2.x, r5.x
					    movc r5.x, r3.z, r5.x, r5.y
					    add r5.y, -r3.y, r5.z
					    movc r5.z, r3.z, r5.z, r5.y
					    not r5.yw, r3.zzzw
					    or r5.y, r5.w, r5.y
					    add r5.w, r2.x, r6.x
					    movc r6.x, r3.w, r6.x, r5.w
					    add r5.w, r3.y, r6.z
					    movc r6.z, r3.w, r6.z, r5.w
					    if_nz r5.y
					      if_z r3.z
					        sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					      else 
					        mov r7.x, r4.y
					      endif 
					      if_z r3.w
					        sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					      endif 
					      mad r5.y, -r2.y, l(0.500000), r7.x
					      movc r4.y, r3.z, r7.x, r5.y
					      mad r3.z, -r2.y, l(0.500000), r4.x
					      movc r4.x, r3.w, r4.x, r3.z
					      ge r3.zw, |r4.yyyx|, r2.zzzz
					      add r5.y, -r2.x, r5.x
					      movc r5.x, r3.z, r5.x, r5.y
					      add r5.y, -r3.y, r5.z
					      movc r5.z, r3.z, r5.z, r5.y
					      not r5.yw, r3.zzzw
					      or r5.y, r5.w, r5.y
					      add r5.w, r2.x, r6.x
					      movc r6.x, r3.w, r6.x, r5.w
					      add r5.w, r3.y, r6.z
					      movc r6.z, r3.w, r6.z, r5.w
					      if_nz r5.y
					        if_z r3.z
					          sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					        else 
					          mov r7.x, r4.y
					        endif 
					        if_z r3.w
					          sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					        endif 
					        mad r5.y, -r2.y, l(0.500000), r7.x
					        movc r4.y, r3.z, r7.x, r5.y
					        mad r3.z, -r2.y, l(0.500000), r4.x
					        movc r4.x, r3.w, r4.x, r3.z
					        ge r3.zw, |r4.yyyx|, r2.zzzz
					        add r5.y, -r2.x, r5.x
					        movc r5.x, r3.z, r5.x, r5.y
					        add r5.y, -r3.y, r5.z
					        movc r5.z, r3.z, r5.z, r5.y
					        not r5.yw, r3.zzzw
					        or r5.y, r5.w, r5.y
					        add r5.w, r2.x, r6.x
					        movc r6.x, r3.w, r6.x, r5.w
					        add r5.w, r3.y, r6.z
					        movc r6.z, r3.w, r6.z, r5.w
					        if_nz r5.y
					          if_z r3.z
					            sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					          else 
					            mov r7.x, r4.y
					          endif 
					          if_z r3.w
					            sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					          endif 
					          mad r5.y, -r2.y, l(0.500000), r7.x
					          movc r4.y, r3.z, r7.x, r5.y
					          mad r3.z, -r2.y, l(0.500000), r4.x
					          movc r4.x, r3.w, r4.x, r3.z
					          ge r3.zw, |r4.yyyx|, r2.zzzz
					          mad r5.y, -r2.x, l(1.500000), r5.x
					          movc r5.x, r3.z, r5.x, r5.y
					          mad r5.y, -r3.y, l(1.500000), r5.z
					          movc r5.z, r3.z, r5.z, r5.y
					          not r5.yw, r3.zzzw
					          or r5.y, r5.w, r5.y
					          mad r5.w, r2.x, l(1.500000), r6.x
					          movc r6.x, r3.w, r6.x, r5.w
					          mad r5.w, r3.y, l(1.500000), r6.z
					          movc r6.z, r3.w, r6.z, r5.w
					          if_nz r5.y
					            if_z r3.z
					              sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					            else 
					              mov r7.x, r4.y
					            endif 
					            if_z r3.w
					              sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					            endif 
					            mad r5.y, -r2.y, l(0.500000), r7.x
					            movc r4.y, r3.z, r7.x, r5.y
					            mad r3.z, -r2.y, l(0.500000), r4.x
					            movc r4.x, r3.w, r4.x, r3.z
					            ge r3.zw, |r4.yyyx|, r2.zzzz
					            mad r5.y, -r2.x, l(2.000000), r5.x
					            movc r5.x, r3.z, r5.x, r5.y
					            mad r5.y, -r3.y, l(2.000000), r5.z
					            movc r5.z, r3.z, r5.z, r5.y
					            not r5.yw, r3.zzzw
					            or r5.y, r5.w, r5.y
					            mad r5.w, r2.x, l(2.000000), r6.x
					            movc r6.x, r3.w, r6.x, r5.w
					            mad r5.w, r3.y, l(2.000000), r6.z
					            movc r6.z, r3.w, r6.z, r5.w
					            if_nz r5.y
					              if_z r3.z
					                sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					              else 
					                mov r7.x, r4.y
					              endif 
					              if_z r3.w
					                sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					              endif 
					              mad r5.y, -r2.y, l(0.500000), r7.x
					              movc r4.y, r3.z, r7.x, r5.y
					              mad r3.z, -r2.y, l(0.500000), r4.x
					              movc r4.x, r3.w, r4.x, r3.z
					              ge r3.zw, |r4.yyyx|, r2.zzzz
					              mad r5.y, -r2.x, l(2.000000), r5.x
					              movc r5.x, r3.z, r5.x, r5.y
					              mad r5.y, -r3.y, l(2.000000), r5.z
					              movc r5.z, r3.z, r5.z, r5.y
					              not r5.yw, r3.zzzw
					              or r5.y, r5.w, r5.y
					              mad r5.w, r2.x, l(2.000000), r6.x
					              movc r6.x, r3.w, r6.x, r5.w
					              mad r5.w, r3.y, l(2.000000), r6.z
					              movc r6.z, r3.w, r6.z, r5.w
					              if_nz r5.y
					                if_z r3.z
					                  sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                else 
					                  mov r7.x, r4.y
					                endif 
					                if_z r3.w
					                  sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                endif 
					                mad r5.y, -r2.y, l(0.500000), r7.x
					                movc r4.y, r3.z, r7.x, r5.y
					                mad r3.z, -r2.y, l(0.500000), r4.x
					                movc r4.x, r3.w, r4.x, r3.z
					                ge r3.zw, |r4.yyyx|, r2.zzzz
					                mad r5.y, -r2.x, l(2.000000), r5.x
					                movc r5.x, r3.z, r5.x, r5.y
					                mad r5.y, -r3.y, l(2.000000), r5.z
					                movc r5.z, r3.z, r5.z, r5.y
					                not r5.yw, r3.zzzw
					                or r5.y, r5.w, r5.y
					                mad r5.w, r2.x, l(2.000000), r6.x
					                movc r6.x, r3.w, r6.x, r5.w
					                mad r5.w, r3.y, l(2.000000), r6.z
					                movc r6.z, r3.w, r6.z, r5.w
					                if_nz r5.y
					                  if_z r3.z
					                    sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                  else 
					                    mov r7.x, r4.y
					                  endif 
					                  if_z r3.w
					                    sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                  endif 
					                  mad r5.y, -r2.y, l(0.500000), r7.x
					                  movc r4.y, r3.z, r7.x, r5.y
					                  mad r3.z, -r2.y, l(0.500000), r4.x
					                  movc r4.x, r3.w, r4.x, r3.z
					                  ge r3.zw, |r4.yyyx|, r2.zzzz
					                  mad r5.y, -r2.x, l(2.000000), r5.x
					                  movc r5.x, r3.z, r5.x, r5.y
					                  mad r5.y, -r3.y, l(2.000000), r5.z
					                  movc r5.z, r3.z, r5.z, r5.y
					                  not r5.yw, r3.zzzw
					                  or r5.y, r5.w, r5.y
					                  mad r5.w, r2.x, l(2.000000), r6.x
					                  movc r6.x, r3.w, r6.x, r5.w
					                  mad r5.w, r3.y, l(2.000000), r6.z
					                  movc r6.z, r3.w, r6.z, r5.w
					                  if_nz r5.y
					                    if_z r3.z
					                      sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                    else 
					                      mov r7.x, r4.y
					                    endif 
					                    if_z r3.w
					                      sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                    endif 
					                    mad r5.y, -r2.y, l(0.500000), r7.x
					                    movc r4.y, r3.z, r7.x, r5.y
					                    mad r3.z, -r2.y, l(0.500000), r4.x
					                    movc r4.x, r3.w, r4.x, r3.z
					                    ge r3.zw, |r4.yyyx|, r2.zzzz
					                    mad r5.y, -r2.x, l(4.000000), r5.x
					                    movc r5.x, r3.z, r5.x, r5.y
					                    mad r5.y, -r3.y, l(4.000000), r5.z
					                    movc r5.z, r3.z, r5.z, r5.y
					                    not r5.yw, r3.zzzw
					                    or r5.y, r5.w, r5.y
					                    mad r5.w, r2.x, l(4.000000), r6.x
					                    movc r6.x, r3.w, r6.x, r5.w
					                    mad r5.w, r3.y, l(4.000000), r6.z
					                    movc r6.z, r3.w, r6.z, r5.w
					                    if_nz r5.y
					                      if_z r3.z
					                        sample_l r7.xyzw, r5.xzxx, t0.yxzw, s0, l(0.000000)
					                      else 
					                        mov r7.x, r4.y
					                      endif 
					                      if_z r3.w
					                        sample_l r4.xyzw, r6.xzxx, t0.yxzw, s0, l(0.000000)
					                      endif 
					                      mad r4.z, -r2.y, l(0.500000), r7.x
					                      movc r4.y, r3.z, r7.x, r4.z
					                      mad r2.y, -r2.y, l(0.500000), r4.x
					                      movc r4.x, r3.w, r4.x, r2.y
					                      ge r2.yz, |r4.yyxy|, r2.zzzz
					                      mad r3.z, -r2.x, l(8.000000), r5.x
					                      movc r5.x, r2.y, r5.x, r3.z
					                      mad r3.z, -r3.y, l(8.000000), r5.z
					                      movc r5.z, r2.y, r5.z, r3.z
					                      mad r2.x, r2.x, l(8.000000), r6.x
					                      movc r6.x, r2.z, r6.x, r2.x
					                      mad r2.x, r3.y, l(8.000000), r6.z
					                      movc r6.z, r2.z, r6.z, r2.x
					                    endif 
					                  endif 
					                endif 
					              endif 
					            endif 
					          endif 
					        endif 
					      endif 
					    endif 
					  endif 
					  add r2.xz, r0.xxyx, -r5.xxzx
					  movc r2.x, r0.w, r2.x, r2.z
					  add r2.yz, -r0.xxyx, r6.xxzx
					  movc r2.y, r0.w, r2.y, r2.z
					  lt r3.yz, r4.yyxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  add r2.z, r2.x, r2.y
					  ine r3.xy, r3.xxxx, r3.yzyy
					  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
					  lt r3.z, r2.x, r2.y
					  min r2.x, r2.y, r2.x
					  movc r2.y, r3.z, r3.x, r3.y
					  mul r0.z, r0.z, r0.z
					  mad r2.x, r2.x, -r2.z, l(0.500000)
					  mul r0.z, r0.z, cb0[7].x
					  and r2.x, r2.x, r2.y
					  max r0.z, r0.z, r2.x
					  mad r2.xy, r0.zzzz, r2.wwww, r0.xyxx
					  movc r3.x, r0.w, r0.x, r2.x
					  movc r3.y, r0.w, r2.y, r0.y
					  sample_l r1.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
					endif 
					mad r0.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r0.xyzw, r0.xyxx, t1.xyzw, s1
					dp3 r0.w, r1.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
					sqrt r0.w, r0.w
					mad r0.w, cb0[4].x, -r0.w, l(1.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul r0.xyz, r0.xyzx, cb0[4].yyyy
					mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
					mad r1.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
					sample r1.xyzw, r1.xyxx, t2.xyzw, s2
					mad r0.w, r1.w, l(2.000000), l(-1.000000)
					lt r1.x, l(0.000000), r0.w
					lt r1.y, r0.w, l(0.000000)
					iadd r1.x, -r1.x, r1.y
					itof r1.x, r1.x
					add r0.w, -|r0.w|, l(1.000000)
					sqrt r0.w, r0.w
					add r0.w, -r0.w, l(1.000000)
					mul r0.w, r0.w, r1.x
					mad o0.xyz, r0.wwww, l(0.003922, 0.003922, 0.003922, 0.000000), r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}