Shader "Hidden/Post FX/Depth Of Field" {
	Properties {
		_MainTex ("", 2D) = "black" {}
	}
	SubShader {
		Pass {
			Name "COC CALCULATION"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 49232
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.x, cb1[7].z, r0.x, cb1[7].w
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					add r0.y, r0.x, -cb0[4].x
					max r0.x, r0.x, l(0.000010)
					mul r0.y, r0.y, cb0[4].y
					div r0.x, r0.y, r0.x
					mul r0.x, r0.x, l(0.500000)
					mad r0.x, r0.x, cb0[4].w, l(0.500000)
					mov_sat o0.xyzw, r0.xxxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "COC TEMPORAL FILTER"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 125785
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xy, cb0[2].yyyy, l(-0.000000, -1.000000, 0.000000, 0.000000)
					mul r1.xy, cb0[2].xyxx, l(-1.000000, -0.000000, 0.000000, 0.000000)
					mov r2.x, l(0)
					add r2.yw, v1.xxxy, -cb0[5].yyyz
					sample_indexable(texture2d)(float,float,float,float) r2.z, r2.ywyy, t2.yzxw, s2
					mad r2.yw, -cb0[2].xxxy, l(0.000000, 0.500000, 0.000000, 0.500000), v1.xxxy
					gather4_indexable(texture2d)(float,float,float,float) r2.yw, r2.ywyy, t2.yxwz, s2.x
					mov r1.z, r2.y
					lt r0.w, r2.y, r2.z
					movc r1.xyz, r0.wwww, r1.xyzx, r2.xxzx
					lt r0.w, r2.w, r1.z
					mov r0.z, r2.w
					movc r0.xyw, r0.wwww, r0.xyxz, r1.xyxz
					mul r1.xy, cb0[2].yyyy, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r2.xw, cb0[2].xxxy, l(0.500000, 0.000000, 0.000000, 0.500000), v1.xxxy
					gather4_indexable(texture2d)(float,float,float,float) r2.xw, r2.xwxx, t2.xywz, s2.x
					lt r1.w, r2.x, r0.w
					mov r1.z, r2.x
					movc r0.xyw, r1.wwww, r1.xyxz, r0.xyxw
					lt r1.x, r2.w, r0.w
					mul r3.xy, cb0[2].xyxx, l(1.000000, 0.000000, 0.000000, 0.000000)
					mov r3.z, r2.w
					movc r0.xyw, r1.xxxx, r3.xyxz, r0.xyxw
					add r0.xy, r0.xyxx, v1.xyxx
					sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t1.xyzw, s1
					add r0.xy, -r0.xyxx, v1.xyxx
					sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0
					max r0.y, r2.y, r2.z
					max r0.xy, r0.wzww, r0.xyxx
					max r0.y, r2.x, r0.y
					max r0.y, r3.z, r0.y
					min r0.x, r0.y, r0.x
					add r0.x, -r2.z, r0.x
					mad o0.xyzw, cb0[5].wwww, r0.xxxx, r2.zzzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DOWNSAMPLE AND PREFILTER"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 145501
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!DX11VertexSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 7
					gather4_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.zwzz, t1.xyzw, s1.x
					mad r0.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
					min r1.x, r0.w, r0.z
					min r1.y, r0.y, r1.x
					max r1.x, r0.y, r1.x
					max r1.x, r0.x, r1.x
					min r1.y, r0.x, r1.y
					lt r1.z, r1.x, -r1.y
					movc r1.x, r1.z, r1.y, r1.x
					mul r1.x, r1.x, cb0[4].z
					add r1.y, cb0[2].y, cb0[2].y
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					mul_sat r1.y, r1.y, |r1.x|
					mov o0.w, r1.x
					mad r1.x, r1.y, l(-2.000000), l(3.000000)
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.y, r1.x
					gather4_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0.x
					mov r3.x, r2.y
					gather4_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xzyw, s0.y
					mov r3.y, r4.z
					gather4_indexable(texture2d)(float,float,float,float) r5.xyzw, v1.xyxx, t0.xywz, s0.z
					mov r3.z, r5.y
					max r6.xyzw, r4.xzyw, r5.xywz
					max r6.xyzw, r2.xyzw, r6.xyzw
					add r6.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, |r0.xyzw|, r6.xyzw
					mul r1.yzw, r0.yyyy, r3.xxyz
					mov r3.x, r2.x
					mov r3.y, r4.x
					mov r3.z, r5.x
					mad r1.yzw, r3.xxyz, r0.xxxx, r1.yyzw
					mov r4.x, r2.z
					mov r5.x, r2.w
					mov r5.y, r4.w
					mov r4.z, r5.w
					mad r1.yzw, r4.xxyz, r0.zzzz, r1.yyzw
					mad r1.yzw, r5.xxyz, r0.wwww, r1.yyzw
					add r0.x, r0.y, r0.x
					add r0.x, r0.z, r0.x
					add r0.x, r0.w, r0.x
					max r0.x, r0.x, l(0.000010)
					div r0.xyz, r1.yzwy, r0.xxxx
					mul o0.xyz, r1.xxxx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!DX11PixelSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 7
					gather4_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.zwzz, t1.xyzw, s1.x
					mad r0.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
					min r1.x, r0.w, r0.z
					min r1.y, r0.y, r1.x
					max r1.x, r0.y, r1.x
					max r1.x, r0.x, r1.x
					min r1.y, r0.x, r1.y
					lt r1.z, r1.x, -r1.y
					movc r1.x, r1.z, r1.y, r1.x
					mul r1.x, r1.x, cb0[4].z
					add r1.y, cb0[2].y, cb0[2].y
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					mul_sat r1.y, r1.y, |r1.x|
					mov o0.w, r1.x
					mad r1.x, r1.y, l(-2.000000), l(3.000000)
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.y, r1.x
					gather4_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0.x
					mov r3.x, r2.y
					gather4_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xzyw, s0.y
					mov r3.y, r4.z
					gather4_indexable(texture2d)(float,float,float,float) r5.xyzw, v1.xyxx, t0.xywz, s0.z
					mov r3.z, r5.y
					max r6.xyzw, r4.xzyw, r5.xywz
					max r6.xyzw, r2.xyzw, r6.xyzw
					add r6.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, |r0.xyzw|, r6.xyzw
					mul r1.yzw, r0.yyyy, r3.xxyz
					mov r3.x, r2.x
					mov r3.y, r4.x
					mov r3.z, r5.x
					mad r1.yzw, r3.xxyz, r0.xxxx, r1.yyzw
					mov r4.x, r2.z
					mov r5.x, r2.w
					mov r5.y, r4.w
					mov r4.z, r5.w
					mad r1.yzw, r4.xxyz, r0.zzzz, r1.yyzw
					mad r1.yzw, r5.xxyz, r0.wwww, r1.yyzw
					add r0.x, r0.y, r0.x
					add r0.x, r0.z, r0.x
					add r0.x, r0.w, r0.x
					max r0.x, r0.x, l(0.000010)
					div r0.xyz, r1.yzwy, r0.xxxx
					mul r0.xyz, r1.xxxx, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul o0.xyz, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (SMALL)"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 209603
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.545455, 0, 0, 0},
					                              { 0.168555, 0.518758, 0, 0},
					                              { -0.441282, 0.320610, 0, 0},
					                              { -0.441282, -0.320610, 0, 0},
					                              { 0.168555, -0.518758, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.809017, 0.587785, 0, 0},
					                              { 0.309017, 0.951057, 0, 0},
					                              { -0.309017, 0.951056, 0, 0},
					                              { -0.809017, 0.587785, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.809017, -0.587785, 0, 0},
					                              { -0.309017, -0.951057, 0, 0},
					                              { 0.309017, -0.951056, 0, 0},
					                              { 0.809017, -0.587785, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(16)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.196350)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (MEDIUM)"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 280275
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.533333, 0, 0, 0},
					                              { 0.332528, 0.416977, 0, 0},
					                              { -0.118678, 0.519962, 0, 0},
					                              { -0.480517, 0.231405, 0, 0},
					                              { -0.480517, -0.231405, 0, 0},
					                              { -0.118678, -0.519962, 0, 0},
					                              { 0.332528, -0.416977, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.900969, 0.433884, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.222521, 0.974928, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.623490, 0.781831, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.623490, -0.781832, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0.222521, -0.974928, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.900969, -0.433884, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(22)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.142800)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (LARGE)"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 383297
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.363636, 0, 0, 0},
					                              { 0.226724, 0.284302, 0, 0},
					                              { -0.080917, 0.354519, 0, 0},
					                              { -0.327625, 0.157776, 0, 0},
					                              { -0.327625, -0.157776, 0, 0},
					                              { -0.080917, -0.354519, 0, 0},
					                              { 0.226724, -0.284302, 0, 0},
					                              { 0.681818, 0, 0, 0},
					                              { 0.614297, 0.295830, 0, 0},
					                              { 0.425107, 0.533067, 0, 0},
					                              { 0.151719, 0.664724, 0, 0},
					                              { -0.151719, 0.664724, 0, 0},
					                              { -0.425107, 0.533067, 0, 0},
					                              { -0.614297, 0.295830, 0, 0},
					                              { -0.681818, 0, 0, 0},
					                              { -0.614297, -0.295830, 0, 0},
					                              { -0.425107, -0.533067, 0, 0},
					                              { -0.151719, -0.664724, 0, 0},
					                              { 0.151719, -0.664724, 0, 0},
					                              { 0.425107, -0.533067, 0, 0},
					                              { 0.614297, -0.295830, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.955573, 0.294755, 0, 0},
					                              { 0.826239, 0.563320, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.365341, 0.930874, 0, 0},
					                              { 0.074730, 0.997204, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.500000, 0.866025, 0, 0},
					                              { -0.733052, 0.680173, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -0.988831, 0.149042, 0, 0},
					                              { -0.988831, -0.149042, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.733052, -0.680173, 0, 0},
					                              { -0.500000, -0.866025, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0.074730, -0.997204, 0, 0},
					                              { 0.365341, -0.930874, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.826239, -0.563320, 0, 0},
					                              { 0.955573, -0.294755, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(43)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.073060)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (VERY LARGE)"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 394737
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.275862, 0, 0, 0},
					                              { 0.171997, 0.215678, 0, 0},
					                              { -0.061385, 0.268946, 0, 0},
					                              { -0.248543, 0.119692, 0, 0},
					                              { -0.248543, -0.119692, 0, 0},
					                              { -0.061385, -0.268946, 0, 0},
					                              { 0.171997, -0.215678, 0, 0},
					                              { 0.517241, 0, 0, 0},
					                              { 0.466018, 0.224423, 0, 0},
					                              { 0.322495, 0.404396, 0, 0},
					                              { 0.115097, 0.504273, 0, 0},
					                              { -0.115097, 0.504273, 0, 0},
					                              { -0.322495, 0.404396, 0, 0},
					                              { -0.466018, 0.224423, 0, 0},
					                              { -0.517241, 0, 0, 0},
					                              { -0.466018, -0.224423, 0, 0},
					                              { -0.322495, -0.404396, 0, 0},
					                              { -0.115097, -0.504273, 0, 0},
					                              { 0.115097, -0.504273, 0, 0},
					                              { 0.322495, -0.404396, 0, 0},
					                              { 0.466018, -0.224423, 0, 0},
					                              { 0.758621, 0, 0, 0},
					                              { 0.724917, 0.223607, 0, 0},
					                              { 0.626802, 0.427346, 0, 0},
					                              { 0.472992, 0.593114, 0, 0},
					                              { 0.277155, 0.706180, 0, 0},
					                              { 0.056692, 0.756499, 0, 0},
					                              { -0.168809, 0.739600, 0, 0},
					                              { -0.379310, 0.656985, 0, 0},
					                              { -0.556108, 0.515993, 0, 0},
					                              { -0.683494, 0.329153, 0, 0},
					                              { -0.750148, 0.113066, 0, 0},
					                              { -0.750148, -0.113067, 0, 0},
					                              { -0.683494, -0.329153, 0, 0},
					                              { -0.556108, -0.515993, 0, 0},
					                              { -0.379310, -0.656985, 0, 0},
					                              { -0.168809, -0.739600, 0, 0},
					                              { 0.056692, -0.756499, 0, 0},
					                              { 0.277156, -0.706180, 0, 0},
					                              { 0.472992, -0.593114, 0, 0},
					                              { 0.626802, -0.427346, 0, 0},
					                              { 0.724917, -0.223607, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.974928, 0.222521, 0, 0},
					                              { 0.900969, 0.433884, 0, 0},
					                              { 0.781832, 0.623490, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.433884, 0.900969, 0, 0},
					                              { 0.222521, 0.974928, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.433884, 0.900969, 0, 0},
					                              { -0.623490, 0.781831, 0, 0},
					                              { -0.781832, 0.623490, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -0.974928, 0.222521, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.974928, -0.222521, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.781831, -0.623490, 0, 0},
					                              { -0.623490, -0.781832, 0, 0},
					                              { -0.433883, -0.900969, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0, -1.000000, 0, 0},
					                              { 0.222521, -0.974928, 0, 0},
					                              { 0.433883, -0.900969, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.781831, -0.623490, 0, 0},
					                              { 0.900969, -0.433884, 0, 0},
					                              { 0.974928, -0.222521, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(71)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.044248)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "POSTFILTER"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 516055
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.xyxy
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					add r0.xyzw, r0.xyzw, r1.xyzw
					mad r1.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
					sample r2.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					add r0.xyzw, r0.xyzw, r2.xyzw
					add r0.xyzw, r1.xyzw, r0.xyzw
					mul o0.xyzw, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Pass {
			Name "COC CALCULATION"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 584794
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.x, cb1[7].z, r0.x, cb1[7].w
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					add r0.y, r0.x, -cb0[4].x
					max r0.x, r0.x, l(0.000010)
					mul r0.y, r0.y, cb0[4].y
					div r0.x, r0.y, r0.x
					mul r0.x, r0.x, l(0.500000)
					mad r0.x, r0.x, cb0[4].w, l(0.500000)
					mov_sat o0.xyzw, r0.xxxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "COC TEMPORAL FILTER"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 610647
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					mul r0.xy, cb0[2].yyyy, l(-0.000000, -1.000000, 0.000000, 0.000000)
					add r1.xy, v1.xyxx, -cb0[5].yzyy
					sample r1.xyzw, r1.xyxx, t0.xyzw, s2
					mad r2.xyzw, -cb0[2].xyyy, l(1.000000, 0.000000, 0.000000, 1.000000), v1.xyxy
					sample r3.xyzw, r2.xyxx, t0.xyzw, s2
					sample r2.xyzw, r2.zwzz, t0.xyzw, s2
					lt r0.w, r3.x, r1.x
					movc r4.z, r0.w, r3.x, r1.x
					max r1.y, r1.x, r3.x
					max r1.y, r2.x, r1.y
					lt r1.z, r2.x, r4.z
					mov r0.z, r2.x
					mul r2.xy, cb0[2].xyxx, l(1.000000, 0.000000, 0.000000, 0.000000)
					mov r2.zw, -r2.xxxy
					and r4.xy, r0.wwww, r2.zwzz
					movc r0.xyz, r1.zzzz, r0.xyzx, r4.xyzx
					mul r3.xy, cb0[2].yyyy, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r4.xyzw, cb0[2].yyxy, l(0.000000, 1.000000, 1.000000, 0.000000), v1.xyxy
					sample r5.xyzw, r4.xyxx, t0.xyzw, s2
					sample r4.xyzw, r4.zwzz, t0.xyzw, s2
					lt r0.w, r5.x, r0.z
					mov r3.z, r5.x
					max r1.y, r1.y, r5.x
					max r1.y, r4.x, r1.y
					movc r0.xyz, r0.wwww, r3.xyzx, r0.xyzx
					lt r0.w, r4.x, r0.z
					min r0.z, r4.x, r0.z
					movc r0.xy, r0.wwww, r2.xyxx, r0.xyxx
					add r0.xy, r0.xyxx, v1.xyxx
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					add r0.xy, -r2.xyxx, v1.xyxx
					sample r2.xyzw, r0.xyxx, t2.xyzw, s0
					max r0.x, r0.z, r2.x
					min r0.x, r1.y, r0.x
					add r0.x, -r1.x, r0.x
					mad o0.xyzw, cb0[5].wwww, r0.xxxx, r1.xxxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DOWNSAMPLE AND PREFILTER"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 700288
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.xyxy
					sample r1.xyzw, r0.zwzz, t0.xyzw, s0
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					max r0.w, r1.z, r1.y
					max r0.w, r0.w, r1.x
					add r0.w, r0.w, l(1.000000)
					mad r2.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.zwzw
					sample r3.xyzw, r2.zwzz, t1.xyzw, s1
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					mad r1.w, r2.x, l(2.000000), l(-1.000000)
					mad r2.x, r3.x, l(2.000000), l(-1.000000)
					div r0.w, |r2.x|, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r2.y, r0.z, r0.y
					max r2.y, r0.x, r2.y
					add r2.y, r2.y, l(1.000000)
					div r2.y, |r1.w|, r2.y
					mad r0.xyz, r0.xyzx, r2.yyyy, r1.xyzx
					add r0.w, r0.w, r2.y
					mad r3.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s0
					sample r3.xyzw, r3.zwzz, t0.xyzw, s0
					max r1.x, r4.z, r4.y
					max r1.x, r1.x, r4.x
					add r1.x, r1.x, l(1.000000)
					mad r5.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.zwzw
					sample r6.xyzw, r5.xyxx, t1.xyzw, s1
					sample r5.xyzw, r5.zwzz, t1.xyzw, s1
					mad r1.y, r5.x, l(2.000000), l(-1.000000)
					mad r1.z, r6.x, l(2.000000), l(-1.000000)
					div r1.x, |r1.z|, r1.x
					min r1.z, r1.y, r1.z
					mad r0.xyz, r4.xyzx, r1.xxxx, r0.xyzx
					add r0.w, r0.w, r1.x
					max r1.x, r3.z, r3.y
					max r1.x, r1.x, r3.x
					add r1.x, r1.x, l(1.000000)
					div r1.x, |r1.y|, r1.x
					mad r0.xyz, r3.xyzx, r1.xxxx, r0.xyzx
					add r0.w, r0.w, r1.x
					max r0.w, r0.w, l(0.000010)
					div r0.xyz, r0.xyzx, r0.wwww
					min r0.w, r1.z, r2.x
					max r1.x, r1.z, r2.x
					max r1.x, r1.x, r1.w
					min r0.w, r0.w, r1.w
					lt r1.y, r1.x, -r0.w
					movc r0.w, r1.y, r0.w, r1.x
					mul r0.w, r0.w, cb0[4].z
					add r1.x, cb0[2].y, cb0[2].y
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r1.x, |r0.w|, r1.x
					mov o0.w, r0.w
					mad r0.w, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r0.w, r0.w, r1.x
					mul o0.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.xyxy
					sample r1.xyzw, r0.zwzz, t0.xyzw, s0
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					max r0.w, r1.z, r1.y
					max r0.w, r0.w, r1.x
					add r0.w, r0.w, l(1.000000)
					mad r2.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.zwzw
					sample r3.xyzw, r2.zwzz, t1.xyzw, s1
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					mad r1.w, r2.x, l(2.000000), l(-1.000000)
					mad r2.x, r3.x, l(2.000000), l(-1.000000)
					div r0.w, |r2.x|, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r2.y, r0.z, r0.y
					max r2.y, r0.x, r2.y
					add r2.y, r2.y, l(1.000000)
					div r2.y, |r1.w|, r2.y
					mad r0.xyz, r0.xyzx, r2.yyyy, r1.xyzx
					add r0.w, r0.w, r2.y
					mad r3.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s0
					sample r3.xyzw, r3.zwzz, t0.xyzw, s0
					max r1.x, r4.z, r4.y
					max r1.x, r1.x, r4.x
					add r1.x, r1.x, l(1.000000)
					mad r5.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.zwzw
					sample r6.xyzw, r5.xyxx, t1.xyzw, s1
					sample r5.xyzw, r5.zwzz, t1.xyzw, s1
					mad r1.y, r5.x, l(2.000000), l(-1.000000)
					mad r1.z, r6.x, l(2.000000), l(-1.000000)
					div r1.x, |r1.z|, r1.x
					min r1.z, r1.y, r1.z
					mad r0.xyz, r4.xyzx, r1.xxxx, r0.xyzx
					add r0.w, r0.w, r1.x
					max r1.x, r3.z, r3.y
					max r1.x, r1.x, r3.x
					add r1.x, r1.x, l(1.000000)
					div r1.x, |r1.y|, r1.x
					mad r0.xyz, r3.xyzx, r1.xxxx, r0.xyzx
					add r0.w, r0.w, r1.x
					max r0.w, r0.w, l(0.000010)
					div r0.xyz, r0.xyzx, r0.wwww
					min r0.w, r1.z, r2.x
					max r1.x, r1.z, r2.x
					max r1.x, r1.x, r1.w
					min r0.w, r0.w, r1.w
					lt r1.y, r1.x, -r0.w
					movc r0.w, r1.y, r0.w, r1.x
					mul r0.w, r0.w, cb0[4].z
					add r1.x, cb0[2].y, cb0[2].y
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r1.x, |r0.w|, r1.x
					mov o0.w, r0.w
					mad r0.w, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r0.w, r0.w, r1.x
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul o0.xyz, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (SMALL)"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 757278
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.545455, 0, 0, 0},
					                              { 0.168555, 0.518758, 0, 0},
					                              { -0.441282, 0.320610, 0, 0},
					                              { -0.441282, -0.320610, 0, 0},
					                              { 0.168555, -0.518758, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.809017, 0.587785, 0, 0},
					                              { 0.309017, 0.951057, 0, 0},
					                              { -0.309017, 0.951056, 0, 0},
					                              { -0.809017, 0.587785, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.809017, -0.587785, 0, 0},
					                              { -0.309017, -0.951057, 0, 0},
					                              { 0.309017, -0.951056, 0, 0},
					                              { 0.809017, -0.587785, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(16)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.196350)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (MEDIUM)"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 827133
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.533333, 0, 0, 0},
					                              { 0.332528, 0.416977, 0, 0},
					                              { -0.118678, 0.519962, 0, 0},
					                              { -0.480517, 0.231405, 0, 0},
					                              { -0.480517, -0.231405, 0, 0},
					                              { -0.118678, -0.519962, 0, 0},
					                              { 0.332528, -0.416977, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.900969, 0.433884, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.222521, 0.974928, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.623490, 0.781831, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.623490, -0.781832, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0.222521, -0.974928, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.900969, -0.433884, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(22)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.142800)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (LARGE)"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 871973
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.363636, 0, 0, 0},
					                              { 0.226724, 0.284302, 0, 0},
					                              { -0.080917, 0.354519, 0, 0},
					                              { -0.327625, 0.157776, 0, 0},
					                              { -0.327625, -0.157776, 0, 0},
					                              { -0.080917, -0.354519, 0, 0},
					                              { 0.226724, -0.284302, 0, 0},
					                              { 0.681818, 0, 0, 0},
					                              { 0.614297, 0.295830, 0, 0},
					                              { 0.425107, 0.533067, 0, 0},
					                              { 0.151719, 0.664724, 0, 0},
					                              { -0.151719, 0.664724, 0, 0},
					                              { -0.425107, 0.533067, 0, 0},
					                              { -0.614297, 0.295830, 0, 0},
					                              { -0.681818, 0, 0, 0},
					                              { -0.614297, -0.295830, 0, 0},
					                              { -0.425107, -0.533067, 0, 0},
					                              { -0.151719, -0.664724, 0, 0},
					                              { 0.151719, -0.664724, 0, 0},
					                              { 0.425107, -0.533067, 0, 0},
					                              { 0.614297, -0.295830, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.955573, 0.294755, 0, 0},
					                              { 0.826239, 0.563320, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.365341, 0.930874, 0, 0},
					                              { 0.074730, 0.997204, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.500000, 0.866025, 0, 0},
					                              { -0.733052, 0.680173, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -0.988831, 0.149042, 0, 0},
					                              { -0.988831, -0.149042, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.733052, -0.680173, 0, 0},
					                              { -0.500000, -0.866025, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0.074730, -0.997204, 0, 0},
					                              { 0.365341, -0.930874, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.826239, -0.563320, 0, 0},
					                              { 0.955573, -0.294755, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(43)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.073060)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (VERY LARGE)"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 943894
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.275862, 0, 0, 0},
					                              { 0.171997, 0.215678, 0, 0},
					                              { -0.061385, 0.268946, 0, 0},
					                              { -0.248543, 0.119692, 0, 0},
					                              { -0.248543, -0.119692, 0, 0},
					                              { -0.061385, -0.268946, 0, 0},
					                              { 0.171997, -0.215678, 0, 0},
					                              { 0.517241, 0, 0, 0},
					                              { 0.466018, 0.224423, 0, 0},
					                              { 0.322495, 0.404396, 0, 0},
					                              { 0.115097, 0.504273, 0, 0},
					                              { -0.115097, 0.504273, 0, 0},
					                              { -0.322495, 0.404396, 0, 0},
					                              { -0.466018, 0.224423, 0, 0},
					                              { -0.517241, 0, 0, 0},
					                              { -0.466018, -0.224423, 0, 0},
					                              { -0.322495, -0.404396, 0, 0},
					                              { -0.115097, -0.504273, 0, 0},
					                              { 0.115097, -0.504273, 0, 0},
					                              { 0.322495, -0.404396, 0, 0},
					                              { 0.466018, -0.224423, 0, 0},
					                              { 0.758621, 0, 0, 0},
					                              { 0.724917, 0.223607, 0, 0},
					                              { 0.626802, 0.427346, 0, 0},
					                              { 0.472992, 0.593114, 0, 0},
					                              { 0.277155, 0.706180, 0, 0},
					                              { 0.056692, 0.756499, 0, 0},
					                              { -0.168809, 0.739600, 0, 0},
					                              { -0.379310, 0.656985, 0, 0},
					                              { -0.556108, 0.515993, 0, 0},
					                              { -0.683494, 0.329153, 0, 0},
					                              { -0.750148, 0.113066, 0, 0},
					                              { -0.750148, -0.113067, 0, 0},
					                              { -0.683494, -0.329153, 0, 0},
					                              { -0.556108, -0.515993, 0, 0},
					                              { -0.379310, -0.656985, 0, 0},
					                              { -0.168809, -0.739600, 0, 0},
					                              { 0.056692, -0.756499, 0, 0},
					                              { 0.277156, -0.706180, 0, 0},
					                              { 0.472992, -0.593114, 0, 0},
					                              { 0.626802, -0.427346, 0, 0},
					                              { 0.724917, -0.223607, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.974928, 0.222521, 0, 0},
					                              { 0.900969, 0.433884, 0, 0},
					                              { 0.781832, 0.623490, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.433884, 0.900969, 0, 0},
					                              { 0.222521, 0.974928, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.433884, 0.900969, 0, 0},
					                              { -0.623490, 0.781831, 0, 0},
					                              { -0.781832, 0.623490, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -0.974928, 0.222521, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.974928, -0.222521, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.781831, -0.623490, 0, 0},
					                              { -0.623490, -0.781832, 0, 0},
					                              { -0.433883, -0.900969, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0, -1.000000, 0, 0},
					                              { 0.222521, -0.974928, 0, 0},
					                              { 0.433883, -0.900969, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.781831, -0.623490, 0, 0},
					                              { 0.900969, -0.433884, 0, 0},
					                              { 0.974928, -0.222521, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(71)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.044248)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "POSTFILTER"
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 1001319
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.xyxy
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					add r0.xyzw, r0.xyzw, r1.xyzw
					mad r1.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
					sample r2.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					add r0.xyzw, r0.xyzw, r2.xyzw
					add r0.xyzw, r1.xyzw, r0.xyzw
					mul o0.xyzw, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}