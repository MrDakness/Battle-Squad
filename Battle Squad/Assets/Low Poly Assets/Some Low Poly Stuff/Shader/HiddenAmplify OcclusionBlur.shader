Shader "Hidden/Amplify Occlusion/Blur" {
	Properties {
	}
	SubShader {
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 37794
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xy  
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad o0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.zw, l(0,0,0,1.000000)
					mad r0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o1.xy, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 2
					mov r0.x, cb0[4].x
					mov r0.y, l(0)
					add r0.zw, r0.xxxy, v1.xxxy
					add r0.xy, -r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t0.zywx, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					mov r1.xz, r0.yyxy
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.zw, -r1.xxxy, r0.yyyy
					add_sat r1.x, -r0.y, l(1.000000)
					add r1.x, r1.x, l(0.010000)
					mul r1.x, r1.x, cb0[6].x
					mul r0.zw, r0.zzzw, r1.xxxx
					mad r0.zw, -r0.zzzw, r0.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000)
					exp r0.zw, r0.zzzw
					dp2 r1.x, r1.zwzz, r0.zwzz
					dp2 r0.z, l(1.000000, 1.000000, 0.000000, 0.000000), r0.zwzz
					add r0.z, r0.z, l(1.000000)
					add r0.x, r0.x, r1.x
					mov o0.y, r0.y
					div o0.x, r0.x, r0.z
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 108937
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xy  
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad o0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.zw, l(0,0,0,1.000000)
					mad r0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o1.xy, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 2
					mov r0.x, l(0)
					mov r0.y, cb0[4].y
					add r0.zw, r0.xxxy, v1.xxxy
					add r0.xy, -r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t0.zywx, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					mov r1.xz, r0.yyxy
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.zw, -r1.xxxy, r0.yyyy
					add_sat r1.x, -r0.y, l(1.000000)
					add r1.x, r1.x, l(0.010000)
					mul r1.x, r1.x, cb0[6].x
					mul r0.zw, r0.zzzw, r1.xxxx
					mad r0.zw, -r0.zzzw, r0.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000)
					exp r0.zw, r0.zzzw
					dp2 r1.x, r1.zwzz, r0.zwzz
					dp2 r0.z, l(1.000000, 1.000000, 0.000000, 0.000000), r0.zwzz
					add r0.z, r0.z, l(1.000000)
					add r0.x, r0.x, r1.x
					mov o0.y, r0.y
					div o0.x, r0.x, r0.z
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 159418
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xy  
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad o0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.zw, l(0,0,0,1.000000)
					mad r0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o1.xy, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 4
					mov r0.xz, cb0[4].xxxx
					mov r0.yw, l(0,2.000000,0,0)
					add r1.xy, r0.zwzz, v1.xyxx
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					mov r2.x, r1.y
					add r0.zw, -r0.zzzw, v1.xxxy
					sample r3.xyzw, r0.zwzz, t0.xyzw, s0
					mov r2.y, r3.y
					mov r1.y, r3.x
					mad r0.zw, r0.xxxy, l(0.000000, 0.000000, 2.000000, 0.000000), v1.xxxy
					mad r0.xy, -r0.xyxx, l(2.000000, 0.000000, 0.000000, 0.000000), v1.xyxx
					sample r3.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					mov r2.z, r0.y
					mov r1.z, r0.x
					mov r2.w, r3.y
					mov r1.w, r3.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r2.xyzw, -r2.xyzw, r0.yyyy
					add_sat r0.z, -r0.y, l(1.000000)
					add r0.z, r0.z, l(0.010000)
					mul r0.z, r0.z, cb0[6].x
					mul r2.xyzw, r0.zzzz, r2.xyzw
					mad r2.xyzw, -r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -2.000000, -2.000000)
					exp r2.xyzw, r2.xyzw
					dp4 r0.z, r1.xyzw, r2.xyzw
					dp4 r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					add r0.w, r0.w, l(1.000000)
					add r0.x, r0.z, r0.x
					mov o0.y, r0.y
					div o0.x, r0.x, r0.w
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 198093
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xy  
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad o0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.zw, l(0,0,0,1.000000)
					mad r0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o1.xy, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 4
					mov r0.x, l(0)
					mov r0.y, cb0[4].y
					add r0.zw, r0.xxxy, v1.xxxy
					sample r1.xyzw, r0.zwzz, t0.xyzw, s0
					mov r2.x, r1.y
					add r0.zw, -r0.xxxy, v1.xxxy
					sample r3.xyzw, r0.zwzz, t0.xyzw, s0
					mov r2.y, r3.y
					mov r1.y, r3.x
					mad r0.zw, l(0.000000, 0.000000, 2.000000, 2.000000), r0.xxxy, v1.xxxy
					mad r0.xy, l(-2.000000, -2.000000, -0.000000, -0.000000), r0.xyxx, v1.xyxx
					sample r3.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					mov r2.z, r0.y
					mov r1.z, r0.x
					mov r2.w, r3.y
					mov r1.w, r3.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r2.xyzw, -r2.xyzw, r0.yyyy
					add_sat r0.z, -r0.y, l(1.000000)
					add r0.z, r0.z, l(0.010000)
					mul r0.z, r0.z, cb0[6].x
					mul r2.xyzw, r0.zzzz, r2.xyzw
					mad r2.xyzw, -r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -2.000000, -2.000000)
					exp r2.xyzw, r2.xyzw
					dp4 r0.z, r1.xyzw, r2.xyzw
					dp4 r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					add r0.w, r0.w, l(1.000000)
					add r0.x, r0.z, r0.x
					mov o0.y, r0.y
					div o0.x, r0.x, r0.w
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 264689
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xy  
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad o0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.zw, l(0,0,0,1.000000)
					mad r0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o1.xy, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.x, cb0[4].x
					mov r0.y, l(0)
					add r0.zw, r0.xxxy, v1.xxxy
					add r0.xy, -r0.xyxx, v1.xyxx
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					mov r2.x, r0.y
					mov r2.y, r1.y
					mov r0.y, r1.x
					mov r1.xz, cb0[4].xxxx
					mov r1.yw, l(0,2.000000,0,3.000000)
					mad r3.xyzw, r1.xyzw, l(2.000000, 0.000000, 3.000000, 0.000000), v1.xyxy
					mad r1.xyzw, -r1.zwxy, l(3.000000, 0.000000, 2.000000, 0.000000), v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s0
					sample r3.xyzw, r3.zwzz, t0.yzxw, s0
					mov r2.z, r4.y
					mov r0.z, r4.x
					sample r4.xyzw, r1.zwzz, t0.xyzw, s0
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					mov r3.yw, r1.yyyx
					mov r2.w, r4.y
					mov r0.w, r4.x
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					add r2.xyzw, -r2.xyzw, r1.yyyy
					add_sat r1.z, -r1.y, l(1.000000)
					add r1.z, r1.z, l(0.010000)
					mul r1.z, r1.z, cb0[6].x
					mul r2.xyzw, r1.zzzz, r2.xyzw
					mad r2.xyzw, -r2.xyzw, r2.xyzw, l(-0.222222, -0.222222, -0.888889, -0.888889)
					exp r2.xyzw, r2.xyzw
					dp4 r0.x, r0.xyzw, r2.xyzw
					dp4 r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					add r0.y, r0.y, l(1.000000)
					add r0.x, r0.x, r1.x
					add r0.zw, -r3.xxxy, r1.yyyy
					mov o0.y, r1.y
					mul r0.zw, r1.zzzz, r0.zzzw
					mad r0.zw, -r0.zzzw, r0.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000)
					exp r0.zw, r0.zzzw
					dp2 r1.x, r3.zwzz, r0.zwzz
					dp2 r0.z, l(1.000000, 1.000000, 0.000000, 0.000000), r0.zwzz
					add r0.y, r0.z, r0.y
					add r0.x, r0.x, r1.x
					div o0.x, r0.x, r0.y
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 382618
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xy  
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad o0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.zw, l(0,0,0,1.000000)
					mad r0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o1.xy, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.x, l(0)
					mov r0.y, cb0[4].y
					add r0.zw, r0.xxxy, v1.xxxy
					sample r1.xyzw, r0.zwzz, t0.xyzw, s0
					mov r2.x, r1.y
					add r0.zw, -r0.xxxy, v1.xxxy
					sample r3.xyzw, r0.zwzz, t0.xyzw, s0
					mov r2.y, r3.y
					mov r1.y, r3.x
					mad r3.xyzw, l(2.000000, 2.000000, 3.000000, 3.000000), r0.xyxy, v1.xyxy
					mad r0.xyzw, l(-3.000000, -3.000000, -2.000000, -2.000000), r0.xyxy, v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s0
					sample r3.xyzw, r3.zwzz, t0.yzxw, s0
					mov r2.z, r4.y
					mov r1.z, r4.x
					sample r4.xyzw, r0.zwzz, t0.xyzw, s0
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					mov r3.yw, r0.yyyx
					mov r2.w, r4.y
					mov r1.w, r4.x
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r2.xyzw, -r2.xyzw, r0.yyyy
					add_sat r0.z, -r0.y, l(1.000000)
					add r0.z, r0.z, l(0.010000)
					mul r0.z, r0.z, cb0[6].x
					mul r2.xyzw, r0.zzzz, r2.xyzw
					mad r2.xyzw, -r2.xyzw, r2.xyzw, l(-0.222222, -0.222222, -0.888889, -0.888889)
					exp r2.xyzw, r2.xyzw
					dp4 r0.w, r1.xyzw, r2.xyzw
					dp4 r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					add r1.x, r1.x, l(1.000000)
					add r0.x, r0.w, r0.x
					add r1.yz, -r3.xxyx, r0.yyyy
					mov o0.y, r0.y
					mul r0.yz, r0.zzzz, r1.yyzy
					mad r0.yz, -r0.yyzy, r0.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000)
					exp r0.yz, r0.yyzy
					dp2 r0.w, r3.zwzz, r0.yzyy
					dp2 r0.y, l(1.000000, 1.000000, 0.000000, 0.000000), r0.yzyy
					add r0.y, r0.y, r1.x
					add r0.x, r0.w, r0.x
					div o0.x, r0.x, r0.y
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 451302
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xy  
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad o0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.zw, l(0,0,0,1.000000)
					mad r0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o1.xy, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 7
					mov r0.xz, cb0[4].xxxx
					mov r0.yw, l(0,2.000000,0,3.000000)
					mad r1.xyzw, r0.xyzw, l(2.000000, 0.000000, 3.000000, 0.000000), v1.xyxy
					mad r0.xyzw, -r0.zwxy, l(3.000000, 0.000000, 2.000000, 0.000000), v1.xyxy
					sample r2.xyzw, r1.xyxx, t0.yzxw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					mov r3.z, r2.x
					sample r4.xyzw, r0.zwzz, t0.xyzw, s0
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					mov r3.w, r4.y
					mov r2.w, r4.x
					mov r4.xz, cb0[4].xxxx
					mov r4.yw, l(0,4.000000,0,0)
					add r0.zw, r4.zzzw, v1.xxxy
					sample r5.xyzw, r0.zwzz, t0.xyzw, s0
					mov r3.x, r5.y
					mov r2.x, r5.x
					add r0.zw, -r4.zzzw, v1.xxxy
					sample r5.xyzw, r0.zwzz, t0.xyzw, s0
					mov r3.y, r5.y
					mov r2.y, r5.x
					sample r5.xyzw, v1.xyxx, t0.xyzw, s0
					add r3.xyzw, -r3.xyzw, r5.yyyy
					add_sat r0.z, -r5.y, l(1.000000)
					add r0.z, r0.z, l(0.010000)
					mul r0.z, r0.z, cb0[6].x
					mul r3.xyzw, r0.zzzz, r3.xyzw
					mad r3.xyzw, -r3.xyzw, r3.xyzw, l(-0.125000, -0.125000, -0.500000, -0.500000)
					exp r3.xyzw, r3.xyzw
					dp4 r0.w, r2.xyzw, r3.xyzw
					dp4 r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
					add r2.x, r2.x, l(1.000000)
					add r0.w, r0.w, r5.x
					mov r3.x, r1.y
					mov r3.y, r0.y
					mov r1.y, r0.x
					mad r0.xy, r4.xyxx, l(4.000000, 0.000000, 0.000000, 0.000000), v1.xyxx
					mad r2.yz, -r4.xxyx, l(0.000000, 4.000000, 0.000000, 0.000000), v1.xxyx
					sample r4.xyzw, r2.yzyy, t0.xyzw, s0
					sample r6.xyzw, r0.xyxx, t0.xyzw, s0
					mov r3.z, r6.y
					mov r1.z, r6.x
					mov r3.w, r4.y
					mov r1.w, r4.x
					add r3.xyzw, -r3.xyzw, r5.yyyy
					mov o0.y, r5.y
					mul r3.xyzw, r0.zzzz, r3.xyzw
					mad r3.xyzw, -r3.xyzw, r3.xyzw, l(-1.125000, -1.125000, -2.000000, -2.000000)
					exp r3.xyzw, r3.xyzw
					dp4 r0.x, r1.xyzw, r3.xyzw
					dp4 r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
					add r0.y, r0.y, r2.x
					add r0.x, r0.x, r0.w
					div o0.x, r0.x, r0.y
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 486929
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xy  
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad o0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.zw, l(0,0,0,1.000000)
					mad r0.xy, v0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxyx, l(0.500000, 0.000000, 0.500000, 0.000000)
					add o1.xy, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 7
					mov r0.x, l(0)
					mov r0.y, cb0[4].y
					add r0.zw, r0.xxxy, v1.xxxy
					sample r1.xyzw, r0.zwzz, t0.xyzw, s0
					mov r2.x, r1.y
					add r0.zw, -r0.xxxy, v1.xxxy
					sample r3.xyzw, r0.zwzz, t0.xyzw, s0
					mov r2.y, r3.y
					mov r1.y, r3.x
					mad r3.xyzw, l(2.000000, 2.000000, 3.000000, 3.000000), r0.xyxy, v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s0
					sample r3.xyzw, r3.zwzz, t0.xyzw, s0
					mov r2.z, r4.y
					mov r1.z, r4.x
					mad r4.xyzw, l(-3.000000, -3.000000, -2.000000, -2.000000), r0.xyxy, v1.xyxy
					sample r5.xyzw, r4.zwzz, t0.xyzw, s0
					sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					mov r2.w, r5.y
					mov r1.w, r5.x
					sample r5.xyzw, v1.xyxx, t0.xyzw, s0
					add r2.xyzw, -r2.xyzw, r5.yyyy
					add_sat r0.z, -r5.y, l(1.000000)
					add r0.z, r0.z, l(0.010000)
					mul r0.z, r0.z, cb0[6].x
					mul r2.xyzw, r0.zzzz, r2.xyzw
					mad r2.xyzw, -r2.xyzw, r2.xyzw, l(-0.125000, -0.125000, -0.500000, -0.500000)
					exp r2.xyzw, r2.xyzw
					dp4 r0.w, r1.xyzw, r2.xyzw
					dp4 r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					add r1.x, r1.x, l(1.000000)
					add r0.w, r0.w, r5.x
					mad r1.yz, l(0.000000, 4.000000, 4.000000, 0.000000), r0.xxyx, v1.xxyx
					mad r0.xy, l(-4.000000, -4.000000, -0.000000, -0.000000), r0.xyxx, v1.xyxx
					sample r2.xyzw, r0.xyxx, t0.xzwy, s0
					sample r6.xyzw, r1.yzyy, t0.xyzw, s0
					mov r2.z, r6.y
					mov r3.z, r6.x
					mov r3.w, r2.x
					mov r2.x, r3.y
					mov r2.y, r4.y
					mov r3.y, r4.x
					add r2.xyzw, -r2.xyzw, r5.yyyy
					mov o0.y, r5.y
					mul r2.xyzw, r0.zzzz, r2.xyzw
					mad r2.xyzw, -r2.xyzw, r2.xyzw, l(-1.125000, -1.125000, -2.000000, -2.000000)
					exp r2.xyzw, r2.xyzw
					dp4 r0.x, r3.xyzw, r2.xyzw
					dp4 r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
					add r0.y, r0.y, r1.x
					add r0.x, r0.x, r0.w
					div o0.x, r0.x, r0.y
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}