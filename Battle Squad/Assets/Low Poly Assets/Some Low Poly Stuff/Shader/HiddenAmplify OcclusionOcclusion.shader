Shader "Hidden/Amplify Occlusion/Occlusion" {
	Properties {
	}
	SubShader {
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 45496
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  mul r1.xy, v1.xyxx, cb0[12].zwzz
					  round_pi r1.xy, r1.xyxx
					  add r1.x, -r1.x, r1.y
					  mul r1.x, r1.x, l(0.250000)
					  frc r1.x, r1.x
					  mad r1.x, r1.x, l(0.500000), l(1.000000)
					  mul r1.xyzw, r1.xxxx, cb0[12].xyxy
					  mad r2.xyzw, r1.zwzw, l(1.000000, 0.000000, -1.000000, 0.000000), v1.xyxy
					  sample_l r3.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
					  mad r3.x, cb1[7].z, r3.x, cb1[7].w
					  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
					  mad r4.xyzw, r2.xyzw, cb0[14].xyxy, cb0[14].zwzw
					  mul r3.yz, r3.xxxx, r4.xxyx
					  sample_l r2.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
					  mad r2.x, cb1[7].z, r2.x, cb1[7].w
					  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
					  mul r2.yz, r2.xxxx, r4.zzwz
					  mad r1.xyzw, r1.xyzw, l(0.000000, 1.000000, 0.000000, -1.000000), v1.xyxy
					  sample_l r4.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
					  mad r2.w, cb1[7].z, r4.x, cb1[7].w
					  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
					  mad r5.xyzw, r1.xyzw, cb0[14].xyxy, cb0[14].zwzw
					  mul r4.xz, r4.yyyy, r5.yyxy
					  sample_l r1.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
					  mad r1.x, cb1[7].z, r1.x, cb1[7].w
					  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					  mul r1.xz, r1.yyyy, r5.wwzw
					  add r3.xyz, -r0.xzwx, r3.xyzx
					  add r2.xyz, r0.xzwx, -r2.xyzx
					  add r4.xyz, -r0.wxzw, r4.xyzx
					  add r1.xyz, r0.wxzw, -r1.xyzx
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  dp3 r2.w, r2.xyzx, r2.xyzx
					  lt r1.w, r1.w, r2.w
					  movc r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  dp3 r2.w, r1.xyzx, r1.xyzx
					  lt r1.w, r1.w, r2.w
					  movc r1.xyz, r1.wwww, r4.xyzx, r1.xyzx
					  mul r3.xyz, r1.xyzx, r2.xyzx
					  mad r1.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r1.w, -r0.xzwx, -r0.xzwx
					  rsq r1.w, r1.w
					  mul r2.xyz, -r0.zwxz, r1.wwww
					  dp2 r1.w, r2.xyxx, r2.xyxx
					  add r2.w, r0.x, -cb0[2].x
					  max r2.w, r2.w, l(0.000000)
					  mul_sat r2.w, r2.w, cb0[2].y
					  mov r3.x, cb0[15].w
					  mov r3.y, cb0[16].z
					  add r3.zw, -r3.xxxy, cb0[3].yyyw
					  mad r3.xy, r2.wwww, r3.zwzz, r3.xyxx
					  mul r2.w, r3.x, cb0[15].x
					  div r2.w, r2.w, r0.x
					  min r2.w, r2.w, l(512.000000)
					  max r2.w, r2.w, l(2.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r2.w, r2.w, l(0.333333)
					  mul r3.zw, v1.xxxy, cb0[13].zzzw
					  ftoi r4.xy, r3.zwzz
					  iadd r4.x, -r4.x, r4.y
					  and r4.x, r4.x, l(3)
					  itof r4.x, r4.x
					  round_z r3.zw, r3.zzzw
					  dp2 r3.z, r3.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r3.z, r3.z
					  mul r3.z, r3.z, l(52.982918)
					  frc r3.z, r3.z
					  add r3.z, r3.z, cb0[15].y
					  mad r3.w, r4.x, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r3.z, r3.z, l(1.570796)
					  mov r4.y, l(0)
					  mov r4.w, l(0)
					  mov r5.x, l(0)
					  loop 
					    ige r5.y, r5.x, l(2)
					    breakc_nz r5.y
					    itof r5.y, r5.x
					    mad r5.y, r5.y, l(1.570796), r3.z
					    sincos r4.x, r6.x, r5.y
					    mov r4.z, r6.x
					    mul r5.yzw, r2.yyzx, r4.yyzx
					    mul r6.xyz, r2.zxyz, r4.xyzx
					    mad r6.xyz, r2.yzxy, r4.yzxy, -r6.xyzx
					    dp3 r6.x, -r1.xyzx, r6.xyzx
					    mul r6.x, r1.w, r6.x
					    mul r6.yz, r4.zzxz, cb0[13].xxyx
					    mov r7.xy, l(-1.000000,-1.000000,0,0)
					    mov r6.w, l(0)
					    loop 
					      ige r7.z, r6.w, l(2)
					      breakc_nz r7.z
					      itof r7.z, r6.w
					      add r7.w, r3.w, r7.z
					      mul r7.w, r2.w, r7.w
					      add r7.z, r7.z, l(1.000000)
					      max r7.z, r7.z, r7.w
					      mul r8.xy, r6.yzyy, r7.zzzz
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r7.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r7.zw, r7.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r7.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r7.zw, -r9.xxxy, r7.zzzw, r7.xxxy
					      mad r7.zw, r8.zzzw, r7.zzzw, r8.xxxy
					      lt r8.xy, r7.xyxx, r7.zwzz
					      add r8.zw, -r7.zzzw, r7.xxxy
					      mad r8.zw, r3.yyyy, r8.zzzw, r7.zzzw
					      movc r7.xy, r8.xyxx, r7.zwzz, r8.zwzz
					      iadd r6.w, r6.w, l(1)
					    endloop 
					    mad r5.yzw, r2.zzxy, r4.xxyz, -r5.yyzw
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    rsq r4.x, r4.x
					    mul r5.yzw, r4.xxxx, r5.yyzw
					    mul r6.yzw, r2.zzxy, r5.zzwy
					    mad r6.yzw, r2.yyzx, r5.wwyz, -r6.yyzw
					    dp3 r4.x, -r1.xyzx, r5.yzwy
					    mad r5.yzw, -r5.yyzw, r4.xxxx, -r1.xxyz
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    sqrt r4.x, r4.x
					    add r4.x, r4.x, l(0.000100)
					    dp3 r4.z, r5.yzwy, r2.xyzx
					    div r4.z, r4.z, r4.x
					    max r4.z, r4.z, l(-1.000000)
					    min r4.z, r4.z, l(1.000000)
					    dp3 r5.y, r5.yzwy, r6.yzwy
					    lt r5.z, l(0.000000), r5.y
					    lt r5.y, r5.y, l(0.000000)
					    iadd r5.y, r5.z, -r5.y
					    itof r5.y, r5.y
					    add r5.z, -|r4.z|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r4.z|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r4.z|, l(-0.212114)
					    mad r5.w, r5.w, |r4.z|, l(1.570729)
					    mul r6.y, r5.z, r5.w
					    mad r6.y, r6.y, l(-2.000000), l(3.141593)
					    lt r6.z, r4.z, -r4.z
					    and r6.y, r6.z, r6.y
					    mad r5.z, r5.w, r5.z, r6.y
					    mul r5.w, r5.z, r5.y
					    max r6.yz, r7.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
					    min r6.yz, r6.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					    add r7.zw, -|r6.yyyz|, l(0.000000, 0.000000, 1.000000, 1.000000)
					    sqrt r7.zw, r7.zzzw
					    mad r8.xy, |r6.yzyy|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.zzzw, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.yz, r6.yyzy, -r6.yyzy
					    and r6.yz, r6.yyzy, r8.zzwz
					    mad r6.yz, r8.xxyx, r7.zzwz, r6.yyzy
					    mad r6.y, -r5.y, r5.z, -r6.y
					    max r6.y, r6.y, l(-1.570796)
					    mad r8.x, r5.y, r5.z, r6.y
					    mad r6.y, -r5.y, r5.z, r6.z
					    min r6.y, r6.y, l(1.570796)
					    mad r8.y, r5.y, r5.z, r6.y
					    sincos r5.w, null, r5.w
					    add r6.yz, r8.xxyx, r8.xxyx
					    mad r5.yz, -r5.yyyy, r5.zzzz, r6.yyzy
					    sincos null, r5.yz, r5.yyzy
					    add r5.yz, r4.zzzz, -r5.yyzy
					    mad r5.yz, r6.yyzy, r5.wwww, r5.yyzy
					    mad r4.x, r6.x, r6.x, r4.x
					    mul r4.x, r4.x, l(0.250000)
					    add r4.z, r5.z, r5.y
					    add r4.z, r4.z, cb0[16].y
					    mad r4.w, r4.x, r4.z, r4.w
					    iadd r5.x, r5.x, l(1)
					  endloop 
					  mul_sat r0.y, r4.w, l(0.500000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 84614
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(3.555400, 3.555400, 0.000000, 0.000000), l(-1.777700, -1.777700, 1.000000, 0.000000)
					  dp3 r1.z, r1.xyzx, r1.xyzx
					  div r1.z, l(2.000000), r1.z
					  mul r2.xy, r1.xyxx, r1.zzzz
					  add r1.x, r1.z, l(-1.000000)
					  mov r2.z, -r1.x
					  dp3 r1.x, -r0.xzwx, -r0.xzwx
					  rsq r1.x, r1.x
					  mul r1.xyz, -r0.zwxz, r1.xxxx
					  dp2 r1.w, r1.xyxx, r1.xyxx
					  add r2.w, r0.x, -cb0[2].x
					  max r2.w, r2.w, l(0.000000)
					  mul_sat r2.w, r2.w, cb0[2].y
					  mov r3.x, cb0[15].w
					  mov r3.y, cb0[16].z
					  add r3.zw, -r3.xxxy, cb0[3].yyyw
					  mad r3.xy, r2.wwww, r3.zwzz, r3.xyxx
					  mul r2.w, r3.x, cb0[15].x
					  div r2.w, r2.w, r0.x
					  min r2.w, r2.w, l(512.000000)
					  max r2.w, r2.w, l(2.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r2.w, r2.w, l(0.333333)
					  mul r3.zw, v1.xxxy, cb0[13].zzzw
					  ftoi r4.xy, r3.zwzz
					  iadd r4.x, -r4.x, r4.y
					  and r4.x, r4.x, l(3)
					  itof r4.x, r4.x
					  round_z r3.zw, r3.zzzw
					  dp2 r3.z, r3.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r3.z, r3.z
					  mul r3.z, r3.z, l(52.982918)
					  frc r3.z, r3.z
					  add r3.z, r3.z, cb0[15].y
					  mad r3.w, r4.x, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r3.z, r3.z, l(1.570796)
					  mov r4.y, l(0)
					  mov r4.w, l(0)
					  mov r5.x, l(0)
					  loop 
					    ige r5.y, r5.x, l(2)
					    breakc_nz r5.y
					    itof r5.y, r5.x
					    mad r5.y, r5.y, l(1.570796), r3.z
					    sincos r4.x, r6.x, r5.y
					    mov r4.z, r6.x
					    mul r5.yzw, r1.yyzx, r4.yyzx
					    mul r6.xyz, r1.zxyz, r4.xyzx
					    mad r6.xyz, r1.yzxy, r4.yzxy, -r6.xyzx
					    dp3 r6.x, r2.xyzx, r6.xyzx
					    mul r6.x, r1.w, r6.x
					    mul r6.yz, r4.zzxz, cb0[13].xxyx
					    mov r7.xy, l(-1.000000,-1.000000,0,0)
					    mov r6.w, l(0)
					    loop 
					      ige r7.z, r6.w, l(2)
					      breakc_nz r7.z
					      itof r7.z, r6.w
					      add r7.w, r3.w, r7.z
					      mul r7.w, r2.w, r7.w
					      add r7.z, r7.z, l(1.000000)
					      max r7.z, r7.z, r7.w
					      mul r8.xy, r6.yzyy, r7.zzzz
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r7.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r7.zw, r7.zzzw
					      dp3 r9.x, r9.xyzx, r1.xyzx
					      dp3 r9.y, r8.xyzx, r1.xyzx
					      mul r8.xy, r7.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r7.zw, -r9.xxxy, r7.zzzw, r7.xxxy
					      mad r7.zw, r8.zzzw, r7.zzzw, r8.xxxy
					      lt r8.xy, r7.xyxx, r7.zwzz
					      add r8.zw, -r7.zzzw, r7.xxxy
					      mad r8.zw, r3.yyyy, r8.zzzw, r7.zzzw
					      movc r7.xy, r8.xyxx, r7.zwzz, r8.zwzz
					      iadd r6.w, r6.w, l(1)
					    endloop 
					    mad r5.yzw, r1.zzxy, r4.xxyz, -r5.yyzw
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    rsq r4.x, r4.x
					    mul r5.yzw, r4.xxxx, r5.yyzw
					    mul r6.yzw, r1.zzxy, r5.zzwy
					    mad r6.yzw, r1.yyzx, r5.wwyz, -r6.yyzw
					    dp3 r4.x, r2.xyzx, r5.yzwy
					    mad r5.yzw, -r5.yyzw, r4.xxxx, r2.xxyz
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    sqrt r4.x, r4.x
					    add r4.x, r4.x, l(0.000100)
					    dp3 r4.z, r5.yzwy, r1.xyzx
					    div r4.z, r4.z, r4.x
					    max r4.z, r4.z, l(-1.000000)
					    min r4.z, r4.z, l(1.000000)
					    dp3 r5.y, r5.yzwy, r6.yzwy
					    lt r5.z, l(0.000000), r5.y
					    lt r5.y, r5.y, l(0.000000)
					    iadd r5.y, r5.z, -r5.y
					    itof r5.y, r5.y
					    add r5.z, -|r4.z|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r4.z|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r4.z|, l(-0.212114)
					    mad r5.w, r5.w, |r4.z|, l(1.570729)
					    mul r6.y, r5.z, r5.w
					    mad r6.y, r6.y, l(-2.000000), l(3.141593)
					    lt r6.z, r4.z, -r4.z
					    and r6.y, r6.z, r6.y
					    mad r5.z, r5.w, r5.z, r6.y
					    mul r5.w, r5.z, r5.y
					    max r6.yz, r7.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
					    min r6.yz, r6.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					    add r7.zw, -|r6.yyyz|, l(0.000000, 0.000000, 1.000000, 1.000000)
					    sqrt r7.zw, r7.zzzw
					    mad r8.xy, |r6.yzyy|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.zzzw, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.yz, r6.yyzy, -r6.yyzy
					    and r6.yz, r6.yyzy, r8.zzwz
					    mad r6.yz, r8.xxyx, r7.zzwz, r6.yyzy
					    mad r6.y, -r5.y, r5.z, -r6.y
					    max r6.y, r6.y, l(-1.570796)
					    mad r8.x, r5.y, r5.z, r6.y
					    mad r6.y, -r5.y, r5.z, r6.z
					    min r6.y, r6.y, l(1.570796)
					    mad r8.y, r5.y, r5.z, r6.y
					    sincos r5.w, null, r5.w
					    add r6.yz, r8.xxyx, r8.xxyx
					    mad r5.yz, -r5.yyyy, r5.zzzz, r6.yyzy
					    sincos null, r5.yz, r5.yyzy
					    add r5.yz, r4.zzzz, -r5.yyzy
					    mad r5.yz, r6.yyzy, r5.wwww, r5.yyzy
					    mad r4.x, r6.x, r6.x, r4.x
					    mul r4.x, r4.x, l(0.250000)
					    add r4.z, r5.z, r5.y
					    add r4.z, r4.z, cb0[16].y
					    mad r4.w, r4.x, r4.z, r4.w
					    iadd r5.x, r5.x, l(1)
					  endloop 
					  mul_sat r0.y, r4.w, l(0.500000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 167182
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
					  mul r2.xyz, r1.yyyy, cb0[5].xyzx
					  mad r1.xyw, cb0[4].xyxz, r1.xxxx, r2.xyxz
					  mad r1.xyz, cb0[6].xyzx, r1.zzzz, r1.xywx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r2.x, -r0.xzwx, -r0.xzwx
					  rsq r2.x, r2.x
					  mul r2.xyz, -r0.zwxz, r2.xxxx
					  dp2 r2.w, r2.xyxx, r2.xyxx
					  add r3.x, r0.x, -cb0[2].x
					  max r3.x, r3.x, l(0.000000)
					  mul_sat r3.x, r3.x, cb0[2].y
					  mov r4.x, cb0[15].w
					  mov r4.y, cb0[16].z
					  add r3.yz, -r4.xxyx, cb0[3].yywy
					  mad r3.xy, r3.xxxx, r3.yzyy, r4.xyxx
					  mul r3.z, r3.x, cb0[15].x
					  div r3.z, r3.z, r0.x
					  min r3.z, r3.z, l(512.000000)
					  max r3.z, r3.z, l(2.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r3.z, r3.z, l(0.333333)
					  mul r4.xy, v1.xyxx, cb0[13].zwzz
					  ftoi r4.zw, r4.xxxy
					  iadd r3.w, -r4.z, r4.w
					  and r3.w, r3.w, l(3)
					  itof r3.w, r3.w
					  round_z r4.xy, r4.xyxx
					  dp2 r4.x, r4.xyxx, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r4.x, r4.x
					  mul r4.x, r4.x, l(52.982918)
					  frc r4.x, r4.x
					  add r4.x, r4.x, cb0[15].y
					  mad r3.w, r3.w, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r4.x, r4.x, l(1.570796)
					  mov r5.y, l(0)
					  mov r1.w, -r1.z
					  mov r1.z, l(0)
					  mov r4.y, l(0)
					  loop 
					    ige r4.z, r4.y, l(2)
					    breakc_nz r4.z
					    itof r4.z, r4.y
					    mad r4.z, r4.z, l(1.570796), r4.x
					    sincos r5.x, r6.x, r4.z
					    mov r5.z, r6.x
					    mul r6.xyz, r2.yzxy, r5.yzxy
					    mul r7.xyz, r2.zxyz, r5.xyzx
					    mad r7.xyz, r2.yzxy, r5.yzxy, -r7.xyzx
					    dp3 r4.z, r1.xywx, r7.xyzx
					    mul r4.z, r2.w, r4.z
					    mul r7.xy, r5.zxzz, cb0[13].xyxx
					    mov r7.zw, l(0,0,-1.000000,-1.000000)
					    mov r4.w, l(0)
					    loop 
					      ige r5.w, r4.w, l(2)
					      breakc_nz r5.w
					      itof r5.w, r4.w
					      add r6.w, r3.w, r5.w
					      mul r6.w, r3.z, r6.w
					      add r5.w, r5.w, l(1.000000)
					      max r5.w, r5.w, r6.w
					      mul r8.xy, r5.wwww, r7.xyxx
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r10.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r10.zw, r10.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r10.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r9.xy, -r9.xyxx, r10.zwzz, r7.zwzz
					      mad r8.xy, r8.zwzz, r9.xyxx, r8.xyxx
					      lt r8.zw, r7.zzzw, r8.xxxy
					      add r9.xy, r7.zwzz, -r8.xyxx
					      mad r9.xy, r3.yyyy, r9.xyxx, r8.xyxx
					      movc r7.zw, r8.zzzw, r8.xxxy, r9.xxxy
					      iadd r4.w, r4.w, l(1)
					    endloop 
					    mad r5.xzw, r2.zzxy, r5.xxyz, -r6.xxyz
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    rsq r4.w, r4.w
					    mul r5.xzw, r4.wwww, r5.xxzw
					    mul r6.xyz, r2.zxyz, r5.zwxz
					    mad r6.xyz, r2.yzxy, r5.wxzw, -r6.xyzx
					    dp3 r4.w, r1.xywx, r5.xzwx
					    mad r5.xzw, -r5.xxzw, r4.wwww, r1.xxyw
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    sqrt r4.w, r4.w
					    add r4.w, r4.w, l(0.000100)
					    dp3 r6.w, r5.xzwx, r2.xyzx
					    div r6.w, r6.w, r4.w
					    max r6.w, r6.w, l(-1.000000)
					    min r6.w, r6.w, l(1.000000)
					    dp3 r5.x, r5.xzwx, r6.xyzx
					    lt r5.z, l(0.000000), r5.x
					    lt r5.x, r5.x, l(0.000000)
					    iadd r5.x, r5.z, -r5.x
					    itof r5.x, r5.x
					    add r5.z, -|r6.w|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r6.w|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r6.w|, l(-0.212114)
					    mad r5.w, r5.w, |r6.w|, l(1.570729)
					    mul r6.x, r5.z, r5.w
					    mad r6.x, r6.x, l(-2.000000), l(3.141593)
					    lt r6.y, r6.w, -r6.w
					    and r6.x, r6.y, r6.x
					    mad r5.z, r5.w, r5.z, r6.x
					    mul r5.w, r5.z, r5.x
					    max r6.xy, r7.zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					    min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					    add r7.xy, -|r6.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
					    sqrt r7.xy, r7.xyxx
					    mad r8.xy, |r6.xyxx|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.xxxy, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.xy, r6.xyxx, -r6.xyxx
					    and r6.xy, r6.xyxx, r8.zwzz
					    mad r6.xy, r8.xyxx, r7.xyxx, r6.xyxx
					    mad r6.x, -r5.x, r5.z, -r6.x
					    max r6.x, r6.x, l(-1.570796)
					    mad r7.x, r5.x, r5.z, r6.x
					    mad r6.x, -r5.x, r5.z, r6.y
					    min r6.x, r6.x, l(1.570796)
					    mad r7.y, r5.x, r5.z, r6.x
					    sincos r5.w, null, r5.w
					    add r6.xy, r7.xyxx, r7.xyxx
					    mad r5.xz, -r5.xxxx, r5.zzzz, r6.xxyx
					    sincos null, r5.xz, r5.xxzx
					    add r5.xz, r6.wwww, -r5.xxzx
					    mad r5.xz, r6.xxyx, r5.wwww, r5.xxzx
					    mad r4.z, r4.z, r4.z, r4.w
					    mul r4.z, r4.z, l(0.250000)
					    add r4.w, r5.z, r5.x
					    add r4.w, r4.w, cb0[16].y
					    mad r1.z, r4.z, r4.w, r1.z
					    iadd r4.y, r4.y, l(1)
					  endloop 
					  mul_sat r0.y, r1.z, l(0.500000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 251896
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
					  lt r1.w, r1.w, l(1.000000)
					  add r2.xyz, -|r1.xyxx|, l(1.000000, 1.000000, 1.000000, 0.000000)
					  add r3.z, -|r1.y|, r2.x
					  ge r2.x, r3.z, l(0.000000)
					  lt r4.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyxx
					  lt r4.zw, r1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  iadd r4.xy, -r4.xyxx, r4.zwzz
					  itof r4.xy, r4.xyxx
					  mul r2.yz, r2.yyzy, r4.xxyx
					  movc r3.xy, r2.xxxx, r1.xyxx, r2.yzyy
					  movc r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
					  mul r2.xyz, r1.yyyy, cb0[5].xyzx
					  mad r1.xyw, cb0[4].xyxz, r1.xxxx, r2.xyxz
					  mad r1.xyz, cb0[6].xyzx, r1.zzzz, r1.xywx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r2.x, -r0.xzwx, -r0.xzwx
					  rsq r2.x, r2.x
					  mul r2.xyz, -r0.zwxz, r2.xxxx
					  dp2 r2.w, r2.xyxx, r2.xyxx
					  add r3.x, r0.x, -cb0[2].x
					  max r3.x, r3.x, l(0.000000)
					  mul_sat r3.x, r3.x, cb0[2].y
					  mov r4.x, cb0[15].w
					  mov r4.y, cb0[16].z
					  add r3.yz, -r4.xxyx, cb0[3].yywy
					  mad r3.xy, r3.xxxx, r3.yzyy, r4.xyxx
					  mul r3.z, r3.x, cb0[15].x
					  div r3.z, r3.z, r0.x
					  min r3.z, r3.z, l(512.000000)
					  max r3.z, r3.z, l(2.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r3.z, r3.z, l(0.333333)
					  mul r4.xy, v1.xyxx, cb0[13].zwzz
					  ftoi r4.zw, r4.xxxy
					  iadd r3.w, -r4.z, r4.w
					  and r3.w, r3.w, l(3)
					  itof r3.w, r3.w
					  round_z r4.xy, r4.xyxx
					  dp2 r4.x, r4.xyxx, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r4.x, r4.x
					  mul r4.x, r4.x, l(52.982918)
					  frc r4.x, r4.x
					  add r4.x, r4.x, cb0[15].y
					  mad r3.w, r3.w, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r4.x, r4.x, l(1.570796)
					  mov r5.y, l(0)
					  mov r1.w, -r1.z
					  mov r1.z, l(0)
					  mov r4.y, l(0)
					  loop 
					    ige r4.z, r4.y, l(2)
					    breakc_nz r4.z
					    itof r4.z, r4.y
					    mad r4.z, r4.z, l(1.570796), r4.x
					    sincos r5.x, r6.x, r4.z
					    mov r5.z, r6.x
					    mul r6.xyz, r2.yzxy, r5.yzxy
					    mul r7.xyz, r2.zxyz, r5.xyzx
					    mad r7.xyz, r2.yzxy, r5.yzxy, -r7.xyzx
					    dp3 r4.z, r1.xywx, r7.xyzx
					    mul r4.z, r2.w, r4.z
					    mul r7.xy, r5.zxzz, cb0[13].xyxx
					    mov r7.zw, l(0,0,-1.000000,-1.000000)
					    mov r4.w, l(0)
					    loop 
					      ige r5.w, r4.w, l(2)
					      breakc_nz r5.w
					      itof r5.w, r4.w
					      add r6.w, r3.w, r5.w
					      mul r6.w, r3.z, r6.w
					      add r5.w, r5.w, l(1.000000)
					      max r5.w, r5.w, r6.w
					      mul r8.xy, r5.wwww, r7.xyxx
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r10.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r10.zw, r10.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r10.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r9.xy, -r9.xyxx, r10.zwzz, r7.zwzz
					      mad r8.xy, r8.zwzz, r9.xyxx, r8.xyxx
					      lt r8.zw, r7.zzzw, r8.xxxy
					      add r9.xy, r7.zwzz, -r8.xyxx
					      mad r9.xy, r3.yyyy, r9.xyxx, r8.xyxx
					      movc r7.zw, r8.zzzw, r8.xxxy, r9.xxxy
					      iadd r4.w, r4.w, l(1)
					    endloop 
					    mad r5.xzw, r2.zzxy, r5.xxyz, -r6.xxyz
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    rsq r4.w, r4.w
					    mul r5.xzw, r4.wwww, r5.xxzw
					    mul r6.xyz, r2.zxyz, r5.zwxz
					    mad r6.xyz, r2.yzxy, r5.wxzw, -r6.xyzx
					    dp3 r4.w, r1.xywx, r5.xzwx
					    mad r5.xzw, -r5.xxzw, r4.wwww, r1.xxyw
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    sqrt r4.w, r4.w
					    add r4.w, r4.w, l(0.000100)
					    dp3 r6.w, r5.xzwx, r2.xyzx
					    div r6.w, r6.w, r4.w
					    max r6.w, r6.w, l(-1.000000)
					    min r6.w, r6.w, l(1.000000)
					    dp3 r5.x, r5.xzwx, r6.xyzx
					    lt r5.z, l(0.000000), r5.x
					    lt r5.x, r5.x, l(0.000000)
					    iadd r5.x, r5.z, -r5.x
					    itof r5.x, r5.x
					    add r5.z, -|r6.w|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r6.w|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r6.w|, l(-0.212114)
					    mad r5.w, r5.w, |r6.w|, l(1.570729)
					    mul r6.x, r5.z, r5.w
					    mad r6.x, r6.x, l(-2.000000), l(3.141593)
					    lt r6.y, r6.w, -r6.w
					    and r6.x, r6.y, r6.x
					    mad r5.z, r5.w, r5.z, r6.x
					    mul r5.w, r5.z, r5.x
					    max r6.xy, r7.zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					    min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					    add r7.xy, -|r6.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
					    sqrt r7.xy, r7.xyxx
					    mad r8.xy, |r6.xyxx|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.xxxy, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.xy, r6.xyxx, -r6.xyxx
					    and r6.xy, r6.xyxx, r8.zwzz
					    mad r6.xy, r8.xyxx, r7.xyxx, r6.xyxx
					    mad r6.x, -r5.x, r5.z, -r6.x
					    max r6.x, r6.x, l(-1.570796)
					    mad r7.x, r5.x, r5.z, r6.x
					    mad r6.x, -r5.x, r5.z, r6.y
					    min r6.x, r6.x, l(1.570796)
					    mad r7.y, r5.x, r5.z, r6.x
					    sincos r5.w, null, r5.w
					    add r6.xy, r7.xyxx, r7.xyxx
					    mad r5.xz, -r5.xxxx, r5.zzzz, r6.xxyx
					    sincos null, r5.xz, r5.xxzx
					    add r5.xz, r6.wwww, -r5.xxzx
					    mad r5.xz, r6.xxyx, r5.wwww, r5.xxzx
					    mad r4.z, r4.z, r4.z, r4.w
					    mul r4.z, r4.z, l(0.250000)
					    add r4.w, r5.z, r5.x
					    add r4.w, r4.w, cb0[16].y
					    mad r1.z, r4.z, r4.w, r1.z
					    iadd r4.y, r4.y, l(1)
					  endloop 
					  mul_sat r0.y, r1.z, l(0.500000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 295900
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  mul r1.xy, v1.xyxx, cb0[12].zwzz
					  round_pi r1.xy, r1.xyxx
					  add r1.x, -r1.x, r1.y
					  mul r1.x, r1.x, l(0.250000)
					  frc r1.x, r1.x
					  mad r1.x, r1.x, l(0.500000), l(1.000000)
					  mul r1.xyzw, r1.xxxx, cb0[12].xyxy
					  mad r2.xyzw, r1.zwzw, l(1.000000, 0.000000, -1.000000, 0.000000), v1.xyxy
					  sample_l r3.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
					  mad r3.x, cb1[7].z, r3.x, cb1[7].w
					  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
					  mad r4.xyzw, r2.xyzw, cb0[14].xyxy, cb0[14].zwzw
					  mul r3.yz, r3.xxxx, r4.xxyx
					  sample_l r2.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
					  mad r2.x, cb1[7].z, r2.x, cb1[7].w
					  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
					  mul r2.yz, r2.xxxx, r4.zzwz
					  mad r1.xyzw, r1.xyzw, l(0.000000, 1.000000, 0.000000, -1.000000), v1.xyxy
					  sample_l r4.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
					  mad r2.w, cb1[7].z, r4.x, cb1[7].w
					  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
					  mad r5.xyzw, r1.xyzw, cb0[14].xyxy, cb0[14].zwzw
					  mul r4.xz, r4.yyyy, r5.yyxy
					  sample_l r1.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
					  mad r1.x, cb1[7].z, r1.x, cb1[7].w
					  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					  mul r1.xz, r1.yyyy, r5.wwzw
					  add r3.xyz, -r0.xzwx, r3.xyzx
					  add r2.xyz, r0.xzwx, -r2.xyzx
					  add r4.xyz, -r0.wxzw, r4.xyzx
					  add r1.xyz, r0.wxzw, -r1.xyzx
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  dp3 r2.w, r2.xyzx, r2.xyzx
					  lt r1.w, r1.w, r2.w
					  movc r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  dp3 r2.w, r1.xyzx, r1.xyzx
					  lt r1.w, r1.w, r2.w
					  movc r1.xyz, r1.wwww, r4.xyzx, r1.xyzx
					  mul r3.xyz, r1.xyzx, r2.xyzx
					  mad r1.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r1.w, -r0.xzwx, -r0.xzwx
					  rsq r1.w, r1.w
					  mul r2.xyz, -r0.zwxz, r1.wwww
					  dp2 r1.w, r2.xyxx, r2.xyxx
					  add r2.w, r0.x, -cb0[2].x
					  max r2.w, r2.w, l(0.000000)
					  mul_sat r2.w, r2.w, cb0[2].y
					  mov r3.x, cb0[15].w
					  mov r3.y, cb0[16].z
					  add r3.zw, -r3.xxxy, cb0[3].yyyw
					  mad r3.xy, r2.wwww, r3.zwzz, r3.xyxx
					  mul r2.w, r3.x, cb0[15].x
					  div r2.w, r2.w, r0.x
					  min r2.w, r2.w, l(512.000000)
					  max r2.w, r2.w, l(3.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r2.w, r2.w, l(0.250000)
					  mul r3.zw, v1.xxxy, cb0[13].zzzw
					  ftoi r4.xy, r3.zwzz
					  iadd r4.x, -r4.x, r4.y
					  and r4.x, r4.x, l(3)
					  itof r4.x, r4.x
					  round_z r3.zw, r3.zzzw
					  dp2 r3.z, r3.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r3.z, r3.z
					  mul r3.z, r3.z, l(52.982918)
					  frc r3.z, r3.z
					  add r3.z, r3.z, cb0[15].y
					  mad r3.w, r4.x, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r3.z, r3.z, l(1.570796)
					  mov r4.y, l(0)
					  mov r4.w, l(0)
					  mov r5.x, l(0)
					  loop 
					    ige r5.y, r5.x, l(2)
					    breakc_nz r5.y
					    itof r5.y, r5.x
					    mad r5.y, r5.y, l(1.570796), r3.z
					    sincos r4.x, r6.x, r5.y
					    mov r4.z, r6.x
					    mul r5.yzw, r2.yyzx, r4.yyzx
					    mul r6.xyz, r2.zxyz, r4.xyzx
					    mad r6.xyz, r2.yzxy, r4.yzxy, -r6.xyzx
					    dp3 r6.x, -r1.xyzx, r6.xyzx
					    mul r6.x, r1.w, r6.x
					    mul r6.yz, r4.zzxz, cb0[13].xxyx
					    mov r7.xy, l(-1.000000,-1.000000,0,0)
					    mov r6.w, l(0)
					    loop 
					      ige r7.z, r6.w, l(3)
					      breakc_nz r7.z
					      itof r7.z, r6.w
					      add r7.w, r3.w, r7.z
					      mul r7.w, r2.w, r7.w
					      add r7.z, r7.z, l(1.000000)
					      max r7.z, r7.z, r7.w
					      mul r8.xy, r6.yzyy, r7.zzzz
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r7.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r7.zw, r7.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r7.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r7.zw, -r9.xxxy, r7.zzzw, r7.xxxy
					      mad r7.zw, r8.zzzw, r7.zzzw, r8.xxxy
					      lt r8.xy, r7.xyxx, r7.zwzz
					      add r8.zw, -r7.zzzw, r7.xxxy
					      mad r8.zw, r3.yyyy, r8.zzzw, r7.zzzw
					      movc r7.xy, r8.xyxx, r7.zwzz, r8.zwzz
					      iadd r6.w, r6.w, l(1)
					    endloop 
					    mad r5.yzw, r2.zzxy, r4.xxyz, -r5.yyzw
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    rsq r4.x, r4.x
					    mul r5.yzw, r4.xxxx, r5.yyzw
					    mul r6.yzw, r2.zzxy, r5.zzwy
					    mad r6.yzw, r2.yyzx, r5.wwyz, -r6.yyzw
					    dp3 r4.x, -r1.xyzx, r5.yzwy
					    mad r5.yzw, -r5.yyzw, r4.xxxx, -r1.xxyz
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    sqrt r4.x, r4.x
					    add r4.x, r4.x, l(0.000100)
					    dp3 r4.z, r5.yzwy, r2.xyzx
					    div r4.z, r4.z, r4.x
					    max r4.z, r4.z, l(-1.000000)
					    min r4.z, r4.z, l(1.000000)
					    dp3 r5.y, r5.yzwy, r6.yzwy
					    lt r5.z, l(0.000000), r5.y
					    lt r5.y, r5.y, l(0.000000)
					    iadd r5.y, r5.z, -r5.y
					    itof r5.y, r5.y
					    add r5.z, -|r4.z|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r4.z|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r4.z|, l(-0.212114)
					    mad r5.w, r5.w, |r4.z|, l(1.570729)
					    mul r6.y, r5.z, r5.w
					    mad r6.y, r6.y, l(-2.000000), l(3.141593)
					    lt r6.z, r4.z, -r4.z
					    and r6.y, r6.z, r6.y
					    mad r5.z, r5.w, r5.z, r6.y
					    mul r5.w, r5.z, r5.y
					    max r6.yz, r7.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
					    min r6.yz, r6.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					    add r7.zw, -|r6.yyyz|, l(0.000000, 0.000000, 1.000000, 1.000000)
					    sqrt r7.zw, r7.zzzw
					    mad r8.xy, |r6.yzyy|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.zzzw, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.yz, r6.yyzy, -r6.yyzy
					    and r6.yz, r6.yyzy, r8.zzwz
					    mad r6.yz, r8.xxyx, r7.zzwz, r6.yyzy
					    mad r6.y, -r5.y, r5.z, -r6.y
					    max r6.y, r6.y, l(-1.570796)
					    mad r8.x, r5.y, r5.z, r6.y
					    mad r6.y, -r5.y, r5.z, r6.z
					    min r6.y, r6.y, l(1.570796)
					    mad r8.y, r5.y, r5.z, r6.y
					    sincos r5.w, null, r5.w
					    add r6.yz, r8.xxyx, r8.xxyx
					    mad r5.yz, -r5.yyyy, r5.zzzz, r6.yyzy
					    sincos null, r5.yz, r5.yyzy
					    add r5.yz, r4.zzzz, -r5.yyzy
					    mad r5.yz, r6.yyzy, r5.wwww, r5.yyzy
					    mad r4.x, r6.x, r6.x, r4.x
					    mul r4.x, r4.x, l(0.250000)
					    add r4.z, r5.z, r5.y
					    add r4.z, r4.z, cb0[16].y
					    mad r4.w, r4.x, r4.z, r4.w
					    iadd r5.x, r5.x, l(1)
					  endloop 
					  mul_sat r0.y, r4.w, l(0.500000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 339636
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(3.555400, 3.555400, 0.000000, 0.000000), l(-1.777700, -1.777700, 1.000000, 0.000000)
					  dp3 r1.z, r1.xyzx, r1.xyzx
					  div r1.z, l(2.000000), r1.z
					  mul r2.xy, r1.xyxx, r1.zzzz
					  add r1.x, r1.z, l(-1.000000)
					  mov r2.z, -r1.x
					  dp3 r1.x, -r0.xzwx, -r0.xzwx
					  rsq r1.x, r1.x
					  mul r1.xyz, -r0.zwxz, r1.xxxx
					  dp2 r1.w, r1.xyxx, r1.xyxx
					  add r2.w, r0.x, -cb0[2].x
					  max r2.w, r2.w, l(0.000000)
					  mul_sat r2.w, r2.w, cb0[2].y
					  mov r3.x, cb0[15].w
					  mov r3.y, cb0[16].z
					  add r3.zw, -r3.xxxy, cb0[3].yyyw
					  mad r3.xy, r2.wwww, r3.zwzz, r3.xyxx
					  mul r2.w, r3.x, cb0[15].x
					  div r2.w, r2.w, r0.x
					  min r2.w, r2.w, l(512.000000)
					  max r2.w, r2.w, l(3.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r2.w, r2.w, l(0.250000)
					  mul r3.zw, v1.xxxy, cb0[13].zzzw
					  ftoi r4.xy, r3.zwzz
					  iadd r4.x, -r4.x, r4.y
					  and r4.x, r4.x, l(3)
					  itof r4.x, r4.x
					  round_z r3.zw, r3.zzzw
					  dp2 r3.z, r3.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r3.z, r3.z
					  mul r3.z, r3.z, l(52.982918)
					  frc r3.z, r3.z
					  add r3.z, r3.z, cb0[15].y
					  mad r3.w, r4.x, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r3.z, r3.z, l(1.570796)
					  mov r4.y, l(0)
					  mov r4.w, l(0)
					  mov r5.x, l(0)
					  loop 
					    ige r5.y, r5.x, l(2)
					    breakc_nz r5.y
					    itof r5.y, r5.x
					    mad r5.y, r5.y, l(1.570796), r3.z
					    sincos r4.x, r6.x, r5.y
					    mov r4.z, r6.x
					    mul r5.yzw, r1.yyzx, r4.yyzx
					    mul r6.xyz, r1.zxyz, r4.xyzx
					    mad r6.xyz, r1.yzxy, r4.yzxy, -r6.xyzx
					    dp3 r6.x, r2.xyzx, r6.xyzx
					    mul r6.x, r1.w, r6.x
					    mul r6.yz, r4.zzxz, cb0[13].xxyx
					    mov r7.xy, l(-1.000000,-1.000000,0,0)
					    mov r6.w, l(0)
					    loop 
					      ige r7.z, r6.w, l(3)
					      breakc_nz r7.z
					      itof r7.z, r6.w
					      add r7.w, r3.w, r7.z
					      mul r7.w, r2.w, r7.w
					      add r7.z, r7.z, l(1.000000)
					      max r7.z, r7.z, r7.w
					      mul r8.xy, r6.yzyy, r7.zzzz
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r7.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r7.zw, r7.zzzw
					      dp3 r9.x, r9.xyzx, r1.xyzx
					      dp3 r9.y, r8.xyzx, r1.xyzx
					      mul r8.xy, r7.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r7.zw, -r9.xxxy, r7.zzzw, r7.xxxy
					      mad r7.zw, r8.zzzw, r7.zzzw, r8.xxxy
					      lt r8.xy, r7.xyxx, r7.zwzz
					      add r8.zw, -r7.zzzw, r7.xxxy
					      mad r8.zw, r3.yyyy, r8.zzzw, r7.zzzw
					      movc r7.xy, r8.xyxx, r7.zwzz, r8.zwzz
					      iadd r6.w, r6.w, l(1)
					    endloop 
					    mad r5.yzw, r1.zzxy, r4.xxyz, -r5.yyzw
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    rsq r4.x, r4.x
					    mul r5.yzw, r4.xxxx, r5.yyzw
					    mul r6.yzw, r1.zzxy, r5.zzwy
					    mad r6.yzw, r1.yyzx, r5.wwyz, -r6.yyzw
					    dp3 r4.x, r2.xyzx, r5.yzwy
					    mad r5.yzw, -r5.yyzw, r4.xxxx, r2.xxyz
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    sqrt r4.x, r4.x
					    add r4.x, r4.x, l(0.000100)
					    dp3 r4.z, r5.yzwy, r1.xyzx
					    div r4.z, r4.z, r4.x
					    max r4.z, r4.z, l(-1.000000)
					    min r4.z, r4.z, l(1.000000)
					    dp3 r5.y, r5.yzwy, r6.yzwy
					    lt r5.z, l(0.000000), r5.y
					    lt r5.y, r5.y, l(0.000000)
					    iadd r5.y, r5.z, -r5.y
					    itof r5.y, r5.y
					    add r5.z, -|r4.z|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r4.z|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r4.z|, l(-0.212114)
					    mad r5.w, r5.w, |r4.z|, l(1.570729)
					    mul r6.y, r5.z, r5.w
					    mad r6.y, r6.y, l(-2.000000), l(3.141593)
					    lt r6.z, r4.z, -r4.z
					    and r6.y, r6.z, r6.y
					    mad r5.z, r5.w, r5.z, r6.y
					    mul r5.w, r5.z, r5.y
					    max r6.yz, r7.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
					    min r6.yz, r6.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					    add r7.zw, -|r6.yyyz|, l(0.000000, 0.000000, 1.000000, 1.000000)
					    sqrt r7.zw, r7.zzzw
					    mad r8.xy, |r6.yzyy|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.zzzw, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.yz, r6.yyzy, -r6.yyzy
					    and r6.yz, r6.yyzy, r8.zzwz
					    mad r6.yz, r8.xxyx, r7.zzwz, r6.yyzy
					    mad r6.y, -r5.y, r5.z, -r6.y
					    max r6.y, r6.y, l(-1.570796)
					    mad r8.x, r5.y, r5.z, r6.y
					    mad r6.y, -r5.y, r5.z, r6.z
					    min r6.y, r6.y, l(1.570796)
					    mad r8.y, r5.y, r5.z, r6.y
					    sincos r5.w, null, r5.w
					    add r6.yz, r8.xxyx, r8.xxyx
					    mad r5.yz, -r5.yyyy, r5.zzzz, r6.yyzy
					    sincos null, r5.yz, r5.yyzy
					    add r5.yz, r4.zzzz, -r5.yyzy
					    mad r5.yz, r6.yyzy, r5.wwww, r5.yyzy
					    mad r4.x, r6.x, r6.x, r4.x
					    mul r4.x, r4.x, l(0.250000)
					    add r4.z, r5.z, r5.y
					    add r4.z, r4.z, cb0[16].y
					    mad r4.w, r4.x, r4.z, r4.w
					    iadd r5.x, r5.x, l(1)
					  endloop 
					  mul_sat r0.y, r4.w, l(0.500000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 393801
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
					  mul r2.xyz, r1.yyyy, cb0[5].xyzx
					  mad r1.xyw, cb0[4].xyxz, r1.xxxx, r2.xyxz
					  mad r1.xyz, cb0[6].xyzx, r1.zzzz, r1.xywx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r2.x, -r0.xzwx, -r0.xzwx
					  rsq r2.x, r2.x
					  mul r2.xyz, -r0.zwxz, r2.xxxx
					  dp2 r2.w, r2.xyxx, r2.xyxx
					  add r3.x, r0.x, -cb0[2].x
					  max r3.x, r3.x, l(0.000000)
					  mul_sat r3.x, r3.x, cb0[2].y
					  mov r4.x, cb0[15].w
					  mov r4.y, cb0[16].z
					  add r3.yz, -r4.xxyx, cb0[3].yywy
					  mad r3.xy, r3.xxxx, r3.yzyy, r4.xyxx
					  mul r3.z, r3.x, cb0[15].x
					  div r3.z, r3.z, r0.x
					  min r3.z, r3.z, l(512.000000)
					  max r3.z, r3.z, l(3.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r3.z, r3.z, l(0.250000)
					  mul r4.xy, v1.xyxx, cb0[13].zwzz
					  ftoi r4.zw, r4.xxxy
					  iadd r3.w, -r4.z, r4.w
					  and r3.w, r3.w, l(3)
					  itof r3.w, r3.w
					  round_z r4.xy, r4.xyxx
					  dp2 r4.x, r4.xyxx, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r4.x, r4.x
					  mul r4.x, r4.x, l(52.982918)
					  frc r4.x, r4.x
					  add r4.x, r4.x, cb0[15].y
					  mad r3.w, r3.w, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r4.x, r4.x, l(1.570796)
					  mov r5.y, l(0)
					  mov r1.w, -r1.z
					  mov r1.z, l(0)
					  mov r4.y, l(0)
					  loop 
					    ige r4.z, r4.y, l(2)
					    breakc_nz r4.z
					    itof r4.z, r4.y
					    mad r4.z, r4.z, l(1.570796), r4.x
					    sincos r5.x, r6.x, r4.z
					    mov r5.z, r6.x
					    mul r6.xyz, r2.yzxy, r5.yzxy
					    mul r7.xyz, r2.zxyz, r5.xyzx
					    mad r7.xyz, r2.yzxy, r5.yzxy, -r7.xyzx
					    dp3 r4.z, r1.xywx, r7.xyzx
					    mul r4.z, r2.w, r4.z
					    mul r7.xy, r5.zxzz, cb0[13].xyxx
					    mov r7.zw, l(0,0,-1.000000,-1.000000)
					    mov r4.w, l(0)
					    loop 
					      ige r5.w, r4.w, l(3)
					      breakc_nz r5.w
					      itof r5.w, r4.w
					      add r6.w, r3.w, r5.w
					      mul r6.w, r3.z, r6.w
					      add r5.w, r5.w, l(1.000000)
					      max r5.w, r5.w, r6.w
					      mul r8.xy, r5.wwww, r7.xyxx
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r10.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r10.zw, r10.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r10.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r9.xy, -r9.xyxx, r10.zwzz, r7.zwzz
					      mad r8.xy, r8.zwzz, r9.xyxx, r8.xyxx
					      lt r8.zw, r7.zzzw, r8.xxxy
					      add r9.xy, r7.zwzz, -r8.xyxx
					      mad r9.xy, r3.yyyy, r9.xyxx, r8.xyxx
					      movc r7.zw, r8.zzzw, r8.xxxy, r9.xxxy
					      iadd r4.w, r4.w, l(1)
					    endloop 
					    mad r5.xzw, r2.zzxy, r5.xxyz, -r6.xxyz
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    rsq r4.w, r4.w
					    mul r5.xzw, r4.wwww, r5.xxzw
					    mul r6.xyz, r2.zxyz, r5.zwxz
					    mad r6.xyz, r2.yzxy, r5.wxzw, -r6.xyzx
					    dp3 r4.w, r1.xywx, r5.xzwx
					    mad r5.xzw, -r5.xxzw, r4.wwww, r1.xxyw
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    sqrt r4.w, r4.w
					    add r4.w, r4.w, l(0.000100)
					    dp3 r6.w, r5.xzwx, r2.xyzx
					    div r6.w, r6.w, r4.w
					    max r6.w, r6.w, l(-1.000000)
					    min r6.w, r6.w, l(1.000000)
					    dp3 r5.x, r5.xzwx, r6.xyzx
					    lt r5.z, l(0.000000), r5.x
					    lt r5.x, r5.x, l(0.000000)
					    iadd r5.x, r5.z, -r5.x
					    itof r5.x, r5.x
					    add r5.z, -|r6.w|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r6.w|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r6.w|, l(-0.212114)
					    mad r5.w, r5.w, |r6.w|, l(1.570729)
					    mul r6.x, r5.z, r5.w
					    mad r6.x, r6.x, l(-2.000000), l(3.141593)
					    lt r6.y, r6.w, -r6.w
					    and r6.x, r6.y, r6.x
					    mad r5.z, r5.w, r5.z, r6.x
					    mul r5.w, r5.z, r5.x
					    max r6.xy, r7.zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					    min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					    add r7.xy, -|r6.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
					    sqrt r7.xy, r7.xyxx
					    mad r8.xy, |r6.xyxx|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.xxxy, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.xy, r6.xyxx, -r6.xyxx
					    and r6.xy, r6.xyxx, r8.zwzz
					    mad r6.xy, r8.xyxx, r7.xyxx, r6.xyxx
					    mad r6.x, -r5.x, r5.z, -r6.x
					    max r6.x, r6.x, l(-1.570796)
					    mad r7.x, r5.x, r5.z, r6.x
					    mad r6.x, -r5.x, r5.z, r6.y
					    min r6.x, r6.x, l(1.570796)
					    mad r7.y, r5.x, r5.z, r6.x
					    sincos r5.w, null, r5.w
					    add r6.xy, r7.xyxx, r7.xyxx
					    mad r5.xz, -r5.xxxx, r5.zzzz, r6.xxyx
					    sincos null, r5.xz, r5.xxzx
					    add r5.xz, r6.wwww, -r5.xxzx
					    mad r5.xz, r6.xxyx, r5.wwww, r5.xxzx
					    mad r4.z, r4.z, r4.z, r4.w
					    mul r4.z, r4.z, l(0.250000)
					    add r4.w, r5.z, r5.x
					    add r4.w, r4.w, cb0[16].y
					    mad r1.z, r4.z, r4.w, r1.z
					    iadd r4.y, r4.y, l(1)
					  endloop 
					  mul_sat r0.y, r1.z, l(0.500000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 490400
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
					  lt r1.w, r1.w, l(1.000000)
					  add r2.xyz, -|r1.xyxx|, l(1.000000, 1.000000, 1.000000, 0.000000)
					  add r3.z, -|r1.y|, r2.x
					  ge r2.x, r3.z, l(0.000000)
					  lt r4.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyxx
					  lt r4.zw, r1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  iadd r4.xy, -r4.xyxx, r4.zwzz
					  itof r4.xy, r4.xyxx
					  mul r2.yz, r2.yyzy, r4.xxyx
					  movc r3.xy, r2.xxxx, r1.xyxx, r2.yzyy
					  movc r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
					  mul r2.xyz, r1.yyyy, cb0[5].xyzx
					  mad r1.xyw, cb0[4].xyxz, r1.xxxx, r2.xyxz
					  mad r1.xyz, cb0[6].xyzx, r1.zzzz, r1.xywx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r2.x, -r0.xzwx, -r0.xzwx
					  rsq r2.x, r2.x
					  mul r2.xyz, -r0.zwxz, r2.xxxx
					  dp2 r2.w, r2.xyxx, r2.xyxx
					  add r3.x, r0.x, -cb0[2].x
					  max r3.x, r3.x, l(0.000000)
					  mul_sat r3.x, r3.x, cb0[2].y
					  mov r4.x, cb0[15].w
					  mov r4.y, cb0[16].z
					  add r3.yz, -r4.xxyx, cb0[3].yywy
					  mad r3.xy, r3.xxxx, r3.yzyy, r4.xyxx
					  mul r3.z, r3.x, cb0[15].x
					  div r3.z, r3.z, r0.x
					  min r3.z, r3.z, l(512.000000)
					  max r3.z, r3.z, l(3.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r3.z, r3.z, l(0.250000)
					  mul r4.xy, v1.xyxx, cb0[13].zwzz
					  ftoi r4.zw, r4.xxxy
					  iadd r3.w, -r4.z, r4.w
					  and r3.w, r3.w, l(3)
					  itof r3.w, r3.w
					  round_z r4.xy, r4.xyxx
					  dp2 r4.x, r4.xyxx, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r4.x, r4.x
					  mul r4.x, r4.x, l(52.982918)
					  frc r4.x, r4.x
					  add r4.x, r4.x, cb0[15].y
					  mad r3.w, r3.w, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r4.x, r4.x, l(1.570796)
					  mov r5.y, l(0)
					  mov r1.w, -r1.z
					  mov r1.z, l(0)
					  mov r4.y, l(0)
					  loop 
					    ige r4.z, r4.y, l(2)
					    breakc_nz r4.z
					    itof r4.z, r4.y
					    mad r4.z, r4.z, l(1.570796), r4.x
					    sincos r5.x, r6.x, r4.z
					    mov r5.z, r6.x
					    mul r6.xyz, r2.yzxy, r5.yzxy
					    mul r7.xyz, r2.zxyz, r5.xyzx
					    mad r7.xyz, r2.yzxy, r5.yzxy, -r7.xyzx
					    dp3 r4.z, r1.xywx, r7.xyzx
					    mul r4.z, r2.w, r4.z
					    mul r7.xy, r5.zxzz, cb0[13].xyxx
					    mov r7.zw, l(0,0,-1.000000,-1.000000)
					    mov r4.w, l(0)
					    loop 
					      ige r5.w, r4.w, l(3)
					      breakc_nz r5.w
					      itof r5.w, r4.w
					      add r6.w, r3.w, r5.w
					      mul r6.w, r3.z, r6.w
					      add r5.w, r5.w, l(1.000000)
					      max r5.w, r5.w, r6.w
					      mul r8.xy, r5.wwww, r7.xyxx
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r10.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r10.zw, r10.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r10.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r9.xy, -r9.xyxx, r10.zwzz, r7.zwzz
					      mad r8.xy, r8.zwzz, r9.xyxx, r8.xyxx
					      lt r8.zw, r7.zzzw, r8.xxxy
					      add r9.xy, r7.zwzz, -r8.xyxx
					      mad r9.xy, r3.yyyy, r9.xyxx, r8.xyxx
					      movc r7.zw, r8.zzzw, r8.xxxy, r9.xxxy
					      iadd r4.w, r4.w, l(1)
					    endloop 
					    mad r5.xzw, r2.zzxy, r5.xxyz, -r6.xxyz
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    rsq r4.w, r4.w
					    mul r5.xzw, r4.wwww, r5.xxzw
					    mul r6.xyz, r2.zxyz, r5.zwxz
					    mad r6.xyz, r2.yzxy, r5.wxzw, -r6.xyzx
					    dp3 r4.w, r1.xywx, r5.xzwx
					    mad r5.xzw, -r5.xxzw, r4.wwww, r1.xxyw
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    sqrt r4.w, r4.w
					    add r4.w, r4.w, l(0.000100)
					    dp3 r6.w, r5.xzwx, r2.xyzx
					    div r6.w, r6.w, r4.w
					    max r6.w, r6.w, l(-1.000000)
					    min r6.w, r6.w, l(1.000000)
					    dp3 r5.x, r5.xzwx, r6.xyzx
					    lt r5.z, l(0.000000), r5.x
					    lt r5.x, r5.x, l(0.000000)
					    iadd r5.x, r5.z, -r5.x
					    itof r5.x, r5.x
					    add r5.z, -|r6.w|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r6.w|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r6.w|, l(-0.212114)
					    mad r5.w, r5.w, |r6.w|, l(1.570729)
					    mul r6.x, r5.z, r5.w
					    mad r6.x, r6.x, l(-2.000000), l(3.141593)
					    lt r6.y, r6.w, -r6.w
					    and r6.x, r6.y, r6.x
					    mad r5.z, r5.w, r5.z, r6.x
					    mul r5.w, r5.z, r5.x
					    max r6.xy, r7.zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					    min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					    add r7.xy, -|r6.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
					    sqrt r7.xy, r7.xyxx
					    mad r8.xy, |r6.xyxx|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.xxxy, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.xy, r6.xyxx, -r6.xyxx
					    and r6.xy, r6.xyxx, r8.zwzz
					    mad r6.xy, r8.xyxx, r7.xyxx, r6.xyxx
					    mad r6.x, -r5.x, r5.z, -r6.x
					    max r6.x, r6.x, l(-1.570796)
					    mad r7.x, r5.x, r5.z, r6.x
					    mad r6.x, -r5.x, r5.z, r6.y
					    min r6.x, r6.x, l(1.570796)
					    mad r7.y, r5.x, r5.z, r6.x
					    sincos r5.w, null, r5.w
					    add r6.xy, r7.xyxx, r7.xyxx
					    mad r5.xz, -r5.xxxx, r5.zzzz, r6.xxyx
					    sincos null, r5.xz, r5.xxzx
					    add r5.xz, r6.wwww, -r5.xxzx
					    mad r5.xz, r6.xxyx, r5.wwww, r5.xxzx
					    mad r4.z, r4.z, r4.z, r4.w
					    mul r4.z, r4.z, l(0.250000)
					    add r4.w, r5.z, r5.x
					    add r4.w, r4.w, cb0[16].y
					    mad r1.z, r4.z, r4.w, r1.z
					    iadd r4.y, r4.y, l(1)
					  endloop 
					  mul_sat r0.y, r1.z, l(0.500000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 577075
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  mul r1.xy, v1.xyxx, cb0[12].zwzz
					  round_pi r1.xy, r1.xyxx
					  add r1.x, -r1.x, r1.y
					  mul r1.x, r1.x, l(0.250000)
					  frc r1.x, r1.x
					  mad r1.x, r1.x, l(0.500000), l(1.000000)
					  mul r1.xyzw, r1.xxxx, cb0[12].xyxy
					  mad r2.xyzw, r1.zwzw, l(1.000000, 0.000000, -1.000000, 0.000000), v1.xyxy
					  sample_l r3.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
					  mad r3.x, cb1[7].z, r3.x, cb1[7].w
					  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
					  mad r4.xyzw, r2.xyzw, cb0[14].xyxy, cb0[14].zwzw
					  mul r3.yz, r3.xxxx, r4.xxyx
					  sample_l r2.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
					  mad r2.x, cb1[7].z, r2.x, cb1[7].w
					  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
					  mul r2.yz, r2.xxxx, r4.zzwz
					  mad r1.xyzw, r1.xyzw, l(0.000000, 1.000000, 0.000000, -1.000000), v1.xyxy
					  sample_l r4.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
					  mad r2.w, cb1[7].z, r4.x, cb1[7].w
					  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
					  mad r5.xyzw, r1.xyzw, cb0[14].xyxy, cb0[14].zwzw
					  mul r4.xz, r4.yyyy, r5.yyxy
					  sample_l r1.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
					  mad r1.x, cb1[7].z, r1.x, cb1[7].w
					  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					  mul r1.xz, r1.yyyy, r5.wwzw
					  add r3.xyz, -r0.xzwx, r3.xyzx
					  add r2.xyz, r0.xzwx, -r2.xyzx
					  add r4.xyz, -r0.wxzw, r4.xyzx
					  add r1.xyz, r0.wxzw, -r1.xyzx
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  dp3 r2.w, r2.xyzx, r2.xyzx
					  lt r1.w, r1.w, r2.w
					  movc r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  dp3 r2.w, r1.xyzx, r1.xyzx
					  lt r1.w, r1.w, r2.w
					  movc r1.xyz, r1.wwww, r4.xyzx, r1.xyzx
					  mul r3.xyz, r1.xyzx, r2.xyzx
					  mad r1.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r1.w, -r0.xzwx, -r0.xzwx
					  rsq r1.w, r1.w
					  mul r2.xyz, -r0.zwxz, r1.wwww
					  dp2 r1.w, r2.xyxx, r2.xyxx
					  add r2.w, r0.x, -cb0[2].x
					  max r2.w, r2.w, l(0.000000)
					  mul_sat r2.w, r2.w, cb0[2].y
					  mov r3.x, cb0[15].w
					  mov r3.y, cb0[16].z
					  add r3.zw, -r3.xxxy, cb0[3].yyyw
					  mad r3.xy, r2.wwww, r3.zwzz, r3.xyxx
					  mul r2.w, r3.x, cb0[15].x
					  div r2.w, r2.w, r0.x
					  min r2.w, r2.w, l(512.000000)
					  max r2.w, r2.w, l(4.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r2.w, r2.w, l(0.200000)
					  mul r3.zw, v1.xxxy, cb0[13].zzzw
					  ftoi r4.xy, r3.zwzz
					  iadd r4.x, -r4.x, r4.y
					  and r4.x, r4.x, l(3)
					  itof r4.x, r4.x
					  round_z r3.zw, r3.zzzw
					  dp2 r3.z, r3.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r3.z, r3.z
					  mul r3.z, r3.z, l(52.982918)
					  frc r3.z, r3.z
					  add r3.z, r3.z, cb0[15].y
					  mad r3.w, r4.x, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r3.z, r3.z, l(1.047198)
					  mov r4.y, l(0)
					  mov r4.w, l(0)
					  mov r5.x, l(0)
					  loop 
					    ige r5.y, r5.x, l(3)
					    breakc_nz r5.y
					    itof r5.y, r5.x
					    mad r5.y, r5.y, l(1.047198), r3.z
					    sincos r4.x, r6.x, r5.y
					    mov r4.z, r6.x
					    mul r5.yzw, r2.yyzx, r4.yyzx
					    mul r6.xyz, r2.zxyz, r4.xyzx
					    mad r6.xyz, r2.yzxy, r4.yzxy, -r6.xyzx
					    dp3 r6.x, -r1.xyzx, r6.xyzx
					    mul r6.x, r1.w, r6.x
					    mul r6.yz, r4.zzxz, cb0[13].xxyx
					    mov r7.xy, l(-1.000000,-1.000000,0,0)
					    mov r6.w, l(0)
					    loop 
					      ige r7.z, r6.w, l(4)
					      breakc_nz r7.z
					      itof r7.z, r6.w
					      add r7.w, r3.w, r7.z
					      mul r7.w, r2.w, r7.w
					      add r7.z, r7.z, l(1.000000)
					      max r7.z, r7.z, r7.w
					      mul r8.xy, r6.yzyy, r7.zzzz
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r7.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r7.zw, r7.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r7.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r7.zw, -r9.xxxy, r7.zzzw, r7.xxxy
					      mad r7.zw, r8.zzzw, r7.zzzw, r8.xxxy
					      lt r8.xy, r7.xyxx, r7.zwzz
					      add r8.zw, -r7.zzzw, r7.xxxy
					      mad r8.zw, r3.yyyy, r8.zzzw, r7.zzzw
					      movc r7.xy, r8.xyxx, r7.zwzz, r8.zwzz
					      iadd r6.w, r6.w, l(1)
					    endloop 
					    mad r5.yzw, r2.zzxy, r4.xxyz, -r5.yyzw
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    rsq r4.x, r4.x
					    mul r5.yzw, r4.xxxx, r5.yyzw
					    mul r6.yzw, r2.zzxy, r5.zzwy
					    mad r6.yzw, r2.yyzx, r5.wwyz, -r6.yyzw
					    dp3 r4.x, -r1.xyzx, r5.yzwy
					    mad r5.yzw, -r5.yyzw, r4.xxxx, -r1.xxyz
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    sqrt r4.x, r4.x
					    add r4.x, r4.x, l(0.000100)
					    dp3 r4.z, r5.yzwy, r2.xyzx
					    div r4.z, r4.z, r4.x
					    max r4.z, r4.z, l(-1.000000)
					    min r4.z, r4.z, l(1.000000)
					    dp3 r5.y, r5.yzwy, r6.yzwy
					    lt r5.z, l(0.000000), r5.y
					    lt r5.y, r5.y, l(0.000000)
					    iadd r5.y, r5.z, -r5.y
					    itof r5.y, r5.y
					    add r5.z, -|r4.z|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r4.z|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r4.z|, l(-0.212114)
					    mad r5.w, r5.w, |r4.z|, l(1.570729)
					    mul r6.y, r5.z, r5.w
					    mad r6.y, r6.y, l(-2.000000), l(3.141593)
					    lt r6.z, r4.z, -r4.z
					    and r6.y, r6.z, r6.y
					    mad r5.z, r5.w, r5.z, r6.y
					    mul r5.w, r5.z, r5.y
					    max r6.yz, r7.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
					    min r6.yz, r6.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					    add r7.zw, -|r6.yyyz|, l(0.000000, 0.000000, 1.000000, 1.000000)
					    sqrt r7.zw, r7.zzzw
					    mad r8.xy, |r6.yzyy|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.zzzw, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.yz, r6.yyzy, -r6.yyzy
					    and r6.yz, r6.yyzy, r8.zzwz
					    mad r6.yz, r8.xxyx, r7.zzwz, r6.yyzy
					    mad r6.y, -r5.y, r5.z, -r6.y
					    max r6.y, r6.y, l(-1.570796)
					    mad r8.x, r5.y, r5.z, r6.y
					    mad r6.y, -r5.y, r5.z, r6.z
					    min r6.y, r6.y, l(1.570796)
					    mad r8.y, r5.y, r5.z, r6.y
					    sincos r5.w, null, r5.w
					    add r6.yz, r8.xxyx, r8.xxyx
					    mad r5.yz, -r5.yyyy, r5.zzzz, r6.yyzy
					    sincos null, r5.yz, r5.yyzy
					    add r5.yz, r4.zzzz, -r5.yyzy
					    mad r5.yz, r6.yyzy, r5.wwww, r5.yyzy
					    mad r4.x, r6.x, r6.x, r4.x
					    mul r4.x, r4.x, l(0.250000)
					    add r4.z, r5.z, r5.y
					    add r4.z, r4.z, cb0[16].y
					    mad r4.w, r4.x, r4.z, r4.w
					    iadd r5.x, r5.x, l(1)
					  endloop 
					  mul_sat r0.y, r4.w, l(0.333333)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 628756
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(3.555400, 3.555400, 0.000000, 0.000000), l(-1.777700, -1.777700, 1.000000, 0.000000)
					  dp3 r1.z, r1.xyzx, r1.xyzx
					  div r1.z, l(2.000000), r1.z
					  mul r2.xy, r1.xyxx, r1.zzzz
					  add r1.x, r1.z, l(-1.000000)
					  mov r2.z, -r1.x
					  dp3 r1.x, -r0.xzwx, -r0.xzwx
					  rsq r1.x, r1.x
					  mul r1.xyz, -r0.zwxz, r1.xxxx
					  dp2 r1.w, r1.xyxx, r1.xyxx
					  add r2.w, r0.x, -cb0[2].x
					  max r2.w, r2.w, l(0.000000)
					  mul_sat r2.w, r2.w, cb0[2].y
					  mov r3.x, cb0[15].w
					  mov r3.y, cb0[16].z
					  add r3.zw, -r3.xxxy, cb0[3].yyyw
					  mad r3.xy, r2.wwww, r3.zwzz, r3.xyxx
					  mul r2.w, r3.x, cb0[15].x
					  div r2.w, r2.w, r0.x
					  min r2.w, r2.w, l(512.000000)
					  max r2.w, r2.w, l(4.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r2.w, r2.w, l(0.200000)
					  mul r3.zw, v1.xxxy, cb0[13].zzzw
					  ftoi r4.xy, r3.zwzz
					  iadd r4.x, -r4.x, r4.y
					  and r4.x, r4.x, l(3)
					  itof r4.x, r4.x
					  round_z r3.zw, r3.zzzw
					  dp2 r3.z, r3.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r3.z, r3.z
					  mul r3.z, r3.z, l(52.982918)
					  frc r3.z, r3.z
					  add r3.z, r3.z, cb0[15].y
					  mad r3.w, r4.x, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r3.z, r3.z, l(1.047198)
					  mov r4.y, l(0)
					  mov r4.w, l(0)
					  mov r5.x, l(0)
					  loop 
					    ige r5.y, r5.x, l(3)
					    breakc_nz r5.y
					    itof r5.y, r5.x
					    mad r5.y, r5.y, l(1.047198), r3.z
					    sincos r4.x, r6.x, r5.y
					    mov r4.z, r6.x
					    mul r5.yzw, r1.yyzx, r4.yyzx
					    mul r6.xyz, r1.zxyz, r4.xyzx
					    mad r6.xyz, r1.yzxy, r4.yzxy, -r6.xyzx
					    dp3 r6.x, r2.xyzx, r6.xyzx
					    mul r6.x, r1.w, r6.x
					    mul r6.yz, r4.zzxz, cb0[13].xxyx
					    mov r7.xy, l(-1.000000,-1.000000,0,0)
					    mov r6.w, l(0)
					    loop 
					      ige r7.z, r6.w, l(4)
					      breakc_nz r7.z
					      itof r7.z, r6.w
					      add r7.w, r3.w, r7.z
					      mul r7.w, r2.w, r7.w
					      add r7.z, r7.z, l(1.000000)
					      max r7.z, r7.z, r7.w
					      mul r8.xy, r6.yzyy, r7.zzzz
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r7.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r7.zw, r7.zzzw
					      dp3 r9.x, r9.xyzx, r1.xyzx
					      dp3 r9.y, r8.xyzx, r1.xyzx
					      mul r8.xy, r7.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r7.zw, -r9.xxxy, r7.zzzw, r7.xxxy
					      mad r7.zw, r8.zzzw, r7.zzzw, r8.xxxy
					      lt r8.xy, r7.xyxx, r7.zwzz
					      add r8.zw, -r7.zzzw, r7.xxxy
					      mad r8.zw, r3.yyyy, r8.zzzw, r7.zzzw
					      movc r7.xy, r8.xyxx, r7.zwzz, r8.zwzz
					      iadd r6.w, r6.w, l(1)
					    endloop 
					    mad r5.yzw, r1.zzxy, r4.xxyz, -r5.yyzw
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    rsq r4.x, r4.x
					    mul r5.yzw, r4.xxxx, r5.yyzw
					    mul r6.yzw, r1.zzxy, r5.zzwy
					    mad r6.yzw, r1.yyzx, r5.wwyz, -r6.yyzw
					    dp3 r4.x, r2.xyzx, r5.yzwy
					    mad r5.yzw, -r5.yyzw, r4.xxxx, r2.xxyz
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    sqrt r4.x, r4.x
					    add r4.x, r4.x, l(0.000100)
					    dp3 r4.z, r5.yzwy, r1.xyzx
					    div r4.z, r4.z, r4.x
					    max r4.z, r4.z, l(-1.000000)
					    min r4.z, r4.z, l(1.000000)
					    dp3 r5.y, r5.yzwy, r6.yzwy
					    lt r5.z, l(0.000000), r5.y
					    lt r5.y, r5.y, l(0.000000)
					    iadd r5.y, r5.z, -r5.y
					    itof r5.y, r5.y
					    add r5.z, -|r4.z|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r4.z|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r4.z|, l(-0.212114)
					    mad r5.w, r5.w, |r4.z|, l(1.570729)
					    mul r6.y, r5.z, r5.w
					    mad r6.y, r6.y, l(-2.000000), l(3.141593)
					    lt r6.z, r4.z, -r4.z
					    and r6.y, r6.z, r6.y
					    mad r5.z, r5.w, r5.z, r6.y
					    mul r5.w, r5.z, r5.y
					    max r6.yz, r7.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
					    min r6.yz, r6.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					    add r7.zw, -|r6.yyyz|, l(0.000000, 0.000000, 1.000000, 1.000000)
					    sqrt r7.zw, r7.zzzw
					    mad r8.xy, |r6.yzyy|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.zzzw, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.yz, r6.yyzy, -r6.yyzy
					    and r6.yz, r6.yyzy, r8.zzwz
					    mad r6.yz, r8.xxyx, r7.zzwz, r6.yyzy
					    mad r6.y, -r5.y, r5.z, -r6.y
					    max r6.y, r6.y, l(-1.570796)
					    mad r8.x, r5.y, r5.z, r6.y
					    mad r6.y, -r5.y, r5.z, r6.z
					    min r6.y, r6.y, l(1.570796)
					    mad r8.y, r5.y, r5.z, r6.y
					    sincos r5.w, null, r5.w
					    add r6.yz, r8.xxyx, r8.xxyx
					    mad r5.yz, -r5.yyyy, r5.zzzz, r6.yyzy
					    sincos null, r5.yz, r5.yyzy
					    add r5.yz, r4.zzzz, -r5.yyzy
					    mad r5.yz, r6.yyzy, r5.wwww, r5.yyzy
					    mad r4.x, r6.x, r6.x, r4.x
					    mul r4.x, r4.x, l(0.250000)
					    add r4.z, r5.z, r5.y
					    add r4.z, r4.z, cb0[16].y
					    mad r4.w, r4.x, r4.z, r4.w
					    iadd r5.x, r5.x, l(1)
					  endloop 
					  mul_sat r0.y, r4.w, l(0.333333)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 704328
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
					  mul r2.xyz, r1.yyyy, cb0[5].xyzx
					  mad r1.xyw, cb0[4].xyxz, r1.xxxx, r2.xyxz
					  mad r1.xyz, cb0[6].xyzx, r1.zzzz, r1.xywx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r2.x, -r0.xzwx, -r0.xzwx
					  rsq r2.x, r2.x
					  mul r2.xyz, -r0.zwxz, r2.xxxx
					  dp2 r2.w, r2.xyxx, r2.xyxx
					  add r3.x, r0.x, -cb0[2].x
					  max r3.x, r3.x, l(0.000000)
					  mul_sat r3.x, r3.x, cb0[2].y
					  mov r4.x, cb0[15].w
					  mov r4.y, cb0[16].z
					  add r3.yz, -r4.xxyx, cb0[3].yywy
					  mad r3.xy, r3.xxxx, r3.yzyy, r4.xyxx
					  mul r3.z, r3.x, cb0[15].x
					  div r3.z, r3.z, r0.x
					  min r3.z, r3.z, l(512.000000)
					  max r3.z, r3.z, l(4.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r3.z, r3.z, l(0.200000)
					  mul r4.xy, v1.xyxx, cb0[13].zwzz
					  ftoi r4.zw, r4.xxxy
					  iadd r3.w, -r4.z, r4.w
					  and r3.w, r3.w, l(3)
					  itof r3.w, r3.w
					  round_z r4.xy, r4.xyxx
					  dp2 r4.x, r4.xyxx, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r4.x, r4.x
					  mul r4.x, r4.x, l(52.982918)
					  frc r4.x, r4.x
					  add r4.x, r4.x, cb0[15].y
					  mad r3.w, r3.w, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r4.x, r4.x, l(1.047198)
					  mov r5.y, l(0)
					  mov r1.w, -r1.z
					  mov r1.z, l(0)
					  mov r4.y, l(0)
					  loop 
					    ige r4.z, r4.y, l(3)
					    breakc_nz r4.z
					    itof r4.z, r4.y
					    mad r4.z, r4.z, l(1.047198), r4.x
					    sincos r5.x, r6.x, r4.z
					    mov r5.z, r6.x
					    mul r6.xyz, r2.yzxy, r5.yzxy
					    mul r7.xyz, r2.zxyz, r5.xyzx
					    mad r7.xyz, r2.yzxy, r5.yzxy, -r7.xyzx
					    dp3 r4.z, r1.xywx, r7.xyzx
					    mul r4.z, r2.w, r4.z
					    mul r7.xy, r5.zxzz, cb0[13].xyxx
					    mov r7.zw, l(0,0,-1.000000,-1.000000)
					    mov r4.w, l(0)
					    loop 
					      ige r5.w, r4.w, l(4)
					      breakc_nz r5.w
					      itof r5.w, r4.w
					      add r6.w, r3.w, r5.w
					      mul r6.w, r3.z, r6.w
					      add r5.w, r5.w, l(1.000000)
					      max r5.w, r5.w, r6.w
					      mul r8.xy, r5.wwww, r7.xyxx
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r10.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r10.zw, r10.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r10.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r9.xy, -r9.xyxx, r10.zwzz, r7.zwzz
					      mad r8.xy, r8.zwzz, r9.xyxx, r8.xyxx
					      lt r8.zw, r7.zzzw, r8.xxxy
					      add r9.xy, r7.zwzz, -r8.xyxx
					      mad r9.xy, r3.yyyy, r9.xyxx, r8.xyxx
					      movc r7.zw, r8.zzzw, r8.xxxy, r9.xxxy
					      iadd r4.w, r4.w, l(1)
					    endloop 
					    mad r5.xzw, r2.zzxy, r5.xxyz, -r6.xxyz
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    rsq r4.w, r4.w
					    mul r5.xzw, r4.wwww, r5.xxzw
					    mul r6.xyz, r2.zxyz, r5.zwxz
					    mad r6.xyz, r2.yzxy, r5.wxzw, -r6.xyzx
					    dp3 r4.w, r1.xywx, r5.xzwx
					    mad r5.xzw, -r5.xxzw, r4.wwww, r1.xxyw
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    sqrt r4.w, r4.w
					    add r4.w, r4.w, l(0.000100)
					    dp3 r6.w, r5.xzwx, r2.xyzx
					    div r6.w, r6.w, r4.w
					    max r6.w, r6.w, l(-1.000000)
					    min r6.w, r6.w, l(1.000000)
					    dp3 r5.x, r5.xzwx, r6.xyzx
					    lt r5.z, l(0.000000), r5.x
					    lt r5.x, r5.x, l(0.000000)
					    iadd r5.x, r5.z, -r5.x
					    itof r5.x, r5.x
					    add r5.z, -|r6.w|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r6.w|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r6.w|, l(-0.212114)
					    mad r5.w, r5.w, |r6.w|, l(1.570729)
					    mul r6.x, r5.z, r5.w
					    mad r6.x, r6.x, l(-2.000000), l(3.141593)
					    lt r6.y, r6.w, -r6.w
					    and r6.x, r6.y, r6.x
					    mad r5.z, r5.w, r5.z, r6.x
					    mul r5.w, r5.z, r5.x
					    max r6.xy, r7.zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					    min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					    add r7.xy, -|r6.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
					    sqrt r7.xy, r7.xyxx
					    mad r8.xy, |r6.xyxx|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.xxxy, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.xy, r6.xyxx, -r6.xyxx
					    and r6.xy, r6.xyxx, r8.zwzz
					    mad r6.xy, r8.xyxx, r7.xyxx, r6.xyxx
					    mad r6.x, -r5.x, r5.z, -r6.x
					    max r6.x, r6.x, l(-1.570796)
					    mad r7.x, r5.x, r5.z, r6.x
					    mad r6.x, -r5.x, r5.z, r6.y
					    min r6.x, r6.x, l(1.570796)
					    mad r7.y, r5.x, r5.z, r6.x
					    sincos r5.w, null, r5.w
					    add r6.xy, r7.xyxx, r7.xyxx
					    mad r5.xz, -r5.xxxx, r5.zzzz, r6.xxyx
					    sincos null, r5.xz, r5.xxzx
					    add r5.xz, r6.wwww, -r5.xxzx
					    mad r5.xz, r6.xxyx, r5.wwww, r5.xxzx
					    mad r4.z, r4.z, r4.z, r4.w
					    mul r4.z, r4.z, l(0.250000)
					    add r4.w, r5.z, r5.x
					    add r4.w, r4.w, cb0[16].y
					    mad r1.z, r4.z, r4.w, r1.z
					    iadd r4.y, r4.y, l(1)
					  endloop 
					  mul_sat r0.y, r1.z, l(0.333333)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 766160
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
					  lt r1.w, r1.w, l(1.000000)
					  add r2.xyz, -|r1.xyxx|, l(1.000000, 1.000000, 1.000000, 0.000000)
					  add r3.z, -|r1.y|, r2.x
					  ge r2.x, r3.z, l(0.000000)
					  lt r4.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyxx
					  lt r4.zw, r1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  iadd r4.xy, -r4.xyxx, r4.zwzz
					  itof r4.xy, r4.xyxx
					  mul r2.yz, r2.yyzy, r4.xxyx
					  movc r3.xy, r2.xxxx, r1.xyxx, r2.yzyy
					  movc r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
					  mul r2.xyz, r1.yyyy, cb0[5].xyzx
					  mad r1.xyw, cb0[4].xyxz, r1.xxxx, r2.xyxz
					  mad r1.xyz, cb0[6].xyzx, r1.zzzz, r1.xywx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r2.x, -r0.xzwx, -r0.xzwx
					  rsq r2.x, r2.x
					  mul r2.xyz, -r0.zwxz, r2.xxxx
					  dp2 r2.w, r2.xyxx, r2.xyxx
					  add r3.x, r0.x, -cb0[2].x
					  max r3.x, r3.x, l(0.000000)
					  mul_sat r3.x, r3.x, cb0[2].y
					  mov r4.x, cb0[15].w
					  mov r4.y, cb0[16].z
					  add r3.yz, -r4.xxyx, cb0[3].yywy
					  mad r3.xy, r3.xxxx, r3.yzyy, r4.xyxx
					  mul r3.z, r3.x, cb0[15].x
					  div r3.z, r3.z, r0.x
					  min r3.z, r3.z, l(512.000000)
					  max r3.z, r3.z, l(4.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r3.z, r3.z, l(0.200000)
					  mul r4.xy, v1.xyxx, cb0[13].zwzz
					  ftoi r4.zw, r4.xxxy
					  iadd r3.w, -r4.z, r4.w
					  and r3.w, r3.w, l(3)
					  itof r3.w, r3.w
					  round_z r4.xy, r4.xyxx
					  dp2 r4.x, r4.xyxx, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r4.x, r4.x
					  mul r4.x, r4.x, l(52.982918)
					  frc r4.x, r4.x
					  add r4.x, r4.x, cb0[15].y
					  mad r3.w, r3.w, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r4.x, r4.x, l(1.047198)
					  mov r5.y, l(0)
					  mov r1.w, -r1.z
					  mov r1.z, l(0)
					  mov r4.y, l(0)
					  loop 
					    ige r4.z, r4.y, l(3)
					    breakc_nz r4.z
					    itof r4.z, r4.y
					    mad r4.z, r4.z, l(1.047198), r4.x
					    sincos r5.x, r6.x, r4.z
					    mov r5.z, r6.x
					    mul r6.xyz, r2.yzxy, r5.yzxy
					    mul r7.xyz, r2.zxyz, r5.xyzx
					    mad r7.xyz, r2.yzxy, r5.yzxy, -r7.xyzx
					    dp3 r4.z, r1.xywx, r7.xyzx
					    mul r4.z, r2.w, r4.z
					    mul r7.xy, r5.zxzz, cb0[13].xyxx
					    mov r7.zw, l(0,0,-1.000000,-1.000000)
					    mov r4.w, l(0)
					    loop 
					      ige r5.w, r4.w, l(4)
					      breakc_nz r5.w
					      itof r5.w, r4.w
					      add r6.w, r3.w, r5.w
					      mul r6.w, r3.z, r6.w
					      add r5.w, r5.w, l(1.000000)
					      max r5.w, r5.w, r6.w
					      mul r8.xy, r5.wwww, r7.xyxx
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r10.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r10.zw, r10.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r10.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r9.xy, -r9.xyxx, r10.zwzz, r7.zwzz
					      mad r8.xy, r8.zwzz, r9.xyxx, r8.xyxx
					      lt r8.zw, r7.zzzw, r8.xxxy
					      add r9.xy, r7.zwzz, -r8.xyxx
					      mad r9.xy, r3.yyyy, r9.xyxx, r8.xyxx
					      movc r7.zw, r8.zzzw, r8.xxxy, r9.xxxy
					      iadd r4.w, r4.w, l(1)
					    endloop 
					    mad r5.xzw, r2.zzxy, r5.xxyz, -r6.xxyz
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    rsq r4.w, r4.w
					    mul r5.xzw, r4.wwww, r5.xxzw
					    mul r6.xyz, r2.zxyz, r5.zwxz
					    mad r6.xyz, r2.yzxy, r5.wxzw, -r6.xyzx
					    dp3 r4.w, r1.xywx, r5.xzwx
					    mad r5.xzw, -r5.xxzw, r4.wwww, r1.xxyw
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    sqrt r4.w, r4.w
					    add r4.w, r4.w, l(0.000100)
					    dp3 r6.w, r5.xzwx, r2.xyzx
					    div r6.w, r6.w, r4.w
					    max r6.w, r6.w, l(-1.000000)
					    min r6.w, r6.w, l(1.000000)
					    dp3 r5.x, r5.xzwx, r6.xyzx
					    lt r5.z, l(0.000000), r5.x
					    lt r5.x, r5.x, l(0.000000)
					    iadd r5.x, r5.z, -r5.x
					    itof r5.x, r5.x
					    add r5.z, -|r6.w|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r6.w|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r6.w|, l(-0.212114)
					    mad r5.w, r5.w, |r6.w|, l(1.570729)
					    mul r6.x, r5.z, r5.w
					    mad r6.x, r6.x, l(-2.000000), l(3.141593)
					    lt r6.y, r6.w, -r6.w
					    and r6.x, r6.y, r6.x
					    mad r5.z, r5.w, r5.z, r6.x
					    mul r5.w, r5.z, r5.x
					    max r6.xy, r7.zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					    min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					    add r7.xy, -|r6.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
					    sqrt r7.xy, r7.xyxx
					    mad r8.xy, |r6.xyxx|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.xxxy, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.xy, r6.xyxx, -r6.xyxx
					    and r6.xy, r6.xyxx, r8.zwzz
					    mad r6.xy, r8.xyxx, r7.xyxx, r6.xyxx
					    mad r6.x, -r5.x, r5.z, -r6.x
					    max r6.x, r6.x, l(-1.570796)
					    mad r7.x, r5.x, r5.z, r6.x
					    mad r6.x, -r5.x, r5.z, r6.y
					    min r6.x, r6.x, l(1.570796)
					    mad r7.y, r5.x, r5.z, r6.x
					    sincos r5.w, null, r5.w
					    add r6.xy, r7.xyxx, r7.xyxx
					    mad r5.xz, -r5.xxxx, r5.zzzz, r6.xxyx
					    sincos null, r5.xz, r5.xxzx
					    add r5.xz, r6.wwww, -r5.xxzx
					    mad r5.xz, r6.xxyx, r5.wwww, r5.xxzx
					    mad r4.z, r4.z, r4.z, r4.w
					    mul r4.z, r4.z, l(0.250000)
					    add r4.w, r5.z, r5.x
					    add r4.w, r4.w, cb0[16].y
					    mad r1.z, r4.z, r4.w, r1.z
					    iadd r4.y, r4.y, l(1)
					  endloop 
					  mul_sat r0.y, r1.z, l(0.333333)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 789815
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  mul r1.xy, v1.xyxx, cb0[12].zwzz
					  round_pi r1.xy, r1.xyxx
					  add r1.x, -r1.x, r1.y
					  mul r1.x, r1.x, l(0.250000)
					  frc r1.x, r1.x
					  mad r1.x, r1.x, l(0.500000), l(1.000000)
					  mul r1.xyzw, r1.xxxx, cb0[12].xyxy
					  mad r2.xyzw, r1.zwzw, l(1.000000, 0.000000, -1.000000, 0.000000), v1.xyxy
					  sample_l r3.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
					  mad r3.x, cb1[7].z, r3.x, cb1[7].w
					  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
					  mad r4.xyzw, r2.xyzw, cb0[14].xyxy, cb0[14].zwzw
					  mul r3.yz, r3.xxxx, r4.xxyx
					  sample_l r2.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
					  mad r2.x, cb1[7].z, r2.x, cb1[7].w
					  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
					  mul r2.yz, r2.xxxx, r4.zzwz
					  mad r1.xyzw, r1.xyzw, l(0.000000, 1.000000, 0.000000, -1.000000), v1.xyxy
					  sample_l r4.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
					  mad r2.w, cb1[7].z, r4.x, cb1[7].w
					  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
					  mad r5.xyzw, r1.xyzw, cb0[14].xyxy, cb0[14].zwzw
					  mul r4.xz, r4.yyyy, r5.yyxy
					  sample_l r1.xyzw, r1.zwzz, t0.xyzw, s0, l(0.000000)
					  mad r1.x, cb1[7].z, r1.x, cb1[7].w
					  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					  mul r1.xz, r1.yyyy, r5.wwzw
					  add r3.xyz, -r0.xzwx, r3.xyzx
					  add r2.xyz, r0.xzwx, -r2.xyzx
					  add r4.xyz, -r0.wxzw, r4.xyzx
					  add r1.xyz, r0.wxzw, -r1.xyzx
					  dp3 r1.w, r3.xyzx, r3.xyzx
					  dp3 r2.w, r2.xyzx, r2.xyzx
					  lt r1.w, r1.w, r2.w
					  movc r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
					  dp3 r1.w, r4.xyzx, r4.xyzx
					  dp3 r2.w, r1.xyzx, r1.xyzx
					  lt r1.w, r1.w, r2.w
					  movc r1.xyz, r1.wwww, r4.xyzx, r1.xyzx
					  mul r3.xyz, r1.xyzx, r2.xyzx
					  mad r1.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r1.w, -r0.xzwx, -r0.xzwx
					  rsq r1.w, r1.w
					  mul r2.xyz, -r0.zwxz, r1.wwww
					  dp2 r1.w, r2.xyxx, r2.xyxx
					  add r2.w, r0.x, -cb0[2].x
					  max r2.w, r2.w, l(0.000000)
					  mul_sat r2.w, r2.w, cb0[2].y
					  mov r3.x, cb0[15].w
					  mov r3.y, cb0[16].z
					  add r3.zw, -r3.xxxy, cb0[3].yyyw
					  mad r3.xy, r2.wwww, r3.zwzz, r3.xyxx
					  mul r2.w, r3.x, cb0[15].x
					  div r2.w, r2.w, r0.x
					  min r2.w, r2.w, l(512.000000)
					  max r2.w, r2.w, l(5.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r2.w, r2.w, l(0.166667)
					  mul r3.zw, v1.xxxy, cb0[13].zzzw
					  ftoi r4.xy, r3.zwzz
					  iadd r4.x, -r4.x, r4.y
					  and r4.x, r4.x, l(3)
					  itof r4.x, r4.x
					  round_z r3.zw, r3.zzzw
					  dp2 r3.z, r3.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r3.z, r3.z
					  mul r3.z, r3.z, l(52.982918)
					  frc r3.z, r3.z
					  add r3.z, r3.z, cb0[15].y
					  mad r3.w, r4.x, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r3.z, r3.z, l(0.785398)
					  mov r4.y, l(0)
					  mov r4.w, l(0)
					  mov r5.x, l(0)
					  loop 
					    ige r5.y, r5.x, l(4)
					    breakc_nz r5.y
					    itof r5.y, r5.x
					    mad r5.y, r5.y, l(0.785398), r3.z
					    sincos r4.x, r6.x, r5.y
					    mov r4.z, r6.x
					    mul r5.yzw, r2.yyzx, r4.yyzx
					    mul r6.xyz, r2.zxyz, r4.xyzx
					    mad r6.xyz, r2.yzxy, r4.yzxy, -r6.xyzx
					    dp3 r6.x, -r1.xyzx, r6.xyzx
					    mul r6.x, r1.w, r6.x
					    mul r6.yz, r4.zzxz, cb0[13].xxyx
					    mov r7.xy, l(-1.000000,-1.000000,0,0)
					    mov r6.w, l(0)
					    loop 
					      ige r7.z, r6.w, l(5)
					      breakc_nz r7.z
					      itof r7.z, r6.w
					      add r7.w, r3.w, r7.z
					      mul r7.w, r2.w, r7.w
					      add r7.z, r7.z, l(1.000000)
					      max r7.z, r7.z, r7.w
					      mul r8.xy, r6.yzyy, r7.zzzz
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r7.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r7.zw, r7.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r7.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r7.zw, -r9.xxxy, r7.zzzw, r7.xxxy
					      mad r7.zw, r8.zzzw, r7.zzzw, r8.xxxy
					      lt r8.xy, r7.xyxx, r7.zwzz
					      add r8.zw, -r7.zzzw, r7.xxxy
					      mad r8.zw, r3.yyyy, r8.zzzw, r7.zzzw
					      movc r7.xy, r8.xyxx, r7.zwzz, r8.zwzz
					      iadd r6.w, r6.w, l(1)
					    endloop 
					    mad r5.yzw, r2.zzxy, r4.xxyz, -r5.yyzw
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    rsq r4.x, r4.x
					    mul r5.yzw, r4.xxxx, r5.yyzw
					    mul r6.yzw, r2.zzxy, r5.zzwy
					    mad r6.yzw, r2.yyzx, r5.wwyz, -r6.yyzw
					    dp3 r4.x, -r1.xyzx, r5.yzwy
					    mad r5.yzw, -r5.yyzw, r4.xxxx, -r1.xxyz
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    sqrt r4.x, r4.x
					    add r4.x, r4.x, l(0.000100)
					    dp3 r4.z, r5.yzwy, r2.xyzx
					    div r4.z, r4.z, r4.x
					    max r4.z, r4.z, l(-1.000000)
					    min r4.z, r4.z, l(1.000000)
					    dp3 r5.y, r5.yzwy, r6.yzwy
					    lt r5.z, l(0.000000), r5.y
					    lt r5.y, r5.y, l(0.000000)
					    iadd r5.y, r5.z, -r5.y
					    itof r5.y, r5.y
					    add r5.z, -|r4.z|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r4.z|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r4.z|, l(-0.212114)
					    mad r5.w, r5.w, |r4.z|, l(1.570729)
					    mul r6.y, r5.z, r5.w
					    mad r6.y, r6.y, l(-2.000000), l(3.141593)
					    lt r6.z, r4.z, -r4.z
					    and r6.y, r6.z, r6.y
					    mad r5.z, r5.w, r5.z, r6.y
					    mul r5.w, r5.z, r5.y
					    max r6.yz, r7.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
					    min r6.yz, r6.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					    add r7.zw, -|r6.yyyz|, l(0.000000, 0.000000, 1.000000, 1.000000)
					    sqrt r7.zw, r7.zzzw
					    mad r8.xy, |r6.yzyy|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.zzzw, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.yz, r6.yyzy, -r6.yyzy
					    and r6.yz, r6.yyzy, r8.zzwz
					    mad r6.yz, r8.xxyx, r7.zzwz, r6.yyzy
					    mad r6.y, -r5.y, r5.z, -r6.y
					    max r6.y, r6.y, l(-1.570796)
					    mad r8.x, r5.y, r5.z, r6.y
					    mad r6.y, -r5.y, r5.z, r6.z
					    min r6.y, r6.y, l(1.570796)
					    mad r8.y, r5.y, r5.z, r6.y
					    sincos r5.w, null, r5.w
					    add r6.yz, r8.xxyx, r8.xxyx
					    mad r5.yz, -r5.yyyy, r5.zzzz, r6.yyzy
					    sincos null, r5.yz, r5.yyzy
					    add r5.yz, r4.zzzz, -r5.yyzy
					    mad r5.yz, r6.yyzy, r5.wwww, r5.yyzy
					    mad r4.x, r6.x, r6.x, r4.x
					    mul r4.x, r4.x, l(0.250000)
					    add r4.z, r5.z, r5.y
					    add r4.z, r4.z, cb0[16].y
					    mad r4.w, r4.x, r4.z, r4.w
					    iadd r5.x, r5.x, l(1)
					  endloop 
					  mul_sat r0.y, r4.w, l(0.250000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 902904
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(3.555400, 3.555400, 0.000000, 0.000000), l(-1.777700, -1.777700, 1.000000, 0.000000)
					  dp3 r1.z, r1.xyzx, r1.xyzx
					  div r1.z, l(2.000000), r1.z
					  mul r2.xy, r1.xyxx, r1.zzzz
					  add r1.x, r1.z, l(-1.000000)
					  mov r2.z, -r1.x
					  dp3 r1.x, -r0.xzwx, -r0.xzwx
					  rsq r1.x, r1.x
					  mul r1.xyz, -r0.zwxz, r1.xxxx
					  dp2 r1.w, r1.xyxx, r1.xyxx
					  add r2.w, r0.x, -cb0[2].x
					  max r2.w, r2.w, l(0.000000)
					  mul_sat r2.w, r2.w, cb0[2].y
					  mov r3.x, cb0[15].w
					  mov r3.y, cb0[16].z
					  add r3.zw, -r3.xxxy, cb0[3].yyyw
					  mad r3.xy, r2.wwww, r3.zwzz, r3.xyxx
					  mul r2.w, r3.x, cb0[15].x
					  div r2.w, r2.w, r0.x
					  min r2.w, r2.w, l(512.000000)
					  max r2.w, r2.w, l(5.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r2.w, r2.w, l(0.166667)
					  mul r3.zw, v1.xxxy, cb0[13].zzzw
					  ftoi r4.xy, r3.zwzz
					  iadd r4.x, -r4.x, r4.y
					  and r4.x, r4.x, l(3)
					  itof r4.x, r4.x
					  round_z r3.zw, r3.zzzw
					  dp2 r3.z, r3.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r3.z, r3.z
					  mul r3.z, r3.z, l(52.982918)
					  frc r3.z, r3.z
					  add r3.z, r3.z, cb0[15].y
					  mad r3.w, r4.x, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r3.z, r3.z, l(0.785398)
					  mov r4.y, l(0)
					  mov r4.w, l(0)
					  mov r5.x, l(0)
					  loop 
					    ige r5.y, r5.x, l(4)
					    breakc_nz r5.y
					    itof r5.y, r5.x
					    mad r5.y, r5.y, l(0.785398), r3.z
					    sincos r4.x, r6.x, r5.y
					    mov r4.z, r6.x
					    mul r5.yzw, r1.yyzx, r4.yyzx
					    mul r6.xyz, r1.zxyz, r4.xyzx
					    mad r6.xyz, r1.yzxy, r4.yzxy, -r6.xyzx
					    dp3 r6.x, r2.xyzx, r6.xyzx
					    mul r6.x, r1.w, r6.x
					    mul r6.yz, r4.zzxz, cb0[13].xxyx
					    mov r7.xy, l(-1.000000,-1.000000,0,0)
					    mov r6.w, l(0)
					    loop 
					      ige r7.z, r6.w, l(5)
					      breakc_nz r7.z
					      itof r7.z, r6.w
					      add r7.w, r3.w, r7.z
					      mul r7.w, r2.w, r7.w
					      add r7.z, r7.z, l(1.000000)
					      max r7.z, r7.z, r7.w
					      mul r8.xy, r6.yzyy, r7.zzzz
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r7.z, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r7.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r7.zw, r7.zzzw
					      dp3 r9.x, r9.xyzx, r1.xyzx
					      dp3 r9.y, r8.xyzx, r1.xyzx
					      mul r8.xy, r7.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r7.zw, -r9.xxxy, r7.zzzw, r7.xxxy
					      mad r7.zw, r8.zzzw, r7.zzzw, r8.xxxy
					      lt r8.xy, r7.xyxx, r7.zwzz
					      add r8.zw, -r7.zzzw, r7.xxxy
					      mad r8.zw, r3.yyyy, r8.zzzw, r7.zzzw
					      movc r7.xy, r8.xyxx, r7.zwzz, r8.zwzz
					      iadd r6.w, r6.w, l(1)
					    endloop 
					    mad r5.yzw, r1.zzxy, r4.xxyz, -r5.yyzw
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    rsq r4.x, r4.x
					    mul r5.yzw, r4.xxxx, r5.yyzw
					    mul r6.yzw, r1.zzxy, r5.zzwy
					    mad r6.yzw, r1.yyzx, r5.wwyz, -r6.yyzw
					    dp3 r4.x, r2.xyzx, r5.yzwy
					    mad r5.yzw, -r5.yyzw, r4.xxxx, r2.xxyz
					    dp3 r4.x, r5.yzwy, r5.yzwy
					    sqrt r4.x, r4.x
					    add r4.x, r4.x, l(0.000100)
					    dp3 r4.z, r5.yzwy, r1.xyzx
					    div r4.z, r4.z, r4.x
					    max r4.z, r4.z, l(-1.000000)
					    min r4.z, r4.z, l(1.000000)
					    dp3 r5.y, r5.yzwy, r6.yzwy
					    lt r5.z, l(0.000000), r5.y
					    lt r5.y, r5.y, l(0.000000)
					    iadd r5.y, r5.z, -r5.y
					    itof r5.y, r5.y
					    add r5.z, -|r4.z|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r4.z|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r4.z|, l(-0.212114)
					    mad r5.w, r5.w, |r4.z|, l(1.570729)
					    mul r6.y, r5.z, r5.w
					    mad r6.y, r6.y, l(-2.000000), l(3.141593)
					    lt r6.z, r4.z, -r4.z
					    and r6.y, r6.z, r6.y
					    mad r5.z, r5.w, r5.z, r6.y
					    mul r5.w, r5.z, r5.y
					    max r6.yz, r7.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
					    min r6.yz, r6.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
					    add r7.zw, -|r6.yyyz|, l(0.000000, 0.000000, 1.000000, 1.000000)
					    sqrt r7.zw, r7.zzzw
					    mad r8.xy, |r6.yzyy|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.yzyy|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.zzzw, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.yz, r6.yyzy, -r6.yyzy
					    and r6.yz, r6.yyzy, r8.zzwz
					    mad r6.yz, r8.xxyx, r7.zzwz, r6.yyzy
					    mad r6.y, -r5.y, r5.z, -r6.y
					    max r6.y, r6.y, l(-1.570796)
					    mad r8.x, r5.y, r5.z, r6.y
					    mad r6.y, -r5.y, r5.z, r6.z
					    min r6.y, r6.y, l(1.570796)
					    mad r8.y, r5.y, r5.z, r6.y
					    sincos r5.w, null, r5.w
					    add r6.yz, r8.xxyx, r8.xxyx
					    mad r5.yz, -r5.yyyy, r5.zzzz, r6.yyzy
					    sincos null, r5.yz, r5.yyzy
					    add r5.yz, r4.zzzz, -r5.yyzy
					    mad r5.yz, r6.yyzy, r5.wwww, r5.yyzy
					    mad r4.x, r6.x, r6.x, r4.x
					    mul r4.x, r4.x, l(0.250000)
					    add r4.z, r5.z, r5.y
					    add r4.z, r4.z, cb0[16].y
					    mad r4.w, r4.x, r4.z, r4.w
					    iadd r5.x, r5.x, l(1)
					  endloop 
					  mul_sat r0.y, r4.w, l(0.250000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 934786
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
					  mul r2.xyz, r1.yyyy, cb0[5].xyzx
					  mad r1.xyw, cb0[4].xyxz, r1.xxxx, r2.xyxz
					  mad r1.xyz, cb0[6].xyzx, r1.zzzz, r1.xywx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r2.x, -r0.xzwx, -r0.xzwx
					  rsq r2.x, r2.x
					  mul r2.xyz, -r0.zwxz, r2.xxxx
					  dp2 r2.w, r2.xyxx, r2.xyxx
					  add r3.x, r0.x, -cb0[2].x
					  max r3.x, r3.x, l(0.000000)
					  mul_sat r3.x, r3.x, cb0[2].y
					  mov r4.x, cb0[15].w
					  mov r4.y, cb0[16].z
					  add r3.yz, -r4.xxyx, cb0[3].yywy
					  mad r3.xy, r3.xxxx, r3.yzyy, r4.xyxx
					  mul r3.z, r3.x, cb0[15].x
					  div r3.z, r3.z, r0.x
					  min r3.z, r3.z, l(512.000000)
					  max r3.z, r3.z, l(5.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r3.z, r3.z, l(0.166667)
					  mul r4.xy, v1.xyxx, cb0[13].zwzz
					  ftoi r4.zw, r4.xxxy
					  iadd r3.w, -r4.z, r4.w
					  and r3.w, r3.w, l(3)
					  itof r3.w, r3.w
					  round_z r4.xy, r4.xyxx
					  dp2 r4.x, r4.xyxx, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r4.x, r4.x
					  mul r4.x, r4.x, l(52.982918)
					  frc r4.x, r4.x
					  add r4.x, r4.x, cb0[15].y
					  mad r3.w, r3.w, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r4.x, r4.x, l(0.785398)
					  mov r5.y, l(0)
					  mov r1.w, -r1.z
					  mov r1.z, l(0)
					  mov r4.y, l(0)
					  loop 
					    ige r4.z, r4.y, l(4)
					    breakc_nz r4.z
					    itof r4.z, r4.y
					    mad r4.z, r4.z, l(0.785398), r4.x
					    sincos r5.x, r6.x, r4.z
					    mov r5.z, r6.x
					    mul r6.xyz, r2.yzxy, r5.yzxy
					    mul r7.xyz, r2.zxyz, r5.xyzx
					    mad r7.xyz, r2.yzxy, r5.yzxy, -r7.xyzx
					    dp3 r4.z, r1.xywx, r7.xyzx
					    mul r4.z, r2.w, r4.z
					    mul r7.xy, r5.zxzz, cb0[13].xyxx
					    mov r7.zw, l(0,0,-1.000000,-1.000000)
					    mov r4.w, l(0)
					    loop 
					      ige r5.w, r4.w, l(5)
					      breakc_nz r5.w
					      itof r5.w, r4.w
					      add r6.w, r3.w, r5.w
					      mul r6.w, r3.z, r6.w
					      add r5.w, r5.w, l(1.000000)
					      max r5.w, r5.w, r6.w
					      mul r8.xy, r5.wwww, r7.xyxx
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r10.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r10.zw, r10.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r10.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r9.xy, -r9.xyxx, r10.zwzz, r7.zwzz
					      mad r8.xy, r8.zwzz, r9.xyxx, r8.xyxx
					      lt r8.zw, r7.zzzw, r8.xxxy
					      add r9.xy, r7.zwzz, -r8.xyxx
					      mad r9.xy, r3.yyyy, r9.xyxx, r8.xyxx
					      movc r7.zw, r8.zzzw, r8.xxxy, r9.xxxy
					      iadd r4.w, r4.w, l(1)
					    endloop 
					    mad r5.xzw, r2.zzxy, r5.xxyz, -r6.xxyz
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    rsq r4.w, r4.w
					    mul r5.xzw, r4.wwww, r5.xxzw
					    mul r6.xyz, r2.zxyz, r5.zwxz
					    mad r6.xyz, r2.yzxy, r5.wxzw, -r6.xyzx
					    dp3 r4.w, r1.xywx, r5.xzwx
					    mad r5.xzw, -r5.xxzw, r4.wwww, r1.xxyw
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    sqrt r4.w, r4.w
					    add r4.w, r4.w, l(0.000100)
					    dp3 r6.w, r5.xzwx, r2.xyzx
					    div r6.w, r6.w, r4.w
					    max r6.w, r6.w, l(-1.000000)
					    min r6.w, r6.w, l(1.000000)
					    dp3 r5.x, r5.xzwx, r6.xyzx
					    lt r5.z, l(0.000000), r5.x
					    lt r5.x, r5.x, l(0.000000)
					    iadd r5.x, r5.z, -r5.x
					    itof r5.x, r5.x
					    add r5.z, -|r6.w|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r6.w|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r6.w|, l(-0.212114)
					    mad r5.w, r5.w, |r6.w|, l(1.570729)
					    mul r6.x, r5.z, r5.w
					    mad r6.x, r6.x, l(-2.000000), l(3.141593)
					    lt r6.y, r6.w, -r6.w
					    and r6.x, r6.y, r6.x
					    mad r5.z, r5.w, r5.z, r6.x
					    mul r5.w, r5.z, r5.x
					    max r6.xy, r7.zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					    min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					    add r7.xy, -|r6.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
					    sqrt r7.xy, r7.xyxx
					    mad r8.xy, |r6.xyxx|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.xxxy, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.xy, r6.xyxx, -r6.xyxx
					    and r6.xy, r6.xyxx, r8.zwzz
					    mad r6.xy, r8.xyxx, r7.xyxx, r6.xyxx
					    mad r6.x, -r5.x, r5.z, -r6.x
					    max r6.x, r6.x, l(-1.570796)
					    mad r7.x, r5.x, r5.z, r6.x
					    mad r6.x, -r5.x, r5.z, r6.y
					    min r6.x, r6.x, l(1.570796)
					    mad r7.y, r5.x, r5.z, r6.x
					    sincos r5.w, null, r5.w
					    add r6.xy, r7.xyxx, r7.xyxx
					    mad r5.xz, -r5.xxxx, r5.zzzz, r6.xxyx
					    sincos null, r5.xz, r5.xxzx
					    add r5.xz, r6.wwww, -r5.xxzx
					    mad r5.xz, r6.xxyx, r5.wwww, r5.xxzx
					    mad r4.z, r4.z, r4.z, r4.w
					    mul r4.z, r4.z, l(0.250000)
					    add r4.w, r5.z, r5.x
					    add r4.w, r4.w, cb0[16].y
					    mad r1.z, r4.z, r4.w, r1.z
					    iadd r4.y, r4.y, l(1)
					  endloop 
					  mul_sat r0.y, r1.z, l(0.250000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 1027622
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[17], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 11
					sample_l r0.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  mad r1.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
					  mul r0.zw, r0.xxxx, r1.xxxy
					  sample r1.xyzw, v1.xyxx, t1.xyzw, s1
					  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
					  lt r1.w, r1.w, l(1.000000)
					  add r2.xyz, -|r1.xyxx|, l(1.000000, 1.000000, 1.000000, 0.000000)
					  add r3.z, -|r1.y|, r2.x
					  ge r2.x, r3.z, l(0.000000)
					  lt r4.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyxx
					  lt r4.zw, r1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  iadd r4.xy, -r4.xyxx, r4.zwzz
					  itof r4.xy, r4.xyxx
					  mul r2.yz, r2.yyzy, r4.xxyx
					  movc r3.xy, r2.xxxx, r1.xyxx, r2.yzyy
					  movc r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
					  mul r2.xyz, r1.yyyy, cb0[5].xyzx
					  mad r1.xyw, cb0[4].xyxz, r1.xxxx, r2.xyxz
					  mad r1.xyz, cb0[6].xyzx, r1.zzzz, r1.xywx
					  dp3 r1.w, r1.xyzx, r1.xyzx
					  rsq r1.w, r1.w
					  mul r1.xyz, r1.wwww, r1.xyzx
					  dp3 r2.x, -r0.xzwx, -r0.xzwx
					  rsq r2.x, r2.x
					  mul r2.xyz, -r0.zwxz, r2.xxxx
					  dp2 r2.w, r2.xyxx, r2.xyxx
					  add r3.x, r0.x, -cb0[2].x
					  max r3.x, r3.x, l(0.000000)
					  mul_sat r3.x, r3.x, cb0[2].y
					  mov r4.x, cb0[15].w
					  mov r4.y, cb0[16].z
					  add r3.yz, -r4.xxyx, cb0[3].yywy
					  mad r3.xy, r3.xxxx, r3.yzyy, r4.xyxx
					  mul r3.z, r3.x, cb0[15].x
					  div r3.z, r3.z, r0.x
					  min r3.z, r3.z, l(512.000000)
					  max r3.z, r3.z, l(5.000000)
					  mul r3.x, r3.x, r3.x
					  div r3.x, l(2.000000), r3.x
					  mul r3.z, r3.z, l(0.166667)
					  mul r4.xy, v1.xyxx, cb0[13].zwzz
					  ftoi r4.zw, r4.xxxy
					  iadd r3.w, -r4.z, r4.w
					  and r3.w, r3.w, l(3)
					  itof r3.w, r3.w
					  round_z r4.xy, r4.xyxx
					  dp2 r4.x, r4.xyxx, l(0.067111, 0.005837, 0.000000, 0.000000)
					  frc r4.x, r4.x
					  mul r4.x, r4.x, l(52.982918)
					  frc r4.x, r4.x
					  add r4.x, r4.x, cb0[15].y
					  mad r3.w, r3.w, l(0.250000), cb0[15].z
					  frc r3.w, r3.w
					  mul r4.x, r4.x, l(0.785398)
					  mov r5.y, l(0)
					  mov r1.w, -r1.z
					  mov r1.z, l(0)
					  mov r4.y, l(0)
					  loop 
					    ige r4.z, r4.y, l(4)
					    breakc_nz r4.z
					    itof r4.z, r4.y
					    mad r4.z, r4.z, l(0.785398), r4.x
					    sincos r5.x, r6.x, r4.z
					    mov r5.z, r6.x
					    mul r6.xyz, r2.yzxy, r5.yzxy
					    mul r7.xyz, r2.zxyz, r5.xyzx
					    mad r7.xyz, r2.yzxy, r5.yzxy, -r7.xyzx
					    dp3 r4.z, r1.xywx, r7.xyzx
					    mul r4.z, r2.w, r4.z
					    mul r7.xy, r5.zxzz, cb0[13].xyxx
					    mov r7.zw, l(0,0,-1.000000,-1.000000)
					    mov r4.w, l(0)
					    loop 
					      ige r5.w, r4.w, l(5)
					      breakc_nz r5.w
					      itof r5.w, r4.w
					      add r6.w, r3.w, r5.w
					      mul r6.w, r3.z, r6.w
					      add r5.w, r5.w, l(1.000000)
					      max r5.w, r5.w, r6.w
					      mul r8.xy, r5.wwww, r7.xyxx
					      mov r8.zw, -r8.xxxy
					      add r8.xyzw, r8.xyzw, v1.xyxy
					      sample_l r9.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r9.x, cb1[7].w
					      div r9.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mad r10.xyzw, r8.xyzw, cb0[14].xyxy, cb0[14].zwzw
					      mul r9.xy, r9.zzzz, r10.xyxx
					      add r9.xyz, -r0.zwxz, r9.xyzx
					      sample_l r8.xyzw, r8.zwzz, t0.xyzw, s0, l(0.000000)
					      mad r5.w, cb1[7].z, r8.x, cb1[7].w
					      div r8.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
					      mul r8.xy, r8.zzzz, r10.zwzz
					      add r8.xyz, -r0.zwxz, r8.xyzx
					      dp3 r10.x, r9.xyzx, r9.xyzx
					      dp3 r10.y, r8.xyzx, r8.xyzx
					      add r10.zw, r10.xxxy, l(0.000000, 0.000000, 0.000100, 0.000100)
					      rsq r10.zw, r10.zzzw
					      dp3 r9.x, r9.xyzx, r2.xyzx
					      dp3 r9.y, r8.xyzx, r2.xyzx
					      mul r8.xy, r10.zwzz, r9.xyxx
					      mul r8.zw, r3.xxxx, r10.xxxy
					      min r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					      mad r9.xy, -r9.xyxx, r10.zwzz, r7.zwzz
					      mad r8.xy, r8.zwzz, r9.xyxx, r8.xyxx
					      lt r8.zw, r7.zzzw, r8.xxxy
					      add r9.xy, r7.zwzz, -r8.xyxx
					      mad r9.xy, r3.yyyy, r9.xyxx, r8.xyxx
					      movc r7.zw, r8.zzzw, r8.xxxy, r9.xxxy
					      iadd r4.w, r4.w, l(1)
					    endloop 
					    mad r5.xzw, r2.zzxy, r5.xxyz, -r6.xxyz
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    rsq r4.w, r4.w
					    mul r5.xzw, r4.wwww, r5.xxzw
					    mul r6.xyz, r2.zxyz, r5.zwxz
					    mad r6.xyz, r2.yzxy, r5.wxzw, -r6.xyzx
					    dp3 r4.w, r1.xywx, r5.xzwx
					    mad r5.xzw, -r5.xxzw, r4.wwww, r1.xxyw
					    dp3 r4.w, r5.xzwx, r5.xzwx
					    sqrt r4.w, r4.w
					    add r4.w, r4.w, l(0.000100)
					    dp3 r6.w, r5.xzwx, r2.xyzx
					    div r6.w, r6.w, r4.w
					    max r6.w, r6.w, l(-1.000000)
					    min r6.w, r6.w, l(1.000000)
					    dp3 r5.x, r5.xzwx, r6.xyzx
					    lt r5.z, l(0.000000), r5.x
					    lt r5.x, r5.x, l(0.000000)
					    iadd r5.x, r5.z, -r5.x
					    itof r5.x, r5.x
					    add r5.z, -|r6.w|, l(1.000000)
					    sqrt r5.z, r5.z
					    mad r5.w, |r6.w|, l(-0.018729), l(0.074261)
					    mad r5.w, r5.w, |r6.w|, l(-0.212114)
					    mad r5.w, r5.w, |r6.w|, l(1.570729)
					    mul r6.x, r5.z, r5.w
					    mad r6.x, r6.x, l(-2.000000), l(3.141593)
					    lt r6.y, r6.w, -r6.w
					    and r6.x, r6.y, r6.x
					    mad r5.z, r5.w, r5.z, r6.x
					    mul r5.w, r5.z, r5.x
					    max r6.xy, r7.zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					    min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
					    add r7.xy, -|r6.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
					    sqrt r7.xy, r7.xyxx
					    mad r8.xy, |r6.xyxx|, l(-0.018729, -0.018729, 0.000000, 0.000000), l(0.074261, 0.074261, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(-0.212114, -0.212114, 0.000000, 0.000000)
					    mad r8.xy, r8.xyxx, |r6.xyxx|, l(1.570729, 1.570729, 0.000000, 0.000000)
					    mul r8.zw, r7.xxxy, r8.xxxy
					    mad r8.zw, r8.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.141593, 3.141593)
					    lt r6.xy, r6.xyxx, -r6.xyxx
					    and r6.xy, r6.xyxx, r8.zwzz
					    mad r6.xy, r8.xyxx, r7.xyxx, r6.xyxx
					    mad r6.x, -r5.x, r5.z, -r6.x
					    max r6.x, r6.x, l(-1.570796)
					    mad r7.x, r5.x, r5.z, r6.x
					    mad r6.x, -r5.x, r5.z, r6.y
					    min r6.x, r6.x, l(1.570796)
					    mad r7.y, r5.x, r5.z, r6.x
					    sincos r5.w, null, r5.w
					    add r6.xy, r7.xyxx, r7.xyxx
					    mad r5.xz, -r5.xxxx, r5.zzzz, r6.xxyx
					    sincos null, r5.xz, r5.xxzx
					    add r5.xz, r6.wwww, -r5.xxzx
					    mad r5.xz, r6.xxyx, r5.wwww, r5.xxzx
					    mad r4.z, r4.z, r4.z, r4.w
					    mul r4.z, r4.z, l(0.250000)
					    add r4.w, r5.z, r5.x
					    add r4.w, r4.w, cb0[16].y
					    mad r1.z, r4.z, r4.w, r1.z
					    iadd r4.y, r4.y, l(1)
					  endloop 
					  mul_sat r0.y, r1.z, l(0.250000)
					else 
					  mov r0.xy, l(65504.000000,1.000000,0,0)
					endif 
					mov o0.xy, r0.yxyy
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 1053481
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_input v0.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_temps 1
					mad r0.xyzw, v0.xyzw, l(2.000000, 2.000000, 1.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.xyzw, r0.xyzw
					mul r0.y, r0.y, cb0[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o1.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[13], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					lt r0.y, l(0.000000), r0.x
					if_nz r0.y
					  mad r0.y, cb1[7].z, r0.x, cb1[7].w
					  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					  mad r2.xyzw, v1.xyxy, cb0[12].zwzw, l(0.500000, 0.500000, 0.500000, 0.500000)
					  round_ni r2.xyzw, r2.xyzw
					  mul r2.xyzw, r2.xyzw, cb0[12].xyxy
					  mad r3.xyzw, cb0[12].xyxy, l(-0.500000, -0.500000, 0.500000, -0.500000), r2.zwzw
					  sample r4.xyzw, r3.xyxx, t1.xyzw, s1
					  sample r3.xyzw, r3.zwzz, t1.xyzw, s1
					  mad r2.xyzw, cb0[12].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), r2.xyzw
					  sample r5.xyzw, r2.xyxx, t1.xyzw, s1
					  sample r2.xyzw, r2.zwzz, t1.yzwx, s1
					  mov r6.x, r4.y
					  mov r6.y, r3.y
					  mov r6.z, r5.y
					  mov r6.w, r2.x
					  mad r7.xyzw, -r6.xyzw, cb1[7].wwww, l(1.000000, 1.000000, 1.000000, 1.000000)
					  mul r6.xyzw, r6.xyzw, cb1[7].zzzz
					  div r6.xyzw, r7.xyzw, r6.xyzw
					  add r0.xyzw, -r0.xxxx, r6.xyzw
					  mad r0.xyzw, |r0.xyzw|, l(16384.000000, 16384.000000, 16384.000000, 16384.000000), l(1.000000, 1.000000, 1.000000, 1.000000)
					  div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					  mov r2.x, r4.x
					  mov r2.y, r3.x
					  mov r2.z, r5.x
					  dp4 r1.z, r2.xyzw, r0.xyzw
					  dp4 r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					  div_sat r1.x, r1.z, r0.x
					else 
					  mov r1.xy, l(1.000000,65504.000000,0,0)
					endif 
					mov o0.xy, r1.xyxx
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}