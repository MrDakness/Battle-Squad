Shader "Hidden/Post FX/Temporal Anti-aliasing" {
	Properties {
		_MainTex ("", 2D) = "black" {}
	}
	SubShader {
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 39808
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.y, r0.x, r0.y, v1.y
					mov o1.xzw, v1.xxxy
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_temps 6
					lt r0.x, cb0[2].y, l(0.000000)
					mul r0.yz, cb0[6].xxyx, l(0.000000, 1.000000, -1.000000, 0.000000)
					movc r0.xy, r0.xxxx, r0.yzyy, cb0[6].xyxx
					add r0.xy, -r0.xyxx, v1.xyxx
					mad r0.zw, -cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.zwzz, t2.xyzw, s0
					max r0.z, r1.z, r1.y
					max r0.z, r0.z, r1.x
					add r0.z, r0.z, l(1.000000)
					rcp r0.z, r0.z
					mul r2.xyz, r0.zzzz, r1.xyzx
					mad r0.zw, cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xyxx, t2.xyzw, s0
					sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.zwzz, t2.xyzw, s0
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					rcp r0.w, r0.w
					mul r4.xyz, r0.wwww, r0.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					min r1.xyz, r2.xyzx, r4.xyzx
					max r2.xyz, r2.xyzx, r4.xyzx
					add r4.xyz, r3.xyzx, r3.xyzx
					mad r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r4.xyzx
					mad r4.xyz, -r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000), r3.xyzx
					mul r4.xyz, r4.xyzx, cb0[7].xxxx
					mad r3.xyz, r4.xyzx, l(2.718282, 2.718282, 2.718282, 0.000000), r3.xyzx
					max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, l(0.142857, 0.142857, 0.142857, 0.000000)
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					rcp r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					max r0.y, r3.z, r3.y
					max r0.y, r0.y, r3.x
					add r0.y, r0.y, l(1.000000)
					rcp r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, r3.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r0.x, -r0.y, r0.x
					mad r0.yzw, -|r0.xxxx|, l(0.000000, 4.000000, 4.000000, 4.000000), r1.xxyz
					mad r1.xyz, |r0.xxxx|, l(4.000000, 4.000000, 4.000000, 0.000000), r2.xyzx
					add r2.xyz, -r0.yzwy, r1.xyzx
					add r0.xyz, r0.yzwy, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r2.xy, v1.zwzz, -cb0[5].xyxx
					sample_indexable(texture2d)(float,float,float,float) r2.z, r2.xyxx, t0.yzxw, s3
					sample_indexable(texture2d)(float,float,float,float) r4.z, v1.zwzz, t0.yzxw, s3
					ge r1.w, r2.z, r4.z
					and r1.w, r1.w, l(0x3f800000)
					mov r2.xy, l(-1.000000,-1.000000,0,0)
					mov r4.xy, l(0,0,0,0)
					add r2.xyz, r2.xyzx, -r4.yyzy
					mad r2.xyz, r1.wwww, r2.xyzx, r4.xyzx
					mov r4.xy, l(1.000000,-1.000000,0,0)
					mad r5.xyzw, cb0[5].xyxy, l(1.000000, -1.000000, -1.000000, 1.000000), v1.zwzw
					sample_indexable(texture2d)(float,float,float,float) r4.z, r5.xyxx, t0.yzxw, s3
					sample_indexable(texture2d)(float,float,float,float) r5.z, r5.zwzz, t0.yzxw, s3
					ge r1.w, r4.z, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r4.xyz, -r2.yyzy, r4.xyzx
					mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx
					mov r5.xyw, l(-1.000000,1.000000,0,0)
					ge r1.w, r5.z, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r4.xyz, -r2.xyzx, r5.xyzx
					mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx
					add r4.xy, v1.zwzz, cb0[5].xyxx
					sample_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.yzwx, s3
					ge r1.w, r1.w, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r2.zw, -r2.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
					mad r2.xy, r1.wwww, r2.zwzz, r2.xyxx
					mad r2.xy, r2.xyxx, cb0[5].xyxx, v1.zwzz
					sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t1.xyzw, s2
					add r2.zw, -r2.xxxy, v1.zzzw
					dp2 r1.w, r2.xyxx, r2.xyxx
					sqrt r1.w, r1.w
					sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.zwzz, t3.xyzw, s1
					max r4.x, r2.z, r2.y
					max r4.x, r2.x, r4.x
					add r4.x, r4.x, l(1.000000)
					rcp r4.x, r4.x
					mad r5.xyz, r2.xyzx, r4.xxxx, -r0.xyzx
					mul r4.xyz, r2.xyzx, r4.xxxx
					mov r0.w, r2.w
					div r1.xyz, r5.xyzx, r1.xyzx
					max r1.y, |r1.z|, |r1.y|
					max r1.x, r1.y, |r1.x|
					div r2.xyzw, r5.xyzw, r1.xxxx
					lt r1.x, l(1.000000), r1.x
					add r2.xyzw, r0.xyzw, r2.xyzw
					mov r4.w, r0.w
					movc r0.xyzw, r1.xxxx, r2.xyzw, r4.xyzw
					mad r1.x, -cb0[2].z, l(0.002000), r1.w
					mul r1.y, r1.w, cb0[8].z
					mul r1.z, cb0[2].z, l(0.001500)
					div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
					mul_sat r1.x, r1.z, r1.x
					mad r1.z, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r1.x, r1.x, r1.z
					min r3.w, r1.x, l(1.000000)
					add r0.xyzw, r0.xyzw, -r3.xyzw
					add r1.x, -cb0[8].x, cb0[8].y
					mad r1.x, r1.y, r1.x, cb0[8].x
					max r1.x, r1.x, cb0[8].y
					min r1.x, r1.x, cb0[8].x
					mad r0.xyzw, r1.xxxx, r0.xyzw, r3.xyzw
					max r1.x, r0.z, r0.y
					max r1.x, r0.x, r1.x
					add r1.x, -r1.x, l(1.000000)
					rcp r1.x, r1.x
					mul r0.xyz, r0.xyzx, r1.xxxx
					mov o1.xyz, r0.xyzx
					mov o0.xyzw, r0.xyzw
					mul o1.w, r0.w, l(0.850000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 124378
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.y, r0.x, r0.y, v1.y
					mov o1.xzw, v1.xxxy
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_temps 6
					lt r0.x, cb0[2].y, l(0.000000)
					mul r0.yz, cb0[6].xxyx, l(0.000000, 1.000000, -1.000000, 0.000000)
					movc r0.xy, r0.xxxx, r0.yzyy, cb0[6].xyxx
					add r0.xy, -r0.xyxx, v1.xyxx
					mad r0.zw, -cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.zwzz, t1.xyzw, s0
					max r0.z, r1.z, r1.y
					max r0.z, r0.z, r1.x
					add r0.z, r0.z, l(1.000000)
					rcp r0.z, r0.z
					mul r2.xyz, r0.zzzz, r1.xyzx
					mad r0.zw, cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xyxx, t1.xyzw, s0
					sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.zwzz, t1.xyzw, s0
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					rcp r0.w, r0.w
					mul r4.xyz, r0.wwww, r0.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					min r1.xyz, r2.xyzx, r4.xyzx
					max r2.xyz, r2.xyzx, r4.xyzx
					add r4.xyz, r3.xyzx, r3.xyzx
					mad r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r4.xyzx
					mad r4.xyz, -r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000), r3.xyzx
					mul r4.xyz, r4.xyzx, cb0[7].xxxx
					mad r3.xyz, r4.xyzx, l(2.718282, 2.718282, 2.718282, 0.000000), r3.xyzx
					max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, l(0.142857, 0.142857, 0.142857, 0.000000)
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					rcp r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					max r0.y, r3.z, r3.y
					max r0.y, r0.y, r3.x
					add r0.y, r0.y, l(1.000000)
					rcp r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, r3.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r0.x, -r0.y, r0.x
					mad r0.yzw, -|r0.xxxx|, l(0.000000, 4.000000, 4.000000, 4.000000), r1.xxyz
					mad r1.xyz, |r0.xxxx|, l(4.000000, 4.000000, 4.000000, 0.000000), r2.xyzx
					add r2.xyz, r0.yzwy, r1.xyzx
					add r0.xyz, -r0.yzwy, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					sample_indexable(texture2d)(float,float,float,float) r2.xy, v1.zwzz, t0.xyzw, s2
					add r2.zw, -r2.xxxy, v1.zzzw
					dp2 r0.w, r2.xyxx, r2.xyxx
					sqrt r0.w, r0.w
					sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.zwzz, t2.xyzw, s1
					max r4.x, r2.z, r2.y
					max r4.x, r2.x, r4.x
					add r4.x, r4.x, l(1.000000)
					rcp r4.x, r4.x
					mad r5.xyz, r2.xyzx, r4.xxxx, -r1.xyzx
					mul r4.xyz, r2.xyzx, r4.xxxx
					mov r1.w, r2.w
					div r0.xyz, r5.xyzx, r0.xyzx
					max r0.y, |r0.z|, |r0.y|
					max r0.x, r0.y, |r0.x|
					mov r5.w, l(0)
					div r2.xyzw, r5.xyzw, r0.xxxx
					lt r0.x, l(1.000000), r0.x
					add r2.xyzw, r1.xyzw, r2.xyzw
					mov r4.w, r1.w
					movc r1.xyzw, r0.xxxx, r2.xyzw, r4.xyzw
					mad r0.x, -cb0[2].z, l(0.002000), r0.w
					mul r0.y, r0.w, cb0[8].z
					mul r0.z, cb0[2].z, l(0.001500)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul_sat r0.x, r0.z, r0.x
					mad r0.z, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.z
					min r3.w, r0.x, l(1.000000)
					add r1.xyzw, r1.xyzw, -r3.xyzw
					add r0.x, -cb0[8].x, cb0[8].y
					mad r0.x, r0.y, r0.x, cb0[8].x
					max r0.x, r0.x, cb0[8].y
					min r0.x, r0.x, cb0[8].x
					mad r0.xyzw, r0.xxxx, r1.xyzw, r3.xyzw
					max r1.x, r0.z, r0.y
					max r1.x, r0.x, r1.x
					add r1.x, -r1.x, l(1.000000)
					rcp r1.x, r1.x
					mul r0.xyz, r0.xyzx, r1.xxxx
					mov o1.xyz, r0.xyzx
					mov o0.xyzw, r0.xyzw
					mul o1.w, r0.w, l(0.850000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 170307
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM50
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
					mov o0.xyz, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 205383
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.y, r0.x, r0.y, v1.y
					mov o1.xzw, v1.xxxy
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_temps 7
					lt r0.x, cb0[2].y, l(0.000000)
					mul r0.yz, cb0[6].xxyx, l(0.000000, 1.000000, -1.000000, 0.000000)
					movc r0.xy, r0.xxxx, r0.yzyy, cb0[6].xyxx
					add r0.xy, -r0.xyxx, v1.xyxx
					mad r0.zw, -cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample r1.xyzw, r0.zwzz, t2.xyzw, s0
					max r0.z, r1.z, r1.y
					max r0.z, r0.z, r1.x
					add r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r2.xyz, r0.zzzz, r1.xyzx
					mad r0.zw, cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample r3.xyzw, r0.xyxx, t2.xyzw, s0
					sample r0.xyzw, r0.zwzz, t2.xyzw, s0
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r4.xyz, r0.wwww, r0.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					min r1.xyz, r2.xyzx, r4.xyzx
					max r2.xyz, r2.xyzx, r4.xyzx
					add r4.xyz, r3.xyzx, r3.xyzx
					mad r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r4.xyzx
					mad r4.xyz, -r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000), r3.xyzx
					mul r4.xyz, r4.xyzx, cb0[7].xxxx
					mad r3.xyz, r4.xyzx, l(2.718282, 2.718282, 2.718282, 0.000000), r3.xyzx
					max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, l(0.142857, 0.142857, 0.142857, 0.000000)
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					max r0.y, r3.z, r3.y
					max r0.y, r0.y, r3.x
					add r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, r3.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r0.x, -r0.y, r0.x
					mad r0.yzw, -|r0.xxxx|, l(0.000000, 4.000000, 4.000000, 4.000000), r1.xxyz
					mad r1.xyz, |r0.xxxx|, l(4.000000, 4.000000, 4.000000, 0.000000), r2.xyzx
					add r2.xyz, -r0.yzwy, r1.xyzx
					add r0.xyz, r0.yzwy, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r2.xy, v1.zwzz, -cb0[5].xyxx
					sample r2.xyzw, r2.xyxx, t0.yzxw, s3
					sample r4.xyzw, v1.zwzz, t0.yzxw, s3
					ge r1.w, r2.z, r4.z
					and r1.w, r1.w, l(0x3f800000)
					mov r2.xy, l(-1.000000,-1.000000,0,0)
					mov r4.xy, l(0,0,0,0)
					add r2.xyz, r2.xyzx, -r4.yyzy
					mad r2.xyz, r1.wwww, r2.xyzx, r4.xyzx
					mov r4.xy, l(1.000000,-1.000000,0,0)
					mad r5.xyzw, cb0[5].xyxy, l(1.000000, -1.000000, -1.000000, 1.000000), v1.zwzw
					sample r6.xyzw, r5.xyxx, t0.xyzw, s3
					sample r5.xyzw, r5.zwzz, t0.yzxw, s3
					mov r4.z, r6.x
					ge r1.w, r6.x, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r4.xyz, -r2.yyzy, r4.xyzx
					mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx
					mov r5.xyw, l(-1.000000,1.000000,0,0)
					ge r1.w, r5.z, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r4.xyz, -r2.xyzx, r5.xyzx
					mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx
					add r4.xy, v1.zwzz, cb0[5].xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s3
					ge r1.w, r4.x, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r2.zw, -r2.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
					mad r2.xy, r1.wwww, r2.zwzz, r2.xyxx
					mad r2.xy, r2.xyxx, cb0[5].xyxx, v1.zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s2
					add r2.zw, -r2.xxxy, v1.zzzw
					dp2 r1.w, r2.xyxx, r2.xyxx
					sqrt r1.w, r1.w
					sample r2.xyzw, r2.zwzz, t3.xyzw, s1
					max r4.x, r2.z, r2.y
					max r4.x, r2.x, r4.x
					add r4.x, r4.x, l(1.000000)
					div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
					mad r5.xyz, r2.xyzx, r4.xxxx, -r0.xyzx
					mul r4.xyz, r2.xyzx, r4.xxxx
					mov r0.w, r2.w
					div r1.xyz, r5.xyzx, r1.xyzx
					max r1.y, |r1.z|, |r1.y|
					max r1.x, r1.y, |r1.x|
					div r2.xyzw, r5.xyzw, r1.xxxx
					lt r1.x, l(1.000000), r1.x
					add r2.xyzw, r0.xyzw, r2.xyzw
					mov r4.w, r0.w
					movc r0.xyzw, r1.xxxx, r2.xyzw, r4.xyzw
					mad r1.x, -cb0[2].z, l(0.002000), r1.w
					mul r1.y, r1.w, cb0[8].z
					mul r1.z, cb0[2].z, l(0.001500)
					div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
					mul_sat r1.x, r1.z, r1.x
					mad r1.z, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r1.x, r1.x, r1.z
					min r3.w, r1.x, l(1.000000)
					add r0.xyzw, r0.xyzw, -r3.xyzw
					add r1.x, -cb0[8].x, cb0[8].y
					mad r1.x, r1.y, r1.x, cb0[8].x
					max r1.x, r1.x, cb0[8].y
					min r1.x, r1.x, cb0[8].x
					mad r0.xyzw, r1.xxxx, r0.xyzw, r3.xyzw
					max r1.x, r0.z, r0.y
					max r1.x, r0.x, r1.x
					add r1.x, -r1.x, l(1.000000)
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul r0.xyz, r0.xyzx, r1.xxxx
					mov o1.xyz, r0.xyzx
					mov o0.xyzw, r0.xyzw
					mul o1.w, r0.w, l(0.850000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 319200
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.y, r0.x, r0.y, v1.y
					mov o1.xzw, v1.xxxy
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_temps 6
					lt r0.x, cb0[2].y, l(0.000000)
					mul r0.yz, cb0[6].xxyx, l(0.000000, 1.000000, -1.000000, 0.000000)
					movc r0.xy, r0.xxxx, r0.yzyy, cb0[6].xyxx
					add r0.xy, -r0.xyxx, v1.xyxx
					mad r0.zw, -cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample r1.xyzw, r0.zwzz, t1.xyzw, s0
					max r0.z, r1.z, r1.y
					max r0.z, r0.z, r1.x
					add r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r2.xyz, r0.zzzz, r1.xyzx
					mad r0.zw, cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample r3.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r4.xyz, r0.wwww, r0.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					min r1.xyz, r2.xyzx, r4.xyzx
					max r2.xyz, r2.xyzx, r4.xyzx
					add r4.xyz, r3.xyzx, r3.xyzx
					mad r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r4.xyzx
					mad r4.xyz, -r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000), r3.xyzx
					mul r4.xyz, r4.xyzx, cb0[7].xxxx
					mad r3.xyz, r4.xyzx, l(2.718282, 2.718282, 2.718282, 0.000000), r3.xyzx
					max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, l(0.142857, 0.142857, 0.142857, 0.000000)
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					max r0.y, r3.z, r3.y
					max r0.y, r0.y, r3.x
					add r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, r3.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r0.x, -r0.y, r0.x
					mad r0.yzw, -|r0.xxxx|, l(0.000000, 4.000000, 4.000000, 4.000000), r1.xxyz
					mad r1.xyz, |r0.xxxx|, l(4.000000, 4.000000, 4.000000, 0.000000), r2.xyzx
					add r2.xyz, r0.yzwy, r1.xyzx
					add r0.xyz, -r0.yzwy, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					sample r2.xyzw, v1.zwzz, t0.xyzw, s2
					add r2.zw, -r2.xxxy, v1.zzzw
					dp2 r0.w, r2.xyxx, r2.xyxx
					sqrt r0.w, r0.w
					sample r2.xyzw, r2.zwzz, t2.xyzw, s1
					max r4.x, r2.z, r2.y
					max r4.x, r2.x, r4.x
					add r4.x, r4.x, l(1.000000)
					div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
					mad r5.xyz, r2.xyzx, r4.xxxx, -r1.xyzx
					mul r4.xyz, r2.xyzx, r4.xxxx
					mov r1.w, r2.w
					div r0.xyz, r5.xyzx, r0.xyzx
					max r0.y, |r0.z|, |r0.y|
					max r0.x, r0.y, |r0.x|
					mov r5.w, l(0)
					div r2.xyzw, r5.xyzw, r0.xxxx
					lt r0.x, l(1.000000), r0.x
					add r2.xyzw, r1.xyzw, r2.xyzw
					mov r4.w, r1.w
					movc r1.xyzw, r0.xxxx, r2.xyzw, r4.xyzw
					mad r0.x, -cb0[2].z, l(0.002000), r0.w
					mul r0.y, r0.w, cb0[8].z
					mul r0.z, cb0[2].z, l(0.001500)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul_sat r0.x, r0.z, r0.x
					mad r0.z, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.z
					min r3.w, r0.x, l(1.000000)
					add r1.xyzw, r1.xyzw, -r3.xyzw
					add r0.x, -cb0[8].x, cb0[8].y
					mad r0.x, r0.y, r0.x, cb0[8].x
					max r0.x, r0.x, cb0[8].y
					min r0.x, r0.x, cb0[8].x
					mad r0.xyzw, r0.xxxx, r1.xyzw, r3.xyzw
					max r1.x, r0.z, r0.y
					max r1.x, r0.x, r1.x
					add r1.x, -r1.x, l(1.000000)
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul r0.xyz, r0.xyzx, r1.xxxx
					mov o1.xyz, r0.xyzx
					mov o0.xyzw, r0.xyzw
					mul o1.w, r0.w, l(0.850000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 356975
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mov o0.xyz, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}