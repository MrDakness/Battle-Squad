Shader "Effects/FPS_Pack/DistortionParticles" {
	Properties {
		_MainTex ("Normalmap & CutOut", 2D) = "black" {}
		_BumpAmt ("Distortion", Float) = 10
		_InvFade ("Soft Particles Factor", Float) = 0.5
	}
	SubShader {
		Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Transparent" "RenderType" = "Opaque" }
		GrabPass {
		}
		Pass {
			Name "BASE"
			Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "ALWAYS" "QUEUE" = "Transparent" "RenderType" = "Opaque" }
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ZWrite Off
			Cull Off
			Fog {
				Mode Off
			}
			GpuProgramID 17065
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// COLOR                    0   xyzw        2     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 4     zw        2     NONE   float     zw
					// COLOR                    0   xyzw        3     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xy
					dcl_input v2.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o2.zw
					dcl_output o3.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r0.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					mul r0.x, r0.x, l(0.066667)
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					add r0.x, r0.x, l(0.010000)
					min o2.z, r0.x, l(1.000000)
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad r0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), r0.wwww
					mov o1.zw, r0.wwww
					mul o1.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mad o2.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o2.w, l(0)
					mov o3.xyzw, v2.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SOFTPARTICLES_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// COLOR                    0   xyzw        2     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 4     zw        2     NONE   float     zw
					// COLOR                    0   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xy
					dcl_input v2.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o2.zw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					add r0.xyz, -r0.xyzx, cb1[4].xyzx
					dp3 r0.x, r0.xyzx, r0.xyzx
					mul r0.x, r0.x, l(0.066667)
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					add r0.x, r0.x, l(0.010000)
					min o2.z, r0.x, l(1.000000)
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad r2.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), r0.wwww
					mul o1.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					mov r2.xy, r0.wwww
					mov o1.zw, r2.xxxy
					mov o4.w, r2.y
					mad o2.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o2.w, l(0)
					mov o3.xyzw, v2.xyzw
					mul r0.z, r1.y, cb3[10].z
					mad r0.z, cb3[9].z, r1.x, r0.z
					mad r0.z, cb3[11].z, r1.z, r0.z
					mad r0.z, cb3[12].z, r1.w, r0.z
					mov o4.z, -r0.z
					mul r0.y, r0.y, cb1[5].x
					mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mul r0.w, r0.y, l(0.500000)
					add o4.xy, r0.zzzz, r0.xwxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 4     zw        2     NONE   float     z 
					// COLOR                    0   xyzw        3     NONE   float      w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v2.z
					dcl_input_ps linear v3.w
					dcl_output o0.xyzw
					dcl_temps 2
					sample r0.xyzw, v2.xyxx, t0.xyzw, s0
					mul r1.xy, r0.xyxx, l(255.000000, 255.000000, 0.000000, 0.000000)
					ftoi r1.xy, r1.xyxx
					ieq r1.zw, r1.xxxx, l(0, 0, 127, 128)
					ieq r0.w, r1.y, r1.x
					or r1.x, r1.w, r1.z
					and r0.w, r0.w, r1.x
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, cb0[2].xxxx
					mul r0.xy, r0.xyxx, cb0[3].xyxx
					mul r0.xy, r0.xyxx, v3.wwww
					mul r0.xy, r0.xyxx, v2.zzzz
					mul r0.xy, r0.xyxx, v1.zzzz
					movc r0.xy, r0.wwww, l(0,0,0,0), r0.xyxx
					add r0.xy, r0.xyxx, v1.xyxx
					div r0.xy, r0.xyxx, v1.wwww
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					mul_sat o0.w, r0.z, r1.w
					mov o0.xyz, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SOFTPARTICLES_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Position              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 4     zw        2     NONE   float     z 
					// COLOR                    0   xyzw        3     NONE   float      w
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v2.z
					dcl_input_ps linear v3.w
					dcl_input_ps linear v4.xyzw
					dcl_output o0.xyzw
					dcl_temps 2
					lt r0.x, l(0.000100), cb0[5].x
					if_nz r0.x
					  div r0.xy, v4.xyxx, v4.wwww
					  sample r0.xyzw, r0.xyxx, t0.xyzw, s2
					  mad r0.x, cb1[7].z, r0.x, cb1[7].w
					  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					  add r0.x, r0.x, -v4.z
					  mul_sat r0.x, r0.x, cb0[5].x
					  mul r0.x, r0.x, v3.w
					else 
					  mov r0.x, v3.w
					endif 
					sample r1.xyzw, v2.xyxx, t1.xyzw, s0
					mul r0.yz, r1.xxyx, l(0.000000, 255.000000, 255.000000, 0.000000)
					ftoi r0.yz, r0.yyzy
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					ieq r0.z, r0.z, r0.y
					ieq r0.yw, r0.yyyy, l(0, 127, 0, 128)
					or r0.y, r0.w, r0.y
					and r0.y, r0.y, r0.z
					mul r0.zw, r1.xxxy, cb0[2].xxxx
					mul r0.zw, r0.zzzw, cb0[3].xxxy
					movc r0.yz, r0.yyyy, l(0,0,0,0), r0.zzwz
					mul r0.xy, r0.xxxx, r0.yzyy
					mul r0.xy, r0.xyxx, v2.zzzz
					mad r0.xy, r0.xyxx, v1.zzzz, v1.xyxx
					div r0.xy, r0.xyxx, v1.wwww
					sample r0.xyzw, r0.xyxx, t2.xyzw, s1
					mul_sat o0.w, r1.z, r0.w
					mov o0.xyz, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}