Shader "Hidden/Post FX/Ambient Occlusion" {
	Properties {
	}
	SubShader {
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 42687
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "FOG_OFF" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc r0.w, r0.x, r0.y, v1.y
					mov r0.xyz, v1.xyxx
					mov o1.xyzw, r0.xyzw
					mov o2.xy, r0.zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "FOG_OFF" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xy          2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[9], immediateIndexed
					dcl_constantbuffer CB2[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 9
					mad r0.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r0.xyxx, t0.xyzw, s1
					mad r1.xyz, r1.xyzx, l(3.555400, 3.555400, 0.000000, 0.000000), l(-1.777700, -1.777700, 1.000000, 0.000000)
					dp3 r0.z, r1.xyzx, r1.xyzx
					div r0.z, l(2.000000), r0.z
					mul r1.yz, r1.xxyx, r0.zzzz
					add r1.w, r0.z, l(-1.000000)
					mul r2.xyz, r1.yzwy, l(1.000000, 1.000000, -1.000000, 0.000000)
					sample r3.xyzw, r0.xyxx, t1.xyzw, s0
					add r0.z, -cb1[8].w, l(1.000000)
					mul r0.w, r3.x, cb1[7].x
					mad r1.x, -cb1[8].w, r0.w, l(1.000000)
					mad r0.w, r0.z, r0.w, cb1[7].y
					div r0.w, r1.x, r0.w
					lt r3.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					or r1.x, r3.y, r3.x
					and r1.x, r1.x, l(1)
					lt r0.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r0.xyxx
					or r0.x, r0.y, r0.x
					and r0.x, r0.x, l(1)
					iadd r0.x, r0.x, r1.x
					itof r0.x, r0.x
					ge r0.y, l(0.000010), r0.w
					and r0.y, r0.y, l(0x3f800000)
					add r0.x, r0.y, r0.x
					mul r0.x, r0.x, l(100000000.000000)
					mad r3.z, r0.w, cb1[5].z, r0.x
					mad r0.xy, v1.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					add r0.xy, r0.xyxx, -cb2[8].xyxx
					mov r4.x, cb2[6].x
					mov r4.y, cb2[7].y
					div r0.xy, r0.xyxx, r4.xyxx
					add r0.w, -r3.z, l(1.000000)
					mad r0.w, cb1[8].w, r0.w, r3.z
					mul r3.xy, r0.wwww, r0.xyxx
					mul r0.xy, v1.xyxx, cb0[7].zzzz
					mul r0.xy, r0.xyxx, cb1[6].xyxx
					round_ni r0.xy, r0.xyxx
					dp2 r0.x, l(0.067111, 0.005837, 0.000000, 0.000000), r0.xyxx
					frc r0.x, r0.x
					mul r0.x, r0.x, l(52.982918)
					frc r0.x, r0.x
					itof r0.y, cb0[5].x
					mov r5.x, l(12.989800)
					mov r0.w, l(0)
					mov r1.x, l(0)
					loop 
					  ige r2.w, r1.x, cb0[5].x
					  breakc_nz r2.w
					  itof r2.w, r1.x
					  mul r2.w, r2.w, l(1.000100)
					  round_ni r2.w, r2.w
					  mad r5.y, v1.x, l(0.000000), r2.w
					  mul r3.w, r5.y, l(78.233002)
					  sincos r3.w, null, r3.w
					  mul r3.w, r3.w, l(43758.546875)
					  frc r3.w, r3.w
					  add r3.w, r0.x, r3.w
					  frc r3.w, r3.w
					  mad r6.z, r3.w, l(2.000000), l(-1.000000)
					  dp2 r3.w, r5.xyxx, l(1.000000, 78.233002, 0.000000, 0.000000)
					  sincos r3.w, null, r3.w
					  mul r3.w, r3.w, l(43758.546875)
					  frc r3.w, r3.w
					  add r3.w, r0.x, r3.w
					  mul r3.w, r3.w, l(6.283185)
					  sincos r7.x, r8.x, r3.w
					  mad r3.w, -r6.z, r6.z, l(1.000000)
					  sqrt r3.w, r3.w
					  mov r8.y, r7.x
					  mul r6.xy, r3.wwww, r8.xyxx
					  add r2.w, r2.w, l(1.000000)
					  div r2.w, r2.w, r0.y
					  sqrt r2.w, r2.w
					  mul r2.w, r2.w, cb0[7].y
					  mul r5.yzw, r2.wwww, r6.xxyz
					  dp3 r2.w, -r2.xyzx, r5.yzwy
					  ge r2.w, r2.w, l(0.000000)
					  movc r5.yzw, r2.wwww, -r5.yyzw, r5.yyzw
					  add r5.yzw, r3.xxyz, r5.yyzw
					  mul r4.zw, r5.zzzz, cb2[7].xxxy
					  mad r4.zw, cb2[6].xxxy, r5.yyyy, r4.zzzw
					  mad r4.zw, cb2[8].xxxy, r5.wwww, r4.zzzw
					  add r2.w, -r5.w, l(1.000000)
					  mad r2.w, cb1[8].w, r2.w, r5.w
					  div r4.zw, r4.zzzw, r2.wwww
					  add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					  mul r5.yz, r4.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
					  mad r5.yz, r5.yyzy, cb0[4].xxyx, cb0[4].zzwz
					  sample r6.xyzw, r5.yzyy, t1.xyzw, s0
					  mul r2.w, r6.x, cb1[7].x
					  mad r3.w, -cb1[8].w, r2.w, l(1.000000)
					  mad r2.w, r0.z, r2.w, cb1[7].y
					  div r2.w, r3.w, r2.w
					  lt r6.xy, r5.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  or r3.w, r6.y, r6.x
					  and r3.w, r3.w, l(1)
					  lt r5.yz, l(0.000000, 1.000000, 1.000000, 0.000000), r5.yyzy
					  or r5.y, r5.z, r5.y
					  and r5.y, r5.y, l(1)
					  iadd r3.w, r3.w, r5.y
					  itof r3.w, r3.w
					  ge r5.y, l(0.000010), r2.w
					  and r5.y, r5.y, l(0x3f800000)
					  add r3.w, r3.w, r5.y
					  mul r3.w, r3.w, l(100000000.000000)
					  mad r6.z, r2.w, cb1[5].z, r3.w
					  add r4.zw, r4.zzzw, -cb2[8].xxxy
					  add r4.zw, r4.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
					  div r4.zw, r4.zzzw, r4.xxxy
					  add r2.w, -r6.z, l(1.000000)
					  mad r2.w, cb1[8].w, r2.w, r6.z
					  mul r6.xy, r2.wwww, r4.zwzz
					  add r5.yzw, -r3.xxyz, r6.xxyz
					  dp3 r2.w, r5.yzwy, r2.xyzx
					  mad r2.w, -r3.z, l(0.002000), r2.w
					  max r2.w, r2.w, l(0.000000)
					  dp3 r3.w, r5.yzwy, r5.yzwy
					  add r3.w, r3.w, l(0.000100)
					  div r2.w, r2.w, r3.w
					  add r0.w, r0.w, r2.w
					  iadd r1.x, r1.x, l(1)
					endloop 
					mul r0.x, r0.w, cb0[7].y
					mul r0.x, r0.x, cb0[7].x
					div r0.x, r0.x, r0.y
					log r0.x, r0.x
					mul r0.x, r0.x, l(0.600000)
					exp o0.x, r0.x
					mad o0.yzw, r1.yyzw, l(0.000000, 0.500000, 0.500000, -0.500000), l(0.000000, 0.500000, 0.500000, 0.500000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 119428
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "FOG_OFF" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc r0.w, r0.x, r0.y, v1.y
					mov r0.xyz, v1.xyxx
					mov o1.xyzw, r0.xyzw
					mov o2.xy, r0.zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "FOG_OFF" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xy          2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[9], immediateIndexed
					dcl_constantbuffer CB2[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 8
					mad r0.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					mad r2.xyz, r1.xyzx, l(3.555400, 3.555400, 0.000000, 0.000000), l(-1.777700, -1.777700, 1.000000, 0.000000)
					dp3 r0.z, r2.xyzx, r2.xyzx
					div r0.z, l(2.000000), r0.z
					mul r2.yz, r2.xxyx, r0.zzzz
					add r2.w, r0.z, l(-1.000000)
					mul r3.xyz, r2.yzwy, l(1.000000, 1.000000, -1.000000, 0.000000)
					dp2 r0.z, r1.zwzz, l(1.000000, 0.003922, 0.000000, 0.000000)
					lt r1.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					or r0.w, r1.y, r1.x
					lt r0.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r0.xyxx
					or r0.x, r0.y, r0.x
					and r0.xw, r0.xxxw, l(1, 0, 0, 1)
					iadd r0.x, r0.x, r0.w
					itof r0.x, r0.x
					ge r0.y, l(0.000010), r0.z
					and r0.y, r0.y, l(0x3f800000)
					add r0.x, r0.y, r0.x
					mul r0.x, r0.x, l(100000000.000000)
					mad r0.x, r0.z, cb1[5].z, r0.x
					mad r0.z, -cb1[5].z, l(0.000015), r0.x
					mad r1.xy, v1.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					add r1.xy, r1.xyxx, -cb2[8].xyxx
					mov r4.x, cb2[6].x
					mov r4.y, cb2[7].y
					div r1.xy, r1.xyxx, r4.xyxx
					add r0.w, -r0.z, l(1.000000)
					mad r0.w, cb1[8].w, r0.w, r0.z
					mul r0.xy, r0.wwww, r1.xyxx
					mul r1.xy, v1.xyxx, cb0[7].zzzz
					mul r1.xy, r1.xyxx, cb1[6].xyxx
					round_ni r1.xy, r1.xyxx
					dp2 r0.w, l(0.067111, 0.005837, 0.000000, 0.000000), r1.xyxx
					frc r0.w, r0.w
					mul r0.w, r0.w, l(52.982918)
					frc r0.w, r0.w
					itof r1.x, cb0[5].x
					mov r5.x, l(12.989800)
					mov r1.yz, l(0,0,0,0)
					loop 
					  ige r1.w, r1.z, cb0[5].x
					  breakc_nz r1.w
					  itof r1.w, r1.z
					  mul r1.w, r1.w, l(1.000100)
					  round_ni r1.w, r1.w
					  mad r5.y, v1.x, l(0.000000), r1.w
					  mul r2.x, r5.y, l(78.233002)
					  sincos r2.x, null, r2.x
					  mul r2.x, r2.x, l(43758.546875)
					  frc r2.x, r2.x
					  add r2.x, r0.w, r2.x
					  frc r2.x, r2.x
					  mad r6.z, r2.x, l(2.000000), l(-1.000000)
					  dp2 r2.x, r5.xyxx, l(1.000000, 78.233002, 0.000000, 0.000000)
					  sincos r2.x, null, r2.x
					  mul r2.x, r2.x, l(43758.546875)
					  frc r2.x, r2.x
					  add r2.x, r0.w, r2.x
					  mul r2.x, r2.x, l(6.283185)
					  sincos r2.x, r7.x, r2.x
					  mad r3.w, -r6.z, r6.z, l(1.000000)
					  sqrt r3.w, r3.w
					  mov r7.y, r2.x
					  mul r6.xy, r3.wwww, r7.xyxx
					  add r1.w, r1.w, l(1.000000)
					  div r1.w, r1.w, r1.x
					  sqrt r1.w, r1.w
					  mul r1.w, r1.w, cb0[7].y
					  mul r5.yzw, r1.wwww, r6.xxyz
					  dp3 r1.w, -r3.xyzx, r5.yzwy
					  ge r1.w, r1.w, l(0.000000)
					  movc r5.yzw, r1.wwww, -r5.yyzw, r5.yyzw
					  add r5.yzw, r0.xxyz, r5.yyzw
					  mul r4.zw, r5.zzzz, cb2[7].xxxy
					  mad r4.zw, cb2[6].xxxy, r5.yyyy, r4.zzzw
					  mad r4.zw, cb2[8].xxxy, r5.wwww, r4.zzzw
					  add r1.w, -r5.w, l(1.000000)
					  mad r1.w, cb1[8].w, r1.w, r5.w
					  div r4.zw, r4.zzzw, r1.wwww
					  add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					  mul r5.yz, r4.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
					  mad r5.yz, r5.yyzy, cb0[4].xxyx, cb0[4].zzwz
					  sample r6.xyzw, r5.yzyy, t0.xyzw, s0
					  dp2 r1.w, r6.zwzz, l(1.000000, 0.003922, 0.000000, 0.000000)
					  lt r6.xy, r5.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  or r2.x, r6.y, r6.x
					  and r2.x, r2.x, l(1)
					  lt r5.yz, l(0.000000, 1.000000, 1.000000, 0.000000), r5.yyzy
					  or r3.w, r5.z, r5.y
					  and r3.w, r3.w, l(1)
					  iadd r2.x, r2.x, r3.w
					  itof r2.x, r2.x
					  ge r3.w, l(0.000010), r1.w
					  and r3.w, r3.w, l(0x3f800000)
					  add r2.x, r2.x, r3.w
					  mul r2.x, r2.x, l(100000000.000000)
					  mad r6.z, r1.w, cb1[5].z, r2.x
					  add r4.zw, r4.zzzw, -cb2[8].xxxy
					  add r4.zw, r4.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
					  div r4.zw, r4.zzzw, r4.xxxy
					  add r1.w, -r6.z, l(1.000000)
					  mad r1.w, cb1[8].w, r1.w, r6.z
					  mul r6.xy, r1.wwww, r4.zwzz
					  add r5.yzw, -r0.xxyz, r6.xxyz
					  dp3 r1.w, r5.yzwy, r3.xyzx
					  mad r1.w, -r0.z, l(0.002000), r1.w
					  max r1.w, r1.w, l(0.000000)
					  dp3 r2.x, r5.yzwy, r5.yzwy
					  add r2.x, r2.x, l(0.000100)
					  div r1.w, r1.w, r2.x
					  add r1.y, r1.w, r1.y
					  iadd r1.z, r1.z, l(1)
					endloop 
					mul r0.x, r1.y, cb0[7].y
					mul r0.x, r0.x, cb0[7].x
					div r0.x, r0.x, r1.x
					log r0.x, r0.x
					mul r0.x, r0.x, l(0.600000)
					exp o0.x, r0.x
					mad o0.yzw, r2.yyzw, l(0.000000, 0.500000, 0.500000, -0.500000), l(0.000000, 0.500000, 0.500000, 0.500000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 144042
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "FOG_OFF" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc r0.w, r0.x, r0.y, v1.y
					mov r0.xyz, v1.xyxx
					mov o1.xyzw, r0.xyzw
					mov o2.xy, r0.zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "FOG_OFF" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xy          2     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[9], immediateIndexed
					dcl_constantbuffer CB2[17], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 8
					mad r0.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					dp3 r0.z, r1.xyzx, r1.xyzx
					ne r0.z, r0.z, l(0.000000)
					movc r0.z, r0.z, l(-1.000000), l(-0.000000)
					mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.zzzz
					mul r2.xyz, r1.yyyy, cb2[15].xyzx
					mad r1.xyw, cb2[14].xyxz, r1.xxxx, r2.xyxz
					mad r1.xyz, cb2[16].xyzx, r1.zzzz, r1.xywx
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					add r0.z, -cb1[8].w, l(1.000000)
					mul r0.w, r2.x, cb1[7].x
					mad r1.w, -cb1[8].w, r0.w, l(1.000000)
					mad r0.w, r0.z, r0.w, cb1[7].y
					div r0.w, r1.w, r0.w
					lt r2.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					or r1.w, r2.y, r2.x
					and r1.w, r1.w, l(1)
					lt r0.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r0.xyxx
					or r0.x, r0.y, r0.x
					and r0.x, r0.x, l(1)
					iadd r0.x, r0.x, r1.w
					itof r0.x, r0.x
					ge r0.y, l(0.000010), r0.w
					and r0.y, r0.y, l(0x3f800000)
					add r0.x, r0.y, r0.x
					mul r0.x, r0.x, l(100000000.000000)
					mad r2.z, r0.w, cb1[5].z, r0.x
					mad r0.xy, v1.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					add r0.xy, r0.xyxx, -cb2[8].xyxx
					mov r3.x, cb2[6].x
					mov r3.y, cb2[7].y
					div r0.xy, r0.xyxx, r3.xyxx
					add r0.w, -r2.z, l(1.000000)
					mad r0.w, cb1[8].w, r0.w, r2.z
					mul r2.xy, r0.wwww, r0.xyxx
					mul r0.xy, v1.xyxx, cb0[7].zzzz
					mul r0.xy, r0.xyxx, cb1[6].xyxx
					round_ni r0.xy, r0.xyxx
					dp2 r0.x, l(0.067111, 0.005837, 0.000000, 0.000000), r0.xyxx
					frc r0.x, r0.x
					mul r0.x, r0.x, l(52.982918)
					frc r0.x, r0.x
					itof r0.y, cb0[5].x
					mov r4.x, l(12.989800)
					mov r0.w, l(0)
					mov r1.w, l(0)
					loop 
					  ige r2.w, r1.w, cb0[5].x
					  breakc_nz r2.w
					  itof r2.w, r1.w
					  mul r2.w, r2.w, l(1.000100)
					  round_ni r2.w, r2.w
					  mad r4.y, v1.x, l(0.000000), r2.w
					  mul r3.z, r4.y, l(78.233002)
					  sincos r3.z, null, r3.z
					  mul r3.z, r3.z, l(43758.546875)
					  frc r3.z, r3.z
					  add r3.z, r0.x, r3.z
					  frc r3.z, r3.z
					  mad r5.z, r3.z, l(2.000000), l(-1.000000)
					  dp2 r3.z, r4.xyxx, l(1.000000, 78.233002, 0.000000, 0.000000)
					  sincos r3.z, null, r3.z
					  mul r3.z, r3.z, l(43758.546875)
					  frc r3.z, r3.z
					  add r3.z, r0.x, r3.z
					  mul r3.z, r3.z, l(6.283185)
					  sincos r6.x, r7.x, r3.z
					  mad r3.z, -r5.z, r5.z, l(1.000000)
					  sqrt r3.z, r3.z
					  mov r7.y, r6.x
					  mul r5.xy, r3.zzzz, r7.xyxx
					  add r2.w, r2.w, l(1.000000)
					  div r2.w, r2.w, r0.y
					  sqrt r2.w, r2.w
					  mul r2.w, r2.w, cb0[7].y
					  mul r4.yzw, r2.wwww, r5.xxyz
					  dp3 r2.w, -r1.xyzx, r4.yzwy
					  ge r2.w, r2.w, l(0.000000)
					  movc r4.yzw, r2.wwww, -r4.yyzw, r4.yyzw
					  add r4.yzw, r2.xxyz, r4.yyzw
					  mul r3.zw, r4.zzzz, cb2[7].xxxy
					  mad r3.zw, cb2[6].xxxy, r4.yyyy, r3.zzzw
					  mad r3.zw, cb2[8].xxxy, r4.wwww, r3.zzzw
					  add r2.w, -r4.w, l(1.000000)
					  mad r2.w, cb1[8].w, r2.w, r4.w
					  div r3.zw, r3.zzzw, r2.wwww
					  add r3.zw, r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
					  mul r4.yz, r3.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
					  mad r4.yz, r4.yyzy, cb0[4].xxyx, cb0[4].zzwz
					  sample r5.xyzw, r4.yzyy, t1.xyzw, s1
					  mul r2.w, r5.x, cb1[7].x
					  mad r4.w, -cb1[8].w, r2.w, l(1.000000)
					  mad r2.w, r0.z, r2.w, cb1[7].y
					  div r2.w, r4.w, r2.w
					  lt r5.xy, r4.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
					  or r4.w, r5.y, r5.x
					  lt r4.yz, l(0.000000, 1.000000, 1.000000, 0.000000), r4.yyzy
					  or r4.y, r4.z, r4.y
					  and r4.yw, r4.yyyw, l(0, 1, 0, 1)
					  iadd r4.y, r4.y, r4.w
					  itof r4.y, r4.y
					  ge r4.z, l(0.000010), r2.w
					  and r4.z, r4.z, l(0x3f800000)
					  add r4.y, r4.z, r4.y
					  mul r4.y, r4.y, l(100000000.000000)
					  mad r5.z, r2.w, cb1[5].z, r4.y
					  add r3.zw, r3.zzzw, -cb2[8].xxxy
					  add r3.zw, r3.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
					  div r3.zw, r3.zzzw, r3.xxxy
					  add r2.w, -r5.z, l(1.000000)
					  mad r2.w, cb1[8].w, r2.w, r5.z
					  mul r5.xy, r2.wwww, r3.zwzz
					  add r4.yzw, -r2.xxyz, r5.xxyz
					  dp3 r2.w, r4.yzwy, r1.xyzx
					  mad r2.w, -r2.z, l(0.002000), r2.w
					  max r2.w, r2.w, l(0.000000)
					  dp3 r3.z, r4.yzwy, r4.yzwy
					  add r3.z, r3.z, l(0.000100)
					  div r2.w, r2.w, r3.z
					  add r0.w, r0.w, r2.w
					  iadd r1.w, r1.w, l(1)
					endloop 
					mul r0.x, r0.w, cb0[7].y
					mul r0.x, r0.x, cb0[7].x
					div r0.x, r0.x, r0.y
					log r0.x, r0.x
					mul r0.x, r0.x, l(0.600000)
					exp o0.x, r0.x
					mad o0.yzw, r1.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), l(0.000000, 0.500000, 0.500000, 0.500000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 208581
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc r0.w, r0.x, r0.y, v1.y
					mov r0.xyz, v1.xyxx
					mov o1.xyzw, r0.xyzw
					mov o2.xy, r0.zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v2.xy
					dcl_output o0.xyzw
					dcl_temps 5
					sample r0.xyzw, v2.xyxx, t1.xyzw, s1
					mad r0.xyz, r0.xyzx, l(3.555400, 3.555400, 0.000000, 0.000000), l(-1.777700, -1.777700, 1.000000, 0.000000)
					dp3 r0.z, r0.xyzx, r0.xyzx
					div r0.z, l(2.000000), r0.z
					mul r1.yz, r0.xxyx, r0.zzzz
					add r1.w, r0.z, l(-1.000000)
					mul r0.xyz, r1.yzwy, l(1.000000, 1.000000, -1.000000, 0.000000)
					mad o0.yzw, r1.yyzw, l(0.000000, 0.500000, 0.500000, -0.500000), l(0.000000, 0.500000, 0.500000, 0.500000)
					mov r1.x, cb0[2].x
					mov r1.y, l(0)
					mad r2.xyzw, -r1.xyxy, l(2.769231, 1.384615, 6.461538, 3.230769), v2.xyxy
					mad r1.xyzw, r1.xyxy, l(2.769231, 1.384615, 6.461538, 3.230769), v2.xyxy
					sample r3.xyzw, r2.xyxx, t0.xyzw, s0
					sample r2.xyzw, r2.zwzz, t0.xyzw, s0
					mad r3.yzw, r3.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r0.w, r0.xyzx, r3.yzwy
					add r0.w, r0.w, l(-0.800000)
					mul_sat r0.w, r0.w, l(5.000000)
					mad r3.y, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r3.y
					mul r0.w, r0.w, l(0.316216)
					mul r3.x, r0.w, r3.x
					sample r4.xyzw, v2.xyxx, t0.xyzw, s0
					mad r3.x, r4.x, l(0.227027), r3.x
					sample r4.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					mad r3.yzw, r4.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r3.y, r0.xyzx, r3.yzwy
					add r3.y, r3.y, l(-0.800000)
					mul_sat r3.y, r3.y, l(5.000000)
					mad r3.z, r3.y, l(-2.000000), l(3.000000)
					mul r3.y, r3.y, r3.y
					mul r3.y, r3.y, r3.z
					mul r3.z, r3.y, l(0.316216)
					mad r0.w, r3.y, l(0.316216), r0.w
					mad r3.x, r4.x, r3.z, r3.x
					mad r2.yzw, r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r2.y, r0.xyzx, r2.yzwy
					add r2.y, r2.y, l(-0.800000)
					mul_sat r2.y, r2.y, l(5.000000)
					mad r2.z, r2.y, l(-2.000000), l(3.000000)
					mul r2.y, r2.y, r2.y
					mul r2.y, r2.y, r2.z
					mul r2.z, r2.y, l(0.070270)
					mad r0.w, r2.y, l(0.070270), r0.w
					mad r2.x, r2.x, r2.z, r3.x
					mad r1.yzw, r1.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r0.x, r0.xyzx, r1.yzwy
					add r0.x, r0.x, l(-0.800000)
					mul_sat r0.x, r0.x, l(5.000000)
					mad r0.y, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.y, r0.x, l(0.070270)
					mad r0.x, r0.x, l(0.070270), r0.w
					add r0.x, r0.x, l(0.227027)
					mad r0.y, r1.x, r0.y, r2.x
					div o0.x, r0.y, r0.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 315773
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc r0.w, r0.x, r0.y, v1.y
					mov r0.xyz, v1.xyxx
					mov o1.xyzw, r0.xyzw
					mov o2.xy, r0.zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[17], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v2.xy
					dcl_output o0.xyzw
					dcl_temps 5
					sample r0.xyzw, v2.xyxx, t1.xyzw, s1
					dp3 r0.w, r0.xyzx, r0.xyzx
					ne r0.w, r0.w, l(0.000000)
					movc r0.w, r0.w, l(-1.000000), l(-0.000000)
					mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.wwww
					mul r1.xyz, r0.yyyy, cb1[15].xyzx
					mad r0.xyw, cb1[14].xyxz, r0.xxxx, r1.xyxz
					mad r0.xyz, cb1[16].xyzx, r0.zzzz, r0.xywx
					mov r1.x, cb0[2].x
					mov r1.y, l(0)
					mad r2.xyzw, -r1.xyxy, l(2.769231, 1.384615, 6.461538, 3.230769), v2.xyxy
					mad r1.xyzw, r1.xyxy, l(2.769231, 1.384615, 6.461538, 3.230769), v2.xyxy
					sample r3.xyzw, r2.xyxx, t0.xyzw, s0
					sample r2.xyzw, r2.zwzz, t0.xyzw, s0
					mad r3.yzw, r3.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r0.w, r0.xyzx, r3.yzwy
					add r0.w, r0.w, l(-0.800000)
					mul_sat r0.w, r0.w, l(5.000000)
					mad r3.y, r0.w, l(-2.000000), l(3.000000)
					mul r0.w, r0.w, r0.w
					mul r0.w, r0.w, r3.y
					mul r0.w, r0.w, l(0.316216)
					mul r3.x, r0.w, r3.x
					sample r4.xyzw, v2.xyxx, t0.xyzw, s0
					mad r3.x, r4.x, l(0.227027), r3.x
					sample r4.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					mad r3.yzw, r4.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r3.y, r0.xyzx, r3.yzwy
					add r3.y, r3.y, l(-0.800000)
					mul_sat r3.y, r3.y, l(5.000000)
					mad r3.z, r3.y, l(-2.000000), l(3.000000)
					mul r3.y, r3.y, r3.y
					mul r3.y, r3.y, r3.z
					mul r3.z, r3.y, l(0.316216)
					mad r0.w, r3.y, l(0.316216), r0.w
					mad r3.x, r4.x, r3.z, r3.x
					mad r2.yzw, r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r2.y, r0.xyzx, r2.yzwy
					add r2.y, r2.y, l(-0.800000)
					mul_sat r2.y, r2.y, l(5.000000)
					mad r2.z, r2.y, l(-2.000000), l(3.000000)
					mul r2.y, r2.y, r2.y
					mul r2.y, r2.y, r2.z
					mul r2.z, r2.y, l(0.070270)
					mad r0.w, r2.y, l(0.070270), r0.w
					mad r2.x, r2.x, r2.z, r3.x
					mad r1.yzw, r1.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r1.y, r0.xyzx, r1.yzwy
					mad o0.yzw, r0.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), l(0.000000, 0.500000, 0.500000, 0.500000)
					add r0.x, r1.y, l(-0.800000)
					mul_sat r0.x, r0.x, l(5.000000)
					mad r0.y, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.y
					mul r0.y, r0.x, l(0.070270)
					mad r0.x, r0.x, l(0.070270), r0.w
					add r0.x, r0.x, l(0.227027)
					mad r0.y, r1.x, r0.y, r2.x
					div o0.x, r0.y, r0.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 331526
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc r0.w, r0.x, r0.y, v1.y
					mov r0.xyz, v1.xyxx
					mov o1.xyzw, r0.xyzw
					mov o2.xy, r0.zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v2.xy
					dcl_output o0.xyzw
					dcl_temps 5
					div r0.x, cb0[2].y, cb0[7].z
					mov r0.yz, l(0,1.384615,3.230769,0)
					mad r1.xyzw, l(-0.000000, -2.769231, -0.000000, -6.461538), r0.yxzx, v2.xyxy
					mad r0.xyzw, l(0.000000, 2.769231, 0.000000, 6.461538), r0.yxzx, v2.xyxy
					sample r2.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					mad r2.yzw, r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					sample r3.xyzw, v2.xyxx, t0.xyzw, s0
					mad r3.yzw, r3.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r2.y, r3.yzwy, r2.yzwy
					add r2.y, r2.y, l(-0.800000)
					mul_sat r2.y, r2.y, l(5.000000)
					mad r2.z, r2.y, l(-2.000000), l(3.000000)
					mul r2.y, r2.y, r2.y
					mul r2.y, r2.y, r2.z
					mul r2.y, r2.y, l(0.316216)
					mul r2.x, r2.y, r2.x
					mad r2.x, r3.x, l(0.227027), r2.x
					sample r4.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					mad r4.yzw, r4.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r2.z, r3.yzwy, r4.yzwy
					add r2.z, r2.z, l(-0.800000)
					mul_sat r2.z, r2.z, l(5.000000)
					mad r2.w, r2.z, l(-2.000000), l(3.000000)
					mul r2.z, r2.z, r2.z
					mul r2.z, r2.z, r2.w
					mul r2.w, r2.z, l(0.316216)
					mad r2.y, r2.z, l(0.316216), r2.y
					mad r2.x, r4.x, r2.w, r2.x
					mad r1.yzw, r1.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r1.y, r3.yzwy, r1.yzwy
					add r1.y, r1.y, l(-0.800000)
					mul_sat r1.y, r1.y, l(5.000000)
					mad r1.z, r1.y, l(-2.000000), l(3.000000)
					mul r1.y, r1.y, r1.y
					mul r1.y, r1.y, r1.z
					mul r1.z, r1.y, l(0.070270)
					mad r1.y, r1.y, l(0.070270), r2.y
					mad r1.x, r1.x, r1.z, r2.x
					mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r0.y, r3.yzwy, r0.yzwy
					mad o0.yzw, r3.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000), l(0.000000, 0.500000, 0.500000, 0.500000)
					add r0.y, r0.y, l(-0.800000)
					mul_sat r0.y, r0.y, l(5.000000)
					mad r0.z, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mul r0.y, r0.y, r0.z
					mul r0.z, r0.y, l(0.070270)
					mad r0.y, r0.y, l(0.070270), r1.y
					add r0.y, r0.y, l(0.227027)
					mad r0.x, r0.x, r0.z, r1.x
					div o0.x, r0.x, r0.y
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 441715
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc r0.w, r0.x, r0.y, v1.y
					mov r0.xyz, v1.xyxx
					mov o1.xyzw, r0.xyzw
					mov o2.xy, r0.zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v2.xy
					dcl_output o0.xyzw
					dcl_temps 5
					div r0.xy, cb0[2].xyxx, cb0[7].zzzz
					add r1.xy, -r0.xyxx, v2.xyxx
					sample r1.xyzw, r1.xyxx, t0.xyzw, s1
					mad r1.yzw, r1.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					sample r2.xyzw, v2.xyxx, t0.xyzw, s1
					mad r2.yzw, r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r1.y, r2.yzwy, r1.yzwy
					add r1.y, r1.y, l(-0.800000)
					mul_sat r1.y, r1.y, l(5.000000)
					mad r1.z, r1.y, l(-2.000000), l(3.000000)
					mul r1.y, r1.y, r1.y
					mul r1.y, r1.y, r1.z
					mad r1.x, r1.x, r1.y, r2.x
					mov r0.zw, -r0.yyyx
					add r3.xyzw, r0.xzwy, v2.xyxy
					add r0.xy, r0.xyxx, v2.xyxx
					sample r0.xyzw, r0.xyxx, t0.xyzw, s1
					sample r4.xyzw, r3.xyxx, t0.xyzw, s1
					sample r3.xyzw, r3.zwzz, t0.xyzw, s1
					mad r4.yzw, r4.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r1.z, r2.yzwy, r4.yzwy
					add r1.z, r1.z, l(-0.800000)
					mul_sat r1.z, r1.z, l(5.000000)
					mad r1.w, r1.z, l(-2.000000), l(3.000000)
					mul r1.z, r1.z, r1.z
					mul r2.x, r1.z, r1.w
					mad r1.y, r1.w, r1.z, r1.y
					mad r1.x, r4.x, r2.x, r1.x
					mad r3.yzw, r3.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r1.z, r2.yzwy, r3.yzwy
					add r1.z, r1.z, l(-0.800000)
					mul_sat r1.z, r1.z, l(5.000000)
					mad r1.w, r1.z, l(-2.000000), l(3.000000)
					mul r1.z, r1.z, r1.z
					mul r2.x, r1.z, r1.w
					mad r1.y, r1.w, r1.z, r1.y
					mad r1.x, r3.x, r2.x, r1.x
					mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r0.y, r2.yzwy, r0.yzwy
					add r0.y, r0.y, l(-0.800000)
					mul_sat r0.y, r0.y, l(5.000000)
					mad r0.z, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mul r0.w, r0.y, r0.z
					mad r0.y, r0.z, r0.y, r1.y
					add r0.y, r0.y, l(1.000000)
					mad r0.x, r0.x, r0.w, r1.x
					div r0.x, r0.x, r0.y
					add r0.x, -r0.x, l(1.000000)
					sample r1.xyzw, v2.xyxx, t1.xyzw, s0
					mul o0.xyz, r0.xxxx, r1.xyzx
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Blend Zero OneMinusSrcColor, Zero OneMinusSrcAlpha
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 497636
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_input v0.xyzw
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					mov o0.xyzw, v0.xyzw
					mad o1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(0.000000, 1.000000, 0.000000, 1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_temps 5
					add r0.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					div r0.xy, r0.xyxx, cb0[7].zzzz
					add r1.xy, -r0.xyxx, v1.zwzz
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					mad r1.yzw, r1.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					sample r2.xyzw, v1.zwzz, t0.xyzw, s0
					mad r2.yzw, r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r1.y, r2.yzwy, r1.yzwy
					add r1.y, r1.y, l(-0.800000)
					mul_sat r1.y, r1.y, l(5.000000)
					mad r1.z, r1.y, l(-2.000000), l(3.000000)
					mul r1.y, r1.y, r1.y
					mul r1.y, r1.y, r1.z
					mad r1.x, r1.x, r1.y, r2.x
					mov r0.zw, -r0.yyyx
					add r3.xyzw, r0.xzwy, v1.zwzw
					add r0.xy, r0.xyxx, v1.zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					sample r4.xyzw, r3.xyxx, t0.xyzw, s0
					sample r3.xyzw, r3.zwzz, t0.xyzw, s0
					mad r4.yzw, r4.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r1.z, r2.yzwy, r4.yzwy
					add r1.z, r1.z, l(-0.800000)
					mul_sat r1.z, r1.z, l(5.000000)
					mad r1.w, r1.z, l(-2.000000), l(3.000000)
					mul r1.z, r1.z, r1.z
					mul r2.x, r1.z, r1.w
					mad r1.y, r1.w, r1.z, r1.y
					mad r1.x, r4.x, r2.x, r1.x
					mad r3.yzw, r3.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r1.z, r2.yzwy, r3.yzwy
					add r1.z, r1.z, l(-0.800000)
					mul_sat r1.z, r1.z, l(5.000000)
					mad r1.w, r1.z, l(-2.000000), l(3.000000)
					mul r1.z, r1.z, r1.z
					mul r2.x, r1.z, r1.w
					mad r1.y, r1.w, r1.z, r1.y
					mad r1.x, r3.x, r2.x, r1.x
					mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r0.y, r2.yzwy, r0.yzwy
					add r0.y, r0.y, l(-0.800000)
					mul_sat r0.y, r0.y, l(5.000000)
					mad r0.z, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mul r0.w, r0.y, r0.z
					mad r0.y, r0.z, r0.y, r1.y
					add r0.y, r0.y, l(1.000000)
					mad r0.x, r0.x, r0.w, r1.x
					div r0.xyz, r0.xxxx, r0.yyyy
					mov r0.w, l(0)
					mov o0.xyzw, r0.wwwz
					mov o1.xyzw, r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 550011
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc r0.w, r0.x, r0.y, v1.y
					mov r0.xyz, v1.xyxx
					mov o1.xyzw, r0.xyzw
					mov o2.xy, r0.zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float       
					// TEXCOORD                 2   xy          2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v2.xy
					dcl_output o0.xyzw
					dcl_temps 5
					div r0.xy, cb0[2].xyxx, cb0[7].zzzz
					add r1.xy, -r0.xyxx, v2.xyxx
					sample r1.xyzw, r1.xyxx, t0.xyzw, s1
					mad r1.yzw, r1.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					sample r2.xyzw, v2.xyxx, t0.xyzw, s1
					mad r2.yzw, r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r1.y, r2.yzwy, r1.yzwy
					add r1.y, r1.y, l(-0.800000)
					mul_sat r1.y, r1.y, l(5.000000)
					mad r1.z, r1.y, l(-2.000000), l(3.000000)
					mul r1.y, r1.y, r1.y
					mul r1.y, r1.y, r1.z
					mad r1.x, r1.x, r1.y, r2.x
					mov r0.zw, -r0.yyyx
					add r3.xyzw, r0.xzwy, v2.xyxy
					add r0.xy, r0.xyxx, v2.xyxx
					sample r0.xyzw, r0.xyxx, t0.xyzw, s1
					sample r4.xyzw, r3.xyxx, t0.xyzw, s1
					sample r3.xyzw, r3.zwzz, t0.xyzw, s1
					mad r4.yzw, r4.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r1.z, r2.yzwy, r4.yzwy
					add r1.z, r1.z, l(-0.800000)
					mul_sat r1.z, r1.z, l(5.000000)
					mad r1.w, r1.z, l(-2.000000), l(3.000000)
					mul r1.z, r1.z, r1.z
					mul r2.x, r1.z, r1.w
					mad r1.y, r1.w, r1.z, r1.y
					mad r1.x, r4.x, r2.x, r1.x
					mad r3.yzw, r3.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r1.z, r2.yzwy, r3.yzwy
					add r1.z, r1.z, l(-0.800000)
					mul_sat r1.z, r1.z, l(5.000000)
					mad r1.w, r1.z, l(-2.000000), l(3.000000)
					mul r1.z, r1.z, r1.z
					mul r2.x, r1.z, r1.w
					mad r1.y, r1.w, r1.z, r1.y
					mad r1.x, r3.x, r2.x, r1.x
					mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
					dp3 r0.y, r2.yzwy, r0.yzwy
					add r0.y, r0.y, l(-0.800000)
					mul_sat r0.y, r0.y, l(5.000000)
					mad r0.z, r0.y, l(-2.000000), l(3.000000)
					mul r0.y, r0.y, r0.y
					mul r0.w, r0.y, r0.z
					mad r0.y, r0.z, r0.y, r1.y
					add r0.y, r0.y, l(1.000000)
					mad r0.x, r0.x, r0.w, r1.x
					div r0.x, r0.x, r0.y
					add o0.xyz, -r0.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
					sample r0.xyzw, v2.xyxx, t1.xyzw, s0
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}