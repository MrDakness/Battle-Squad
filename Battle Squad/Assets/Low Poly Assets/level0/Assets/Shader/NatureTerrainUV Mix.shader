Shader "Nature/Terrain/UV Mix" {
	Properties {
		_UvMix ("X, Y, Z", Vector) = (0.1,-0.25,0.5,1)
		[HideInInspector] _Control ("Control (RGBA)", 2D) = "red" {}
		[HideInInspector] _Splat3 ("Layer 3 (A)", 2D) = "white" {}
		[HideInInspector] _Splat2 ("Layer 2 (B)", 2D) = "white" {}
		[HideInInspector] _Splat1 ("Layer 1 (G)", 2D) = "white" {}
		[HideInInspector] _Splat0 ("Layer 0 (R)", 2D) = "white" {}
		[HideInInspector] _Normal3 ("Normal 3 (A)", 2D) = "bump" {}
		[HideInInspector] _Normal2 ("Normal 2 (B)", 2D) = "bump" {}
		[HideInInspector] _Normal1 ("Normal 1 (G)", 2D) = "bump" {}
		[HideInInspector] _Normal0 ("Normal 0 (R)", 2D) = "bump" {}
		[HideInInspector] _MainTex ("BaseMap (RGB)", 2D) = "white" {}
		[HideInInspector] _Color ("Main Color", Vector) = (1,1,1,1)
	}
	SubShader {
		Tags { "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			GpuProgramID 49563
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o4.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb3[4].xyzx
					dp3 r1.y, v2.xyzx, cb3[5].xyzx
					dp3 r1.z, v2.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					add r2.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
					mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb1[8].xyzx
					mad r2.xyz, cb1[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o6.xyz, r0.xyzx, r1.xyzx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.x, v2.xyzx, cb3[4].xyzx
					dp3 r2.y, v2.xyzx, cb3[5].xyzx
					dp3 r2.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					add r3.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o6.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					// SV_InstanceID            0   x           7     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_temps 3
					iadd r0.x, v8.x, cb2[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb3[r0.x + 1].xyzw
					mad r1.xyzw, cb3[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb3[r0.x + 3].xyzw
					mad o4.xyz, cb3[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb3[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb3[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb3[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o3.xyz, r0.xxxx, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mov o7.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.x
					dcl_temps 3
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad o4.xyz, cb4[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.x
					dcl_temps 3
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad o4.xyz, cb4[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul o3.xyz, r0.xxxx, r2.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// SV_InstanceID            0   x           9     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.x
					dcl_temps 3
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad o4.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r2.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r2.xyzw
					dp4 r0.y, cb2[43].xyzw, r2.xyzw
					dp4 r0.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					mov o8.xyzw, l(0,0,0,0)
					mov o9.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					// SV_InstanceID            0   x           7     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_temps 3
					iadd r0.x, v8.x, cb2[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb3[r0.x + 1].xyzw
					mad r1.xyzw, cb3[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb3[r0.x + 3].xyzw
					mad o4.xyz, cb3[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb3[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb3[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb3[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o3.xyz, r0.xxxx, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mov o7.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.x
					dcl_temps 5
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad r0.yzw, cb4[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.xyz, r0.yzwy
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					add r2.xyzw, -r0.yyyy, cb1[3].xyzw
					add r3.xyzw, -r0.zzzz, cb1[4].xyzw
					add r0.xyzw, -r0.wwww, cb1[5].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
					mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb1[8].xyzx
					mad r2.xyz, cb1[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o6.xyz, r0.xyzx, r1.xyzx
					mov o7.xyzw, l(0,0,0,0)
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.x
					dcl_temps 3
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad o4.xyz, cb4[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul o3.xyz, r0.xxxx, r2.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// SV_InstanceID            0   x           9     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.x
					dcl_temps 6
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad r0.yzw, cb5[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.xyz, r0.yzwy
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					add r3.xyzw, -r0.yyyy, cb2[3].xyzw
					add r4.xyzw, -r0.zzzz, cb2[4].xyzw
					add r0.xyzw, -r0.wwww, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o6.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					mov o8.xyzw, l(0,0,0,0)
					mov o9.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 8   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mov o3.w, r0.x
					mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
					mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
					mul r1.xyz, r0.wwww, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, r0.xxxx, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					dp3 r2.y, v2.xyzx, cb1[4].xyzx
					dp3 r2.z, v2.xyzx, cb1[5].xyzx
					dp3 r2.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb1[9].wwww
					mov o3.y, r3.x
					mov o3.x, r1.z
					mov o3.z, r2.y
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.z, r2.z
					mov o5.z, r2.x
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o4.y, r3.y
					mov o5.y, r3.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mov o3.w, r0.x
					mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
					mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
					mul r1.xyz, r0.wwww, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, r0.xxxx, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb2[9].wwww
					mov o3.y, r3.x
					mov o3.z, r2.x
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o4.y, r3.y
					mov o5.y, r3.z
					mov o4.z, r2.y
					mov o5.z, r2.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o7.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mov o3.w, r0.x
					mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
					mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
					mul r2.xyz, r0.wwww, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, r0.xxxx, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r3.y, v2.xyzx, cb2[4].xyzx
					dp3 r3.z, v2.xyzx, cb2[5].xyzx
					dp3 r3.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r3.zxyz, r2.yzxy, -r4.xyzx
					mul r4.xyz, r4.xyzx, -cb2[9].wwww
					mov o3.y, r4.x
					mov o3.x, r2.z
					mov o3.z, r3.y
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.z, r3.z
					mov o5.z, r3.x
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o4.y, r4.y
					mov o5.y, r4.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mov o3.w, r0.x
					mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
					mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
					mul r2.xyz, r0.wwww, cb3[1].yzxy
					mad r2.xyz, cb3[0].yzxy, r0.xxxx, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o3.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r4.xyzx, -cb3[9].wwww
					mov o3.y, r4.x
					mov o3.z, r3.x
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o4.y, r4.y
					mov o5.y, r4.z
					mov o4.z, r3.y
					mov o5.z, r3.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o7.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					mov o9.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 8   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mov o3.w, r0.x
					mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
					mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
					mul r1.xyz, r0.wwww, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, r0.xxxx, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					dp3 r2.y, v2.xyzx, cb1[4].xyzx
					dp3 r2.z, v2.xyzx, cb1[5].xyzx
					dp3 r2.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb1[9].wwww
					mov o3.y, r3.x
					mov o3.x, r1.z
					mov o3.z, r2.y
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.z, r2.z
					mov o5.z, r2.x
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o4.y, r3.y
					mov o5.y, r3.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
					mul r1.yzw, r1.yyyy, cb2[1].yyzx
					mad r1.xyz, cb2[0].yzxy, r1.xxxx, r1.yzwy
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyzw, r0.wwww, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb2[9].wwww
					mov o3.y, r3.x
					mov o3.w, r0.x
					mov o3.z, r2.x
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.y, r3.y
					mov o5.y, r3.z
					mov o4.w, r0.y
					mov o4.z, r2.y
					mov o5.w, r0.z
					mov o5.z, r2.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					add r1.xyzw, -r0.xxxx, cb1[3].xyzw
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o7.xyz, r0.xyzx, r1.xyzx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 5
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mov o3.w, r0.x
					mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
					mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
					mul r2.xyz, r0.wwww, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, r0.xxxx, r2.xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					dp3 r3.y, v2.xyzx, cb2[4].xyzx
					dp3 r3.z, v2.xyzx, cb2[5].xyzx
					dp3 r3.x, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r3.zxyz, r2.yzxy, -r4.xyzx
					mul r4.xyz, r4.xyzx, -cb2[9].wwww
					mov o3.y, r4.x
					mov o3.x, r2.z
					mov o3.z, r3.y
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.z, r3.z
					mov o5.z, r3.x
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o4.y, r4.y
					mov o5.y, r4.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mul r2.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r2.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyxx
					mul r2.yzw, r2.yyyy, cb3[1].yyzx
					mad r2.xyz, cb3[0].yzxy, r2.xxxx, r2.yzwy
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o3.x, r2.z
					dp3 r3.x, v2.xyzx, cb3[4].xyzx
					dp3 r3.y, v2.xyzx, cb3[5].xyzx
					dp3 r3.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyzw, r0.wwww, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r4.xyzx, -cb3[9].wwww
					mov o3.y, r4.x
					mov o3.w, r0.x
					mov o3.z, r3.x
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.y, r4.y
					mov o5.y, r4.z
					mov o4.w, r0.y
					mov o4.z, r3.y
					mov o5.w, r0.z
					mov o5.z, r3.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					add r2.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o7.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					mov o9.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 8   xyzw        7     NONE   float   xyzw
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad r0.yzw, cb4[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.y, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.x, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r2.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyxx
					mul r2.yzw, r2.yyyy, cb4[r0.x + 1].yyzx
					mad r2.xyz, cb4[r0.x + 0].yzxy, r2.xxxx, r2.yzwy
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb1[9].wwww
					mov o3.y, r3.x
					mov o3.z, r1.y
					mov o3.x, r2.z
					mov o3.w, r0.y
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.z, r1.z
					mov o5.z, r1.x
					mov o4.w, r0.z
					mov o5.w, r0.w
					mov o4.y, r3.y
					mov o5.y, r3.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o7.xyzw, l(0,0,0,0)
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
					// SV_InstanceID            0   x           9     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad r0.yzw, cb5[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
					mul r1.yzw, r1.yyyy, cb5[r0.x + 1].yyzx
					mad r1.xyz, cb5[r0.x + 0].yzxy, r1.xxxx, r1.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb2[9].wwww
					mov o3.y, r3.x
					mov o3.x, r1.z
					mov o3.z, r2.x
					mov o3.w, r0.y
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.w, r0.z
					mov o5.w, r0.w
					mov o4.y, r3.y
					mov o5.y, r3.z
					mov o4.z, r2.y
					mov o5.z, r2.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o7.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o8.xyzw, l(0,0,0,0)
					mov o9.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
					// SV_InstanceID            0   x           9     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.x
					dcl_temps 5
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad r0.yzw, cb5[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.y, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r2.z, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r2.x, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r3.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r3.xyxx
					mul r3.yzw, r3.yyyy, cb5[r0.x + 1].yyzx
					mad r3.xyz, cb5[r0.x + 0].yzxy, r3.xxxx, r3.yzwy
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r4.xyz, r4.xyzx, -cb2[9].wwww
					mov o3.y, r4.x
					mov o3.z, r2.y
					mov o3.x, r3.z
					mov o3.w, r0.y
					mov o4.x, r3.x
					mov o5.x, r3.y
					mov o4.z, r2.z
					mov o5.z, r2.x
					mov o4.w, r0.z
					mov o5.w, r0.w
					mov o4.y, r4.y
					mov o5.y, r4.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					mov o8.xyzw, l(0,0,0,0)
					mov o9.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// SV_InstanceID            0   x          10     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.x
					dcl_temps 5
					iadd r0.x, v8.x, cb5[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb6[r0.x + 1].xyzw
					mad r1.xyzw, cb6[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb6[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb6[r0.x + 3].xyzw
					mad r0.yzw, cb6[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb4[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mul r2.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r2.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyxx
					mul r2.yzw, r2.yyyy, cb6[r0.x + 1].yyzx
					mad r2.xyz, cb6[r0.x + 0].yzxy, r2.xxxx, r2.yzwy
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					dp3 r3.x, v2.xyzx, cb6[r0.x + 4].xyzx
					dp3 r3.y, v2.xyzx, cb6[r0.x + 5].xyzx
					dp3 r3.z, v2.xyzx, cb6[r0.x + 6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r4.xyzx, -cb3[9].wwww
					mov o3.y, r4.x
					mov o3.x, r2.z
					mov o3.z, r3.x
					mov o3.w, r0.y
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.w, r0.z
					mov o5.w, r0.w
					mov o4.y, r4.y
					mov o5.y, r4.z
					mov o4.z, r3.y
					mov o5.z, r3.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r3.y, r3.y
					mad r0.x, r3.x, r3.x, -r0.x
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad o7.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					mov o9.xyzw, l(0,0,0,0)
					mov o10.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 8   xyzw        7     NONE   float   xyzw
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad r0.yzw, cb4[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.y, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.x, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r2.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyxx
					mul r2.yzw, r2.yyyy, cb4[r0.x + 1].yyzx
					mad r2.xyz, cb4[r0.x + 0].yzxy, r2.xxxx, r2.yzwy
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb1[9].wwww
					mov o3.y, r3.x
					mov o3.z, r1.y
					mov o3.x, r2.z
					mov o3.w, r0.y
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.z, r1.z
					mov o5.z, r1.x
					mov o4.w, r0.z
					mov o5.w, r0.w
					mov o4.y, r3.y
					mov o5.y, r3.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o7.xyzw, l(0,0,0,0)
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
					// SV_InstanceID            0   x           9     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.x
					dcl_temps 5
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad r0.yzw, cb5[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
					mul r1.yzw, r1.yyyy, cb5[r0.x + 1].yyzx
					mad r1.xyz, cb5[r0.x + 0].yzxy, r1.xxxx, r1.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb2[9].wwww
					mov o3.y, r3.x
					mov o3.x, r1.z
					mov o3.z, r2.x
					mov o3.w, r0.y
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.w, r0.z
					mov o4.y, r3.y
					mov o5.y, r3.z
					mov o4.z, r2.y
					mov o5.w, r0.w
					mov o5.z, r2.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					add r1.xyzw, -r0.yyyy, cb1[3].xyzw
					add r3.xyzw, -r0.zzzz, cb1[4].xyzw
					add r0.xyzw, -r0.wwww, cb1[5].xyzw
					mul r4.xyzw, r2.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
					mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o7.xyz, r0.xyzx, r1.xyzx
					mov o8.xyzw, l(0,0,0,0)
					mov o9.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
					// SV_InstanceID            0   x           9     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.x
					dcl_temps 5
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad r0.yzw, cb5[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.y, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r2.z, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r2.x, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r3.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r3.xyxx
					mul r3.yzw, r3.yyyy, cb5[r0.x + 1].yyzx
					mad r3.xyz, cb5[r0.x + 0].yzxy, r3.xxxx, r3.yzwy
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyz, r0.xxxx, r3.xyzx
					mul r4.xyz, r2.xyzx, r3.xyzx
					mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
					mul r4.xyz, r4.xyzx, -cb2[9].wwww
					mov o3.y, r4.x
					mov o3.z, r2.y
					mov o3.x, r3.z
					mov o3.w, r0.y
					mov o4.x, r3.x
					mov o5.x, r3.y
					mov o4.z, r2.z
					mov o5.z, r2.x
					mov o4.w, r0.z
					mov o5.w, r0.w
					mov o4.y, r4.y
					mov o5.y, r4.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					mov o8.xyzw, l(0,0,0,0)
					mov o9.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					// SV_InstanceID            0   x          10     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_constantbuffer CB5[1], immediateIndexed
					dcl_constantbuffer CB6[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyz
					dcl_output o8.xyzw
					dcl_output o9.xyzw
					dcl_output o10.x
					dcl_temps 6
					iadd r0.x, v8.x, cb5[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb6[r0.x + 1].xyzw
					mad r1.xyzw, cb6[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb6[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb6[r0.x + 3].xyzw
					mad r0.yzw, cb6[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb4[18].xyzw
					mad r1.xyzw, cb4[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb4[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb4[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mul r2.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r2.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyxx
					mul r2.yzw, r2.yyyy, cb6[r0.x + 1].yyzx
					mad r2.xyz, cb6[r0.x + 0].yzxy, r2.xxxx, r2.yzwy
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					dp3 r3.x, v2.xyzx, cb6[r0.x + 4].xyzx
					dp3 r3.y, v2.xyzx, cb6[r0.x + 5].xyzx
					dp3 r3.z, v2.xyzx, cb6[r0.x + 6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r3.xyzw, r0.xxxx, r3.xyzz
					mul r4.xyz, r2.xyzx, r3.wxyw
					mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
					mul r4.xyz, r4.xyzx, -cb3[9].wwww
					mov o3.y, r4.x
					mov o3.x, r2.z
					mov o3.z, r3.x
					mov o3.w, r0.y
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.w, r0.z
					mov o4.y, r4.y
					mov o5.y, r4.z
					mov o4.z, r3.y
					mov o5.w, r0.w
					mov o5.z, r3.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					add r2.xyzw, -r0.yyyy, cb2[3].xyzw
					add r4.xyzw, -r0.zzzz, cb2[4].xyzw
					add r0.xyzw, -r0.wwww, cb2[5].xyzw
					mul r5.xyzw, r3.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
					mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
					mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r4.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb2[8].xyzx
					mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r3.y, r3.y
					mad r0.w, r3.x, r3.x, -r0.w
					mul r2.xyzw, r3.ywzx, r3.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o7.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o8.zw, r1.zzzw
					add o8.xy, r0.zzzz, r0.xwxx
					mov o9.xyzw, l(0,0,0,0)
					mov o10.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 7   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.y
					  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r1.y, cb2[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r1.yzw, r1.yyyy, r2.xxyz, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r1.y, r2.y, l(0.250000), l(0.750000)
					  mad r1.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.z, r1.y
					  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r2.xyzw, cb1[46].xyzw
					mul r1.yzw, r1.yyyy, cb0[2].xxyz
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r2.y, cb2[0].z, l(0.500000)
					  mad r3.x, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r2.y
					  min r2.x, r3.x, r0.w
					  sample r3.xyzw, r2.xzwx, t5.xyzw, s0
					  add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t5.xyzw, s0
					  add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r2.xyzw, r2.xyzx, t5.xyzw, s0
					  mov r5.xyz, v3.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v3.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r2.xyz, r3.xyzx, v6.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r1.yzw, r0.xxyz, r1.yyzw
					mul r0.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r1.yzwy, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s4
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s5
					sample r2.xyzw, r2.zwzz, t3.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					add r1.yzw, -v4.xxyz, cb1[4].xxyz
					mov r2.x, cb4[9].z
					mov r2.y, cb4[10].z
					mov r2.z, cb4[11].z
					dp3 r0.w, r1.yzwy, r2.xyzx
					add r1.yzw, v4.xxyz, -cb3[25].xxyz
					dp3 r1.y, r1.yzwy, r1.yzwy
					sqrt r1.y, r1.y
					add r1.y, -r0.w, r1.y
					mad r0.w, cb3[25].w, r1.y, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.y, cb5[0].x, l(1.000000)
					if_nz r1.y
					  eq r1.z, cb5[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb5[2].xyzx
					  mad r2.xyz, cb5[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb5[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb5[4].xyzx
					  movc r2.xyz, r1.zzzz, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r1.z, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.w, r1.z
					  sample r2.xyzw, r2.xzwx, t6.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.z, r2.xyzw, cb2[46].xyzw
					div r2.xy, v6.xyxx, v6.wwww
					sample r2.xyzw, r2.xyxx, t5.xyzw, s1
					add_sat r0.w, r0.w, r2.x
					min r1.z, r0.w, r1.z
					movc r0.w, r1.y, r1.z, r0.w
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s4
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s5
					sample r2.xyzw, r2.zwzz, t3.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					add r1.yzw, -v4.xxyz, cb1[4].xxyz
					mov r2.x, cb4[9].z
					mov r2.y, cb4[10].z
					mov r2.z, cb4[11].z
					dp3 r0.w, r1.yzwy, r2.xyzx
					add r1.yzw, v4.xxyz, -cb3[25].xxyz
					dp3 r1.y, r1.yzwy, r1.yzwy
					sqrt r1.y, r1.y
					add r1.y, -r0.w, r1.y
					mad r0.w, cb3[25].w, r1.y, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.y, cb5[0].x, l(1.000000)
					if_nz r1.y
					  eq r1.z, cb5[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb5[2].xyzx
					  mad r2.xyz, cb5[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb5[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb5[4].xyzx
					  movc r2.xyz, r1.zzzz, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r1.z, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.w, r1.z
					  sample r2.xyzw, r2.xzwx, t6.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.z, r2.xyzw, cb2[46].xyzw
					div r2.xy, v7.xyxx, v7.wwww
					sample r2.xyzw, r2.xyxx, t5.xyzw, s1
					add_sat r0.w, r0.w, r2.x
					min r1.z, r0.w, r1.z
					movc r0.w, r1.y, r1.z, r0.w
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					if_nz r1.y
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb5[2].xxyz
					  mad r1.yzw, cb5[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb5[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb5[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r3.yzw, r1.yyzw, cb5[5].xxyz
					  mul r0.w, r3.y, l(0.250000)
					  mul r1.y, cb5[0].z, l(0.500000)
					  mad r1.z, -cb5[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r3.x, r1.z, r0.w
					  sample r4.xyzw, r3.xzwx, t6.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r5.xyzw, r1.yzwy, t6.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r3.xyzw, r1.yzwy, t6.xyzw, s0
					  mov r6.xyz, v3.xyzx
					  mov r6.w, l(1.000000)
					  dp4 r4.x, r4.xyzw, r6.xyzw
					  dp4 r4.y, r5.xyzw, r6.xyzw
					  dp4 r4.z, r3.xyzw, r6.xyzw
					else 
					  mov r3.xyz, v3.xyzx
					  mov r3.w, l(1.000000)
					  dp4 r4.x, cb2[39].xyzw, r3.xyzw
					  dp4 r4.y, cb2[40].xyzw, r3.xyzw
					  dp4 r4.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r1.yzw, r4.xxyz, v6.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.w, v3.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r2.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r1.yzwy
					mad r0.xyz, r2.xyzx, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 7   xyzw        6     NONE   float       
					// SV_InstanceID            0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.y
					  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r1.y, cb2[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r1.yzw, r1.yyyy, r2.xxyz, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r1.y, r2.y, l(0.250000), l(0.750000)
					  mad r1.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.z, r1.y
					  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r2.xyzw, cb1[46].xyzw
					mul r1.yzw, r1.yyyy, cb0[2].xxyz
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r2.y, cb2[0].z, l(0.500000)
					  mad r3.x, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r2.y
					  min r2.x, r3.x, r0.w
					  sample r3.xyzw, r2.xzwx, t5.xyzw, s0
					  add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t5.xyzw, s0
					  add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r2.xyzw, r2.xyzx, t5.xyzw, s0
					  mov r5.xyz, v3.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v3.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r2.xyz, r3.xyzx, v6.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r1.yzw, r0.xxyz, r1.yyzw
					mul r0.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r1.yzwy, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s4
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s5
					sample r2.xyzw, r2.zwzz, t3.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					add r1.yzw, -v4.xxyz, cb1[4].xxyz
					mov r2.x, cb4[9].z
					mov r2.y, cb4[10].z
					mov r2.z, cb4[11].z
					dp3 r0.w, r1.yzwy, r2.xyzx
					add r1.yzw, v4.xxyz, -cb3[25].xxyz
					dp3 r1.y, r1.yzwy, r1.yzwy
					sqrt r1.y, r1.y
					add r1.y, -r0.w, r1.y
					mad r0.w, cb3[25].w, r1.y, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.y, cb5[0].x, l(1.000000)
					if_nz r1.y
					  eq r1.z, cb5[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb5[2].xyzx
					  mad r2.xyz, cb5[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb5[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb5[4].xyzx
					  movc r2.xyz, r1.zzzz, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r1.z, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.w, r1.z
					  sample r2.xyzw, r2.xzwx, t6.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.z, r2.xyzw, cb2[46].xyzw
					div r2.xy, v6.xyxx, v6.wwww
					sample r2.xyzw, r2.xyxx, t5.xyzw, s1
					add_sat r0.w, r0.w, r2.x
					min r1.z, r0.w, r1.z
					movc r0.w, r1.y, r1.z, r0.w
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// SV_InstanceID            0   x           9     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s4
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s5
					sample r2.xyzw, r2.zwzz, t3.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					add r1.yzw, -v4.xxyz, cb1[4].xxyz
					mov r2.x, cb4[9].z
					mov r2.y, cb4[10].z
					mov r2.z, cb4[11].z
					dp3 r0.w, r1.yzwy, r2.xyzx
					add r1.yzw, v4.xxyz, -cb3[25].xxyz
					dp3 r1.y, r1.yzwy, r1.yzwy
					sqrt r1.y, r1.y
					add r1.y, -r0.w, r1.y
					mad r0.w, cb3[25].w, r1.y, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.y, cb5[0].x, l(1.000000)
					if_nz r1.y
					  eq r1.z, cb5[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb5[2].xyzx
					  mad r2.xyz, cb5[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb5[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb5[4].xyzx
					  movc r2.xyz, r1.zzzz, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r1.z, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.w, r1.z
					  sample r2.xyzw, r2.xzwx, t6.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.z, r2.xyzw, cb2[46].xyzw
					div r2.xy, v7.xyxx, v7.wwww
					sample r2.xyzw, r2.xyxx, t5.xyzw, s1
					add_sat r0.w, r0.w, r2.x
					min r1.z, r0.w, r1.z
					movc r0.w, r1.y, r1.z, r0.w
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					if_nz r1.y
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb5[2].xxyz
					  mad r1.yzw, cb5[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb5[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb5[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r3.yzw, r1.yyzw, cb5[5].xxyz
					  mul r0.w, r3.y, l(0.250000)
					  mul r1.y, cb5[0].z, l(0.500000)
					  mad r1.z, -cb5[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r3.x, r1.z, r0.w
					  sample r4.xyzw, r3.xzwx, t6.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r5.xyzw, r1.yzwy, t6.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r3.xyzw, r1.yzwy, t6.xyzw, s0
					  mov r6.xyz, v3.xyzx
					  mov r6.w, l(1.000000)
					  dp4 r4.x, r4.xyzw, r6.xyzw
					  dp4 r4.y, r5.xyzw, r6.xyzw
					  dp4 r4.z, r3.xyzw, r6.xyzw
					else 
					  mov r3.xyz, v3.xyzx
					  mov r3.w, l(1.000000)
					  dp4 r4.x, cb2[39].xyzw, r3.xyzw
					  dp4 r4.y, cb2[40].xyzw, r3.xyzw
					  dp4 r4.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r1.yzw, r4.xxyz, v6.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.w, v3.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r2.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r1.yzwy
					mad r0.xyz, r2.xyzx, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 8   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s6
					sample r4.xyzw, r2.zwzz, t1.xyzw, s6
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s7
					sample r5.xyzw, r3.zwzz, t2.xyzw, s7
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s8
					sample r6.xyzw, r4.zwzz, t3.xyzw, s8
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s9
					sample r7.xyzw, r5.zwzz, t4.xyzw, s9
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s2
					sample r2.xyzw, r2.zwzz, t5.xyzw, s2
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s3
					sample r3.xyzw, r3.zwzz, t6.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s4
					sample r3.xyzw, r4.zwzz, t7.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s5
					sample r3.xyzw, r5.zwzz, t8.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.wwww, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v3.wwww, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v5.wwww, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  mov r2.y, v3.w
					  mov r2.z, v4.w
					  mov r2.w, v5.w
					  movc r1.yzw, r0.wwww, r1.yyzw, r2.yyzw
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.y
					  sample r2.xyzw, r2.xzwx, t9.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r1.y, r2.xyzx, r2.xyzx
					rsq r1.y, r1.y
					mul r1.yzw, r1.yyyy, r2.xxyz
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					dp3 r0.w, r1.yzwy, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 8   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s6
					sample r4.xyzw, r2.zwzz, t1.xyzw, s6
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s7
					sample r5.xyzw, r3.zwzz, t2.xyzw, s7
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s8
					sample r6.xyzw, r4.zwzz, t3.xyzw, s8
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s9
					sample r7.xyzw, r5.zwzz, t4.xyzw, s9
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s2
					sample r2.xyzw, r2.zwzz, t5.xyzw, s2
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s3
					sample r3.xyzw, r3.zwzz, t6.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s4
					sample r3.xyzw, r4.zwzz, t7.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s5
					sample r3.xyzw, r5.zwzz, t8.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r1.y, cb2[0].y, l(1.000000)
					  mul r2.xyz, v4.wwww, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v3.wwww, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v5.wwww, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  mov r3.y, v3.w
					  mov r3.z, v4.w
					  mov r3.w, v5.w
					  movc r1.yzw, r1.yyyy, r2.xxyz, r3.yyzw
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r1.y, r2.y, l(0.250000), l(0.750000)
					  mad r1.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.z, r1.y
					  sample r2.xyzw, r2.xzwx, t9.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r2.xyzw, cb1[46].xyzw
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r1.z, r2.xyzx, r2.xyzx
					rsq r1.z, r1.z
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r1.yzw, r1.yyyy, cb0[2].xxyz
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mul r0.w, r3.y, l(0.250000)
					  mul r3.y, cb2[0].z, l(0.500000)
					  mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r3.y
					  min r3.x, r4.x, r0.w
					  sample r4.xyzw, r3.xzwx, t9.xyzw, s0
					  add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r5.xyzw, r5.xyzx, t9.xyzw, s0
					  add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r3.xyzw, r3.xyzx, t9.xyzw, s0
					  mov r2.w, l(1.000000)
					  dp4 r4.x, r4.xyzw, r2.xyzw
					  dp4 r4.y, r5.xyzw, r2.xyzw
					  dp4 r4.z, r3.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r4.x, cb1[39].xyzw, r2.xyzw
					  dp4 r4.y, cb1[40].xyzw, r2.xyzw
					  dp4 r4.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r3.xyz, r4.xyzx, v7.xyzx
					max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.w, r2.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r1.yzw, r0.xxyz, r1.yyzw
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, r1.yzwy, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					// TEXCOORD                 8   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s7
					sample r4.xyzw, r2.zwzz, t1.xyzw, s7
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s8
					sample r5.xyzw, r3.zwzz, t2.xyzw, s8
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s9
					sample r6.xyzw, r4.zwzz, t3.xyzw, s9
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s10
					sample r7.xyzw, r5.zwzz, t4.xyzw, s10
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s3
					sample r2.xyzw, r2.zwzz, t5.xyzw, s3
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s4
					sample r3.xyzw, r3.zwzz, t6.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s5
					sample r3.xyzw, r4.zwzz, t7.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s6
					sample r3.xyzw, r5.zwzz, t8.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					mov r1.y, v3.w
					mov r1.z, v4.w
					mov r1.w, v5.w
					add r2.xyz, -r1.yzwy, cb1[4].xyzx
					mov r3.x, cb4[9].z
					mov r3.y, cb4[10].z
					mov r3.z, cb4[11].z
					dp3 r0.w, r2.xyzx, r3.xyzx
					add r2.xyz, r1.yzwy, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r0.w, r2.x
					mad r0.w, cb3[25].w, r2.x, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r1.yzw, r2.yyyy, r3.xxyz, r1.yyzw
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r3.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r3.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.z, r1.y
					  sample r3.xyzw, r3.xzwx, t10.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r3.xyzw, cb2[46].xyzw
					div r1.zw, v7.xxxy, v7.wwww
					sample r3.xyzw, r1.zwzz, t9.xyzw, s1
					add_sat r0.w, r0.w, r3.x
					min r1.y, r0.w, r1.y
					movc r0.w, r2.x, r1.y, r0.w
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r1.y, r2.xyzx, r2.xyzx
					rsq r1.y, r1.y
					mul r1.yzw, r1.yyyy, r2.xxyz
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					dp3 r0.w, r1.yzwy, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					// TEXCOORD                 8   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v7.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s7
					sample r4.xyzw, r2.zwzz, t1.xyzw, s7
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s8
					sample r5.xyzw, r3.zwzz, t2.xyzw, s8
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s9
					sample r6.xyzw, r4.zwzz, t3.xyzw, s9
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s10
					sample r7.xyzw, r5.zwzz, t4.xyzw, s10
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s3
					sample r2.xyzw, r2.zwzz, t5.xyzw, s3
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s4
					sample r3.xyzw, r3.zwzz, t6.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s5
					sample r3.xyzw, r4.zwzz, t7.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s6
					sample r3.xyzw, r5.zwzz, t8.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					mov r1.y, v3.w
					mov r1.z, v4.w
					mov r1.w, v5.w
					add r2.xyz, -r1.yzwy, cb1[4].xyzx
					mov r3.x, cb4[9].z
					mov r3.y, cb4[10].z
					mov r3.z, cb4[11].z
					dp3 r0.w, r2.xyzx, r3.xyzx
					add r2.xyz, r1.yzwy, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r0.w, r2.x
					mad r0.w, cb3[25].w, r2.x, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r3.xxyz, r1.yyzw
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r3.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r3.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.z, r2.y
					  sample r3.xyzw, r3.xzwx, t10.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r3.xyzw, cb2[46].xyzw
					div r2.zw, v8.xxxy, v8.wwww
					sample r3.xyzw, r2.zwzz, t9.xyzw, s1
					add_sat r0.w, r0.w, r3.x
					min r2.y, r0.w, r2.y
					movc r0.w, r2.x, r2.y, r0.w
					dp3 r3.x, v3.xyzx, r6.xyzx
					dp3 r3.y, v4.xyzx, r6.xyzx
					dp3 r3.z, v5.xyzx, r6.xyzx
					dp3 r2.y, r3.xyzx, r3.xyzx
					rsq r2.y, r2.y
					mul r3.xyz, r2.yyyy, r3.xyzx
					mul r2.yzw, r0.wwww, cb0[2].xxyz
					if_nz r2.x
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r1.yzw, r0.wwww, r4.xxyz, r1.yyzw
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r4.yzw, r1.yyzw, cb5[5].xxyz
					  mul r0.w, r4.y, l(0.250000)
					  mul r1.y, cb5[0].z, l(0.500000)
					  mad r1.z, -cb5[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r4.x, r1.z, r0.w
					  sample r5.xyzw, r4.xzwx, t10.xyzw, s0
					  add r1.yzw, r4.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r6.xyzw, r1.yzwy, t10.xyzw, s0
					  add r1.yzw, r4.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r4.xyzw, r1.yzwy, t10.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb2[39].xyzw, r3.xyzw
					  dp4 r5.y, cb2[40].xyzw, r3.xyzw
					  dp4 r5.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r1.yzw, r5.xxyz, v7.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.w, r3.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r2.xyz, r0.xyzx, r2.yzwy
					mul r0.xyz, r0.xyzx, r1.yzwy
					mad r0.xyz, r2.xyzx, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 8   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s6
					sample r4.xyzw, r2.zwzz, t1.xyzw, s6
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s7
					sample r5.xyzw, r3.zwzz, t2.xyzw, s7
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s8
					sample r6.xyzw, r4.zwzz, t3.xyzw, s8
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s9
					sample r7.xyzw, r5.zwzz, t4.xyzw, s9
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s2
					sample r2.xyzw, r2.zwzz, t5.xyzw, s2
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s3
					sample r3.xyzw, r3.zwzz, t6.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s4
					sample r3.xyzw, r4.zwzz, t7.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s5
					sample r3.xyzw, r5.zwzz, t8.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.wwww, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v3.wwww, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v5.wwww, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  mov r2.y, v3.w
					  mov r2.z, v4.w
					  mov r2.w, v5.w
					  movc r1.yzw, r0.wwww, r1.yyzw, r2.yyzw
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.y
					  sample r2.xyzw, r2.xzwx, t9.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r1.y, r2.xyzx, r2.xyzx
					rsq r1.y, r1.y
					mul r1.yzw, r1.yyyy, r2.xxyz
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					dp3 r0.w, r1.yzwy, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 8   xyzw        8     NONE   float       
					// SV_InstanceID            0   x           9     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s6
					sample r4.xyzw, r2.zwzz, t1.xyzw, s6
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s7
					sample r5.xyzw, r3.zwzz, t2.xyzw, s7
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s8
					sample r6.xyzw, r4.zwzz, t3.xyzw, s8
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s9
					sample r7.xyzw, r5.zwzz, t4.xyzw, s9
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s2
					sample r2.xyzw, r2.zwzz, t5.xyzw, s2
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s3
					sample r3.xyzw, r3.zwzz, t6.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s4
					sample r3.xyzw, r4.zwzz, t7.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s5
					sample r3.xyzw, r5.zwzz, t8.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r1.y, cb2[0].y, l(1.000000)
					  mul r2.xyz, v4.wwww, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v3.wwww, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v5.wwww, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  mov r3.y, v3.w
					  mov r3.z, v4.w
					  mov r3.w, v5.w
					  movc r1.yzw, r1.yyyy, r2.xxyz, r3.yyzw
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r1.y, r2.y, l(0.250000), l(0.750000)
					  mad r1.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.z, r1.y
					  sample r2.xyzw, r2.xzwx, t9.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r2.xyzw, cb1[46].xyzw
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r1.z, r2.xyzx, r2.xyzx
					rsq r1.z, r1.z
					mul r2.xyz, r1.zzzz, r2.xyzx
					mul r1.yzw, r1.yyyy, cb0[2].xxyz
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  mov r4.y, v3.w
					  mov r4.z, v4.w
					  mov r4.w, v5.w
					  movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mul r0.w, r3.y, l(0.250000)
					  mul r3.y, cb2[0].z, l(0.500000)
					  mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r3.y
					  min r3.x, r4.x, r0.w
					  sample r4.xyzw, r3.xzwx, t9.xyzw, s0
					  add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r5.xyzw, r5.xyzx, t9.xyzw, s0
					  add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r3.xyzw, r3.xyzx, t9.xyzw, s0
					  mov r2.w, l(1.000000)
					  dp4 r4.x, r4.xyzw, r2.xyzw
					  dp4 r4.y, r5.xyzw, r2.xyzw
					  dp4 r4.z, r3.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r4.x, cb1[39].xyzw, r2.xyzw
					  dp4 r4.y, cb1[40].xyzw, r2.xyzw
					  dp4 r4.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r3.xyz, r4.xyzx, v7.xyzx
					max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.w, r2.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r1.yzw, r0.xxyz, r1.yyzw
					mul r0.xyz, r0.xyzx, r3.xyzx
					mad r0.xyz, r1.yzwy, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 7   xyzw        7     NONE   float   xy w
					// TEXCOORD                 8   xyzw        8     NONE   float       
					// SV_InstanceID            0   x           9     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s7
					sample r4.xyzw, r2.zwzz, t1.xyzw, s7
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s8
					sample r5.xyzw, r3.zwzz, t2.xyzw, s8
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s9
					sample r6.xyzw, r4.zwzz, t3.xyzw, s9
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s10
					sample r7.xyzw, r5.zwzz, t4.xyzw, s10
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s3
					sample r2.xyzw, r2.zwzz, t5.xyzw, s3
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s4
					sample r3.xyzw, r3.zwzz, t6.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s5
					sample r3.xyzw, r4.zwzz, t7.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s6
					sample r3.xyzw, r5.zwzz, t8.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					mov r1.y, v3.w
					mov r1.z, v4.w
					mov r1.w, v5.w
					add r2.xyz, -r1.yzwy, cb1[4].xyzx
					mov r3.x, cb4[9].z
					mov r3.y, cb4[10].z
					mov r3.z, cb4[11].z
					dp3 r0.w, r2.xyzx, r3.xyzx
					add r2.xyz, r1.yzwy, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r0.w, r2.x
					mad r0.w, cb3[25].w, r2.x, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r1.yzw, r2.yyyy, r3.xxyz, r1.yyzw
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r3.yzw, r1.yyzw, cb5[5].xxyz
					  mad r1.y, r3.y, l(0.250000), l(0.750000)
					  mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.z, r1.y
					  sample r3.xyzw, r3.xzwx, t10.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r3.xyzw, cb2[46].xyzw
					div r1.zw, v7.xxxy, v7.wwww
					sample r3.xyzw, r1.zwzz, t9.xyzw, s1
					add_sat r0.w, r0.w, r3.x
					min r1.y, r0.w, r1.y
					movc r0.w, r2.x, r1.y, r0.w
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r1.y, r2.xyzx, r2.xyzx
					rsq r1.y, r1.y
					mul r1.yzw, r1.yyyy, r2.xxyz
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					dp3 r0.w, r1.yzwy, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        8     NONE   float   xy w
					// TEXCOORD                 8   xyzw        9     NONE   float       
					// SV_InstanceID            0   x          10     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v7.xyz
					dcl_input_ps linear v8.xyw
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s7
					sample r4.xyzw, r2.zwzz, t1.xyzw, s7
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s8
					sample r5.xyzw, r3.zwzz, t2.xyzw, s8
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s9
					sample r6.xyzw, r4.zwzz, t3.xyzw, s9
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s10
					sample r7.xyzw, r5.zwzz, t4.xyzw, s10
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s3
					sample r2.xyzw, r2.zwzz, t5.xyzw, s3
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s4
					sample r3.xyzw, r3.zwzz, t6.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s5
					sample r3.xyzw, r4.zwzz, t7.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s6
					sample r3.xyzw, r5.zwzz, t8.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					mov r1.y, v3.w
					mov r1.z, v4.w
					mov r1.w, v5.w
					add r2.xyz, -r1.yzwy, cb1[4].xyzx
					mov r3.x, cb4[9].z
					mov r3.y, cb4[10].z
					mov r3.z, cb4[11].z
					dp3 r0.w, r2.xyzx, r3.xyzx
					add r2.xyz, r1.yzwy, -cb3[25].xyzx
					dp3 r2.x, r2.xyzx, r2.xyzx
					sqrt r2.x, r2.x
					add r2.x, -r0.w, r2.x
					mad r0.w, cb3[25].w, r2.x, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r2.x, cb5[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.y, cb5[0].y, l(1.000000)
					  mul r3.xyz, v4.wwww, cb5[2].xyzx
					  mad r3.xyz, cb5[1].xyzx, v3.wwww, r3.xyzx
					  mad r3.xyz, cb5[3].xyzx, v5.wwww, r3.xyzx
					  add r3.xyz, r3.xyzx, cb5[4].xyzx
					  movc r2.yzw, r2.yyyy, r3.xxyz, r1.yyzw
					  add r2.yzw, r2.yyzw, -cb5[6].xxyz
					  mul r3.yzw, r2.yyzw, cb5[5].xxyz
					  mad r2.y, r3.y, l(0.250000), l(0.750000)
					  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
					  max r3.x, r2.z, r2.y
					  sample r3.xyzw, r3.xzwx, t10.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.y, r3.xyzw, cb2[46].xyzw
					div r2.zw, v8.xxxy, v8.wwww
					sample r3.xyzw, r2.zwzz, t9.xyzw, s1
					add_sat r0.w, r0.w, r3.x
					min r2.y, r0.w, r2.y
					movc r0.w, r2.x, r2.y, r0.w
					dp3 r3.x, v3.xyzx, r6.xyzx
					dp3 r3.y, v4.xyzx, r6.xyzx
					dp3 r3.z, v5.xyzx, r6.xyzx
					dp3 r2.y, r3.xyzx, r3.xyzx
					rsq r2.y, r2.y
					mul r3.xyz, r2.yyyy, r3.xyzx
					mul r2.yzw, r0.wwww, cb0[2].xxyz
					if_nz r2.x
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r4.xyz, v4.wwww, cb5[2].xyzx
					  mad r4.xyz, cb5[1].xyzx, v3.wwww, r4.xyzx
					  mad r4.xyz, cb5[3].xyzx, v5.wwww, r4.xyzx
					  add r4.xyz, r4.xyzx, cb5[4].xyzx
					  movc r1.yzw, r0.wwww, r4.xxyz, r1.yyzw
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r4.yzw, r1.yyzw, cb5[5].xxyz
					  mul r0.w, r4.y, l(0.250000)
					  mul r1.y, cb5[0].z, l(0.500000)
					  mad r1.z, -cb5[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r4.x, r1.z, r0.w
					  sample r5.xyzw, r4.xzwx, t10.xyzw, s0
					  add r1.yzw, r4.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r6.xyzw, r1.yzwy, t10.xyzw, s0
					  add r1.yzw, r4.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r4.xyzw, r1.yzwy, t10.xyzw, s0
					  mov r3.w, l(1.000000)
					  dp4 r5.x, r5.xyzw, r3.xyzw
					  dp4 r5.y, r6.xyzw, r3.xyzw
					  dp4 r5.z, r4.xyzw, r3.xyzw
					else 
					  mov r3.w, l(1.000000)
					  dp4 r5.x, cb2[39].xyzw, r3.xyzw
					  dp4 r5.y, cb2[40].xyzw, r3.xyzw
					  dp4 r5.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r1.yzw, r5.xxyz, v7.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.w, r3.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r2.xyz, r0.xyzx, r2.yzwy
					mul r0.xyz, r0.xyzx, r1.yzwy
					mad r0.xyz, r2.xyzx, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			Tags { "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
			Blend One One, One One
			ZWrite Off
			GpuProgramID 93729
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o6.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					mul r0.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r0.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xyxx
					mul r0.yzw, r0.yyyy, cb1[1].yyzx
					mad r0.xyz, cb1[0].yzxy, r0.xxxx, r0.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r1.zxyz, r0.yzxy, -r2.xyzx
					mul r2.xyz, r2.xyzx, -cb1[9].wwww
					mov o3.y, r2.x
					mov o3.x, r0.z
					mov o3.z, r1.y
					mov o4.x, r0.x
					mov o5.x, r0.y
					mov o4.z, r1.z
					mov o5.z, r1.x
					mov o4.y, r2.y
					mov o5.y, r2.z
					mad o7.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o6.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mul r0.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r0.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xyxx
					mul r0.yzw, r0.yyyy, cb1[1].yyzx
					mad r0.xyz, cb1[0].yzxy, r0.xxxx, r0.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r1.zxyz, r0.yzxy, -r2.xyzx
					mul r2.xyz, r2.xyzx, -cb1[9].wwww
					mov o3.y, r2.x
					mov o3.x, r0.z
					mov o3.z, r1.y
					mov o4.x, r0.x
					mov o5.x, r0.y
					mov o4.z, r1.z
					mov o5.z, r1.x
					mov o4.y, r2.y
					mov o5.y, r2.z
					mad o7.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o6.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					mul r0.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r0.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xyxx
					mul r0.yzw, r0.yyyy, cb1[1].yyzx
					mad r0.xyz, cb1[0].yzxy, r0.xxxx, r0.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r1.zxyz, r0.yzxy, -r2.xyzx
					mul r2.xyz, r2.xyzx, -cb1[9].wwww
					mov o3.y, r2.x
					mov o3.x, r0.z
					mov o3.z, r1.y
					mov o4.x, r0.x
					mov o5.x, r0.y
					mov o4.z, r1.z
					mov o5.z, r1.x
					mov o4.y, r2.y
					mov o5.y, r2.z
					mad o7.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o6.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					mul r0.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r0.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xyxx
					mul r0.yzw, r0.yyyy, cb1[1].yyzx
					mad r0.xyz, cb1[0].yzxy, r0.xxxx, r0.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r1.zxyz, r0.yzxy, -r2.xyzx
					mul r2.xyz, r2.xyzx, -cb1[9].wwww
					mov o3.y, r2.x
					mov o3.x, r0.z
					mov o3.z, r1.y
					mov o4.x, r0.x
					mov o5.x, r0.y
					mov o4.z, r1.z
					mov o5.z, r1.x
					mov o4.y, r2.y
					mov o5.y, r2.z
					mad o7.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xy
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o6.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					mul r0.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r0.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xyxx
					mul r0.yzw, r0.yyyy, cb1[1].yyzx
					mad r0.xyz, cb1[0].yzxy, r0.xxxx, r0.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r1.zxyz, r0.yzxy, -r2.xyzx
					mul r2.xyz, r2.xyzx, -cb1[9].wwww
					mov o3.y, r2.x
					mov o3.x, r0.z
					mov o3.z, r1.y
					mov o4.x, r0.x
					mov o5.x, r0.y
					mov o4.z, r1.z
					mov o5.z, r1.x
					mov o4.y, r2.y
					mov o5.y, r2.z
					mad o7.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v4.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r2.x, r0.w, l(0.001000)
					div r1.xyzw, r1.xyzw, r2.xxxx
					mul r1.xyzw, r1.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s4
					sample r3.xyzw, r3.zwzz, t2.xyzw, s4
					add r3.xyz, r3.xyzx, r4.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mad r2.xyz, r1.xxxx, r2.xyzx, r3.xyzx
					mul r3.xyzw, v2.xyxy, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t3.xyzw, s5
					sample r3.xyzw, r3.zwzz, t3.xyzw, s5
					add r3.xyz, r3.xyzx, r4.xyzx
					mad r1.xyz, r1.zzzz, r3.xyzx, r2.xyzx
					mul r2.xyzw, v2.zwzw, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
					mul r2.xyz, v4.yyyy, cb0[5].xyzx
					mad r2.xyz, cb0[4].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb0[6].xyzx, v4.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[7].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v4.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v4.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v4.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v4.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t6.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r2.xxxx, t5.xyzw, s1
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r0.x, v3.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.y
					  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v4.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v5.xyxx, t0.xyzw, s3
					dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r2.x, r0.w, l(0.001000)
					div r1.xyzw, r1.xyzw, r2.xxxx
					mul r1.xyzw, r1.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s4
					sample r2.xyzw, r2.zwzz, t1.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s5
					sample r3.xyzw, r3.zwzz, t2.xyzw, s5
					add r3.xyz, r3.xyzx, r4.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mad r2.xyz, r1.xxxx, r2.xyzx, r3.xyzx
					mul r3.xyzw, v2.xyxy, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t3.xyzw, s6
					sample r3.xyzw, r3.zwzz, t3.xyzw, s6
					add r3.xyz, r3.xyzx, r4.xyzx
					mad r1.xyz, r1.zzzz, r3.xyzx, r2.xyzx
					mul r2.xyzw, v2.zwzw, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s7
					sample r2.xyzw, r2.zwzz, t4.xyzw, s7
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
					mul r2.xyzw, v4.yyyy, cb0[5].xyzw
					mad r2.xyzw, cb0[4].xyzw, v4.xxxx, r2.xyzw
					mad r2.xyzw, cb0[6].xyzw, v4.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[7].xyzw
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v4.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v4.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v4.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v4.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r3.y
					  sample r3.xyzw, r3.xzwx, t7.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					lt r3.x, l(0.000000), r2.z
					and r3.x, r3.x, l(0x3f800000)
					div r3.yz, r2.xxyx, r2.wwww
					add r3.yz, r3.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r4.xyzw, r3.yzyy, t5.xyzw, s1
					mul r2.w, r3.x, r4.w
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r3.xyzw, r2.xxxx, t6.xyzw, s2
					mul r2.x, r2.w, r3.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r0.x, v3.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v4.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v5.xyxx, t0.xyzw, s3
					dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r2.x, r0.w, l(0.001000)
					div r1.xyzw, r1.xyzw, r2.xxxx
					mul r1.xyzw, r1.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s4
					sample r2.xyzw, r2.zwzz, t1.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s5
					sample r3.xyzw, r3.zwzz, t2.xyzw, s5
					add r3.xyz, r3.xyzx, r4.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mad r2.xyz, r1.xxxx, r2.xyzx, r3.xyzx
					mul r3.xyzw, v2.xyxy, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t3.xyzw, s6
					sample r3.xyzw, r3.zwzz, t3.xyzw, s6
					add r3.xyz, r3.xyzx, r4.xyzx
					mad r1.xyz, r1.zzzz, r3.xyzx, r2.xyzx
					mul r2.xyzw, v2.zwzw, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s7
					sample r2.xyzw, r2.zwzz, t4.xyzw, s7
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
					mul r2.xyz, v4.yyyy, cb0[5].xyzx
					mad r2.xyz, cb0[4].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb0[6].xyzx, v4.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[7].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v4.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v4.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v4.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v4.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t7.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					dp3 r2.w, r2.xyzx, r2.xyzx
					sample r3.xyzw, r2.wwww, t5.xyzw, s2
					sample r2.xyzw, r2.xyzx, t6.xyzw, s1
					mul r2.x, r2.w, r3.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r0.x, v3.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s4
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s5
					sample r2.xyzw, r2.zwzz, t3.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					mul r1.yz, v4.yyyy, cb0[5].xxyx
					mad r1.yz, cb0[4].xxyx, v4.xxxx, r1.yyzy
					mad r1.yz, cb0[6].xxyx, v4.zzzz, r1.yyzy
					add r1.yz, r1.yyzy, cb0[7].xxyx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.w
					  sample r2.xyzw, r2.xzwx, t6.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					sample r2.xyzw, r1.yzyy, t5.xyzw, s1
					mul r0.w, r0.w, r2.w
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xy
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v6.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v7.xyxx, t0.xyzw, s2
					dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r2.x, r0.w, l(0.001000)
					div r1.xyzw, r1.xyzw, r2.xxxx
					mul r1.xyzw, r1.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s7
					sample r4.xyzw, r2.zwzz, t1.xyzw, s7
					add r3.xyz, r3.xywx, r4.xywx
					mul r4.xyzw, v1.zwzw, cb0[9].xxyy
					sample r5.xyzw, r4.xyxx, t2.xyzw, s8
					sample r6.xyzw, r4.zwzz, t2.xyzw, s8
					add r5.xyz, r5.xywx, r6.xywx
					mul r5.xyz, r1.yyyy, r5.xyzx
					mad r3.xyz, r1.xxxx, r3.xyzx, r5.xyzx
					mul r5.xyzw, v2.xyxy, cb0[9].xxyy
					sample r6.xyzw, r5.xyxx, t3.xyzw, s9
					sample r7.xyzw, r5.zwzz, t3.xyzw, s9
					add r6.xyz, r6.xywx, r7.xywx
					mad r3.xyz, r1.zzzz, r6.xyzx, r3.xyzx
					mul r6.xyzw, v2.zwzw, cb0[9].xxyy
					sample r7.xyzw, r6.xyxx, t4.xyzw, s10
					sample r8.xyzw, r6.zwzz, t4.xyzw, s10
					add r7.xyz, r7.xywx, r8.xywx
					mad r3.yzw, r1.wwww, r7.xxyz, r3.xxyz
					mul r3.x, r3.w, r3.y
					mad r3.xy, r3.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					sample r7.xyzw, r2.xyxx, t5.xyzw, s3
					sample r2.xyzw, r2.zwzz, t5.xyzw, s3
					add r2.xyz, r2.xyzx, r7.xyzx
					sample r7.xyzw, r4.xyxx, t6.xyzw, s4
					sample r4.xyzw, r4.zwzz, t6.xyzw, s4
					add r4.xyz, r4.xyzx, r7.xyzx
					mul r4.xyz, r1.yyyy, r4.xyzx
					mad r2.xyz, r1.xxxx, r2.xyzx, r4.xyzx
					sample r4.xyzw, r5.xyxx, t7.xyzw, s5
					sample r5.xyzw, r5.zwzz, t7.xyzw, s5
					add r4.xyz, r4.xyzx, r5.xyzx
					mad r1.xyz, r1.zzzz, r4.xyzx, r2.xyzx
					sample r2.xyzw, r6.xyxx, t8.xyzw, s6
					sample r4.xyzw, r6.zwzz, t8.xyzw, s6
					add r2.xyz, r2.xyzx, r4.xyzx
					mad r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
					mul r2.xyz, v6.yyyy, cb0[5].xyzx
					mad r2.xyz, cb0[4].xyzx, v6.xxxx, r2.xyzx
					mad r2.xyz, cb0[6].xyzx, v6.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[7].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t10.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r2.xxxx, t9.xyzw, s1
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v3.xyzx, r3.xyzx
					dp3 r2.y, v4.xyzx, r3.xyzx
					dp3 r2.z, v5.xyzx, r3.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r1.xyz, r1.xyzx, r3.xyzx
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xy
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v7.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s6
					sample r4.xyzw, r2.zwzz, t1.xyzw, s6
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s7
					sample r5.xyzw, r3.zwzz, t2.xyzw, s7
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s8
					sample r6.xyzw, r4.zwzz, t3.xyzw, s8
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s9
					sample r7.xyzw, r5.zwzz, t4.xyzw, s9
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s2
					sample r2.xyzw, r2.zwzz, t5.xyzw, s2
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s3
					sample r3.xyzw, r3.zwzz, t6.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s4
					sample r3.xyzw, r4.zwzz, t7.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s5
					sample r3.xyzw, r5.zwzz, t8.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v6.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v6.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v6.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v6.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.y
					  sample r2.xyzw, r2.xzwx, t9.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r1.y, r2.xyzx, r2.xyzx
					rsq r1.y, r1.y
					mul r1.yzw, r1.yyyy, r2.xxyz
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					dp3 r0.w, r1.yzwy, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_sampler s11, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture2d (float,float,float,float) t10
					dcl_resource_texture3d (float,float,float,float) t11
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xy
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v6.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v7.xyxx, t0.xyzw, s3
					dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r2.x, r0.w, l(0.001000)
					div r1.xyzw, r1.xyzw, r2.xxxx
					mul r1.xyzw, r1.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s8
					sample r4.xyzw, r2.zwzz, t1.xyzw, s8
					add r3.xyz, r3.xywx, r4.xywx
					mul r4.xyzw, v1.zwzw, cb0[9].xxyy
					sample r5.xyzw, r4.xyxx, t2.xyzw, s9
					sample r6.xyzw, r4.zwzz, t2.xyzw, s9
					add r5.xyz, r5.xywx, r6.xywx
					mul r5.xyz, r1.yyyy, r5.xyzx
					mad r3.xyz, r1.xxxx, r3.xyzx, r5.xyzx
					mul r5.xyzw, v2.xyxy, cb0[9].xxyy
					sample r6.xyzw, r5.xyxx, t3.xyzw, s10
					sample r7.xyzw, r5.zwzz, t3.xyzw, s10
					add r6.xyz, r6.xywx, r7.xywx
					mad r3.xyz, r1.zzzz, r6.xyzx, r3.xyzx
					mul r6.xyzw, v2.zwzw, cb0[9].xxyy
					sample r7.xyzw, r6.xyxx, t4.xyzw, s11
					sample r8.xyzw, r6.zwzz, t4.xyzw, s11
					add r7.xyz, r7.xywx, r8.xywx
					mad r3.yzw, r1.wwww, r7.xxyz, r3.xxyz
					mul r3.x, r3.w, r3.y
					mad r3.xy, r3.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					sample r7.xyzw, r2.xyxx, t5.xyzw, s4
					sample r2.xyzw, r2.zwzz, t5.xyzw, s4
					add r2.xyz, r2.xyzx, r7.xyzx
					sample r7.xyzw, r4.xyxx, t6.xyzw, s5
					sample r4.xyzw, r4.zwzz, t6.xyzw, s5
					add r4.xyz, r4.xyzx, r7.xyzx
					mul r4.xyz, r1.yyyy, r4.xyzx
					mad r2.xyz, r1.xxxx, r2.xyzx, r4.xyzx
					sample r4.xyzw, r5.xyxx, t7.xyzw, s6
					sample r5.xyzw, r5.zwzz, t7.xyzw, s6
					add r4.xyz, r4.xyzx, r5.xyzx
					mad r1.xyz, r1.zzzz, r4.xyzx, r2.xyzx
					sample r2.xyzw, r6.xyxx, t8.xyzw, s7
					sample r4.xyzw, r6.zwzz, t8.xyzw, s7
					add r2.xyz, r2.xyzx, r4.xyzx
					mad r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
					mul r2.xyzw, v6.yyyy, cb0[5].xyzw
					mad r2.xyzw, cb0[4].xyzw, v6.xxxx, r2.xyzw
					mad r2.xyzw, cb0[6].xyzw, v6.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[7].xyzw
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r3.w
					  sample r4.xyzw, r4.xzwx, t11.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					lt r3.w, l(0.000000), r2.z
					and r3.w, r3.w, l(0x3f800000)
					div r4.xy, r2.xyxx, r2.wwww
					add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r4.xyzw, r4.xyxx, t9.xyzw, s1
					mul r2.w, r3.w, r4.w
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r4.xyzw, r2.xxxx, t10.xyzw, s2
					mul r2.x, r2.w, r4.x
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v3.xyzx, r3.xyzx
					dp3 r2.y, v4.xyzx, r3.xyzx
					dp3 r2.z, v5.xyzx, r3.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r1.xyz, r1.xyzx, r3.xyzx
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_sampler s11, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texturecube (float,float,float,float) t10
					dcl_resource_texture3d (float,float,float,float) t11
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xy
					dcl_output o0.xyzw
					dcl_temps 9
					add r0.xyz, -v6.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v7.xyxx, t0.xyzw, s3
					dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r2.x, r0.w, l(0.001000)
					div r1.xyzw, r1.xyzw, r2.xxxx
					mul r1.xyzw, r1.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s8
					sample r4.xyzw, r2.zwzz, t1.xyzw, s8
					add r3.xyz, r3.xywx, r4.xywx
					mul r4.xyzw, v1.zwzw, cb0[9].xxyy
					sample r5.xyzw, r4.xyxx, t2.xyzw, s9
					sample r6.xyzw, r4.zwzz, t2.xyzw, s9
					add r5.xyz, r5.xywx, r6.xywx
					mul r5.xyz, r1.yyyy, r5.xyzx
					mad r3.xyz, r1.xxxx, r3.xyzx, r5.xyzx
					mul r5.xyzw, v2.xyxy, cb0[9].xxyy
					sample r6.xyzw, r5.xyxx, t3.xyzw, s10
					sample r7.xyzw, r5.zwzz, t3.xyzw, s10
					add r6.xyz, r6.xywx, r7.xywx
					mad r3.xyz, r1.zzzz, r6.xyzx, r3.xyzx
					mul r6.xyzw, v2.zwzw, cb0[9].xxyy
					sample r7.xyzw, r6.xyxx, t4.xyzw, s11
					sample r8.xyzw, r6.zwzz, t4.xyzw, s11
					add r7.xyz, r7.xywx, r8.xywx
					mad r3.yzw, r1.wwww, r7.xxyz, r3.xxyz
					mul r3.x, r3.w, r3.y
					mad r3.xy, r3.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r3.w, r3.xyxx, r3.xyxx
					min r3.w, r3.w, l(1.000000)
					add r3.w, -r3.w, l(1.000000)
					sqrt r3.z, r3.w
					sample r7.xyzw, r2.xyxx, t5.xyzw, s4
					sample r2.xyzw, r2.zwzz, t5.xyzw, s4
					add r2.xyz, r2.xyzx, r7.xyzx
					sample r7.xyzw, r4.xyxx, t6.xyzw, s5
					sample r4.xyzw, r4.zwzz, t6.xyzw, s5
					add r4.xyz, r4.xyzx, r7.xyzx
					mul r4.xyz, r1.yyyy, r4.xyzx
					mad r2.xyz, r1.xxxx, r2.xyzx, r4.xyzx
					sample r4.xyzw, r5.xyxx, t7.xyzw, s6
					sample r5.xyzw, r5.zwzz, t7.xyzw, s6
					add r4.xyz, r4.xyzx, r5.xyzx
					mad r1.xyz, r1.zzzz, r4.xyzx, r2.xyzx
					sample r2.xyzw, r6.xyxx, t8.xyzw, s7
					sample r4.xyzw, r6.zwzz, t8.xyzw, s7
					add r2.xyz, r2.xyzx, r4.xyzx
					mad r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
					mul r2.xyz, v6.yyyy, cb0[5].xyzx
					mad r2.xyz, cb0[4].xyzx, v6.xxxx, r2.xyzx
					mad r2.xyz, cb0[6].xyzx, v6.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[7].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb2[2].xyzx
					  mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb2[4].xyzx
					  movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb2[6].xyzx
					  mul r4.yzw, r4.xxyz, cb2[5].xxyz
					  mad r1.w, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r4.x, r1.w, r2.w
					  sample r4.xyzw, r4.xzwx, t11.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
					dp3 r2.w, r2.xyzx, r2.xyzx
					sample r4.xyzw, r2.wwww, t9.xyzw, s2
					sample r2.xyzw, r2.xyzx, t10.xyzw, s1
					mul r2.x, r2.w, r4.x
					mul r1.w, r1.w, r2.x
					dp3 r2.x, v3.xyzx, r3.xyzx
					dp3 r2.y, v4.xyzx, r3.xyzx
					dp3 r2.z, v5.xyzx, r3.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r3.xyz, r1.wwww, cb0[2].xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r1.xyz, r1.xyzx, r3.xyzx
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xy          7     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_sampler s10, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture2d (float,float,float,float) t9
					dcl_resource_texture3d (float,float,float,float) t10
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xy
					dcl_output o0.xyzw
					dcl_temps 8
					sample r0.xyzw, v7.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s7
					sample r4.xyzw, r2.zwzz, t1.xyzw, s7
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s8
					sample r5.xyzw, r3.zwzz, t2.xyzw, s8
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[9].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s9
					sample r6.xyzw, r4.zwzz, t3.xyzw, s9
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[9].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s10
					sample r7.xyzw, r5.zwzz, t4.xyzw, s10
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s3
					sample r2.xyzw, r2.zwzz, t5.xyzw, s3
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s4
					sample r3.xyzw, r3.zwzz, t6.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s5
					sample r3.xyzw, r4.zwzz, t7.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s6
					sample r3.xyzw, r5.zwzz, t8.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					mul r1.yz, v6.yyyy, cb0[5].xxyx
					mad r1.yz, cb0[4].xxyx, v6.xxxx, r1.yyzy
					mad r1.yz, cb0[6].xxyx, v6.zzzz, r1.yyzy
					add r1.yz, r1.yyzy, cb0[7].xxyx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v6.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v6.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v6.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v6.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.w
					  sample r2.xyzw, r2.xzwx, t10.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					sample r2.xyzw, r1.yzyy, t9.xyzw, s1
					mul r0.w, r0.w, r2.w
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r1.y, r2.xyzx, r2.xyzx
					rsq r1.y, r1.y
					mul r1.yzw, r1.yyyy, r2.xxyz
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					dp3 r0.w, r1.yzwy, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "PREPASS"
			Tags { "LIGHTMODE" = "PREPASSBASE" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
			GpuProgramID 136646
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mad o3.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					// SV_InstanceID            0   x           4     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_output o4.x
					dcl_temps 3
					iadd r0.x, v8.x, cb2[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb3[r0.x + 1].xyzw
					mad r1.xyzw, cb3[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb3[r0.x + 3].xyzw
					mad o2.xyz, cb3[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r2.wwww, r1.xyzw
					dp3 r1.x, v2.xyzx, cb3[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb3[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb3[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o1.xyz, r0.xxxx, r1.xyzx
					mad o3.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o4.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mov o3.w, r0.x
					mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
					mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
					mul r1.xyz, r0.wwww, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, r0.xxxx, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					dp3 r2.y, v2.xyzx, cb1[4].xyzx
					dp3 r2.z, v2.xyzx, cb1[5].xyzx
					dp3 r2.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb1[9].wwww
					mov o3.y, r3.x
					mov o3.x, r1.z
					mov o3.z, r2.y
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.z, r2.z
					mov o5.z, r2.x
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o4.y, r3.y
					mov o5.y, r3.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// SV_InstanceID            0   x           7     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.x
					dcl_temps 4
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad r0.yzw, cb4[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.y, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.x, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r2.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyxx
					mul r2.yzw, r2.yyyy, cb4[r0.x + 1].yyzx
					mad r2.xyz, cb4[r0.x + 0].yzxy, r2.xxxx, r2.yzwy
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb1[9].wwww
					mov o3.y, r3.x
					mov o3.z, r1.y
					mov o3.x, r2.z
					mov o3.w, r0.y
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.z, r1.z
					mov o5.z, r1.x
					mov o4.w, r0.z
					mov o5.w, r0.w
					mov o4.y, r3.y
					mov o5.y, r3.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o7.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_temps 2
					sample r0.xyzw, v3.xyxx, t0.xyzw, s0
					dp4 r0.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					mad r1.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov r1.w, l(0)
					mul o0.xyzw, r0.xxxx, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					// SV_InstanceID            0   x           4     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_temps 2
					sample r0.xyzw, v3.xyxx, t0.xyzw, s0
					dp4 r0.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					mad r1.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov r1.w, l(0)
					mul o0.xyzw, r0.xxxx, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xy
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xywx, r1.xywx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xywx, r2.xywx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xywx, r3.xywx
					sample r3.xyzw, v6.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xywx, r2.xywx
					mad r1.yzw, r3.wwww, r1.xxyz, r0.xxyz
					mul r1.x, r1.w, r1.y
					mad r0.xy, r1.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.x, r0.xyxx, r0.xyxx
					min r1.x, r1.x, l(1.000000)
					add r1.x, -r1.x, l(1.000000)
					sqrt r0.z, r1.x
					dp3 r1.x, v3.xyzx, r0.xyzx
					dp3 r1.y, v4.xyzx, r0.xyzx
					dp3 r1.z, v5.xyzx, r0.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// SV_InstanceID            0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xy
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xywx, r1.xywx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xywx, r2.xywx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xywx, r3.xywx
					sample r3.xyzw, v6.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xywx, r2.xywx
					mad r1.yzw, r3.wwww, r1.xxyz, r0.xxyz
					mul r1.x, r1.w, r1.y
					mad r0.xy, r1.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.x, r0.xyxx, r0.xyxx
					min r1.x, r1.x, l(1.000000)
					add r1.x, -r1.x, l(1.000000)
					sqrt r0.z, r1.x
					dp3 r1.x, v3.xyzx, r0.xyzx
					dp3 r1.y, v4.xyzx, r0.xyzx
					dp3 r1.z, v5.xyzx, r0.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "PREPASS"
			Tags { "LIGHTMODE" = "PREPASSFINAL" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
			ZWrite Off
			GpuProgramID 254064
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o5.zw, r0.zzzw
					add o5.xy, r1.zzzz, r1.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o5.zw, r0.zzzw
					add o5.xy, r1.zzzz, r1.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o5.zw, r0.zzzw
					add o5.xy, r1.zzzz, r1.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad o3.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r1.y, cb1[5].x
					mul r2.w, r0.y, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r2.zzzz, r2.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r1.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad o3.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r1.y, cb1[5].x
					mul r2.w, r0.y, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r2.zzzz, r2.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r1.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad o3.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r1.y, cb1[5].x
					mul r2.w, r0.y, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r2.zzzz, r2.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r1.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o5.zw, r0.zzzw
					add o5.xy, r1.zzzz, r1.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o5.zw, r0.zzzw
					add o5.xy, r1.zzzz, r1.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o5.zw, r0.zzzw
					add o5.xy, r1.zzzz, r1.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad o3.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r1.y, cb1[5].x
					mul r2.w, r0.y, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r2.zzzz, r2.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r1.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad o3.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r1.y, cb1[5].x
					mul r2.w, r0.y, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r2.zzzz, r2.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r1.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad o3.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r1.y, cb1[5].x
					mul r2.w, r0.y, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r2.zzzz, r2.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r1.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					add r1.xyz, r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					add r1.xyz, r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					add r1.xyz, r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					add r1.xyz, r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DEFERRED"
			Tags { "LIGHTMODE" = "DEFERRED" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
			GpuProgramID 317597
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o7.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o7.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// SV_InstanceID            0   x           7     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_temps 3
					iadd r0.x, v8.x, cb2[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb3[r0.x + 1].xyzw
					mad r1.xyzw, cb3[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb3[r0.x + 3].xyzw
					mad o4.xyz, cb3[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb3[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb3[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb3[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o3.xyz, r0.xxxx, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mov o7.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 3
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad o4.xyz, cb4[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o7.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 3
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad o4.xyz, cb4[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o7.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mov o3.w, r0.x
					mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
					mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
					mul r1.xyz, r0.wwww, cb1[1].yzxy
					mad r1.xyz, cb1[0].yzxy, r0.xxxx, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					dp3 r2.y, v2.xyzx, cb1[4].xyzx
					dp3 r2.z, v2.xyzx, cb1[5].xyzx
					dp3 r2.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb1[9].wwww
					mov o3.y, r3.x
					mov o3.x, r1.z
					mov o3.z, r2.y
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.z, r2.z
					mov o5.z, r2.x
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o4.y, r3.y
					mov o5.y, r3.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mov o3.w, r0.x
					mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
					mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
					mul r1.xyz, r0.wwww, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, r0.xxxx, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb2[9].wwww
					mov o3.y, r3.x
					mov o3.z, r2.x
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o4.y, r3.y
					mov o5.y, r3.z
					mov o4.z, r2.y
					mov o5.z, r2.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o7.xyzw, l(0,0,0,0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o8.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mov o3.w, r0.x
					mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
					mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
					mul r1.xyz, r0.wwww, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, r0.xxxx, r1.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.x, r1.z
					dp3 r2.x, v2.xyzx, cb2[4].xyzx
					dp3 r2.y, v2.xyzx, cb2[5].xyzx
					dp3 r2.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb2[9].wwww
					mov o3.y, r3.x
					mov o3.z, r2.x
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.w, r0.y
					mov o5.w, r0.z
					mov o4.y, r3.y
					mov o5.y, r3.z
					mov o4.z, r2.y
					mov o5.z, r2.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o7.xyzw, l(0,0,0,0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o8.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad r0.yzw, cb4[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.y, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.x, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r2.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyxx
					mul r2.yzw, r2.yyyy, cb4[r0.x + 1].yyzx
					mad r2.xyz, cb4[r0.x + 0].yzxy, r2.xxxx, r2.yzwy
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mul r3.xyz, r1.xyzx, r2.xyzx
					mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb1[9].wwww
					mov o3.y, r3.x
					mov o3.z, r1.y
					mov o3.x, r2.z
					mov o3.w, r0.y
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.z, r1.z
					mov o5.z, r1.x
					mov o4.w, r0.z
					mov o5.w, r0.w
					mov o4.y, r3.y
					mov o5.y, r3.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o7.xyzw, l(0,0,0,0)
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// SV_InstanceID            0   x           9     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_output o9.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad r0.yzw, cb5[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
					mul r1.yzw, r1.yyyy, cb5[r0.x + 1].yyzx
					mad r1.xyz, cb5[r0.x + 0].yzxy, r1.xxxx, r1.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb2[9].wwww
					mov o3.y, r3.x
					mov o3.x, r1.z
					mov o3.z, r2.x
					mov o3.w, r0.y
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.w, r0.z
					mov o5.w, r0.w
					mov o4.y, r3.y
					mov o5.y, r3.z
					mov o4.z, r2.y
					mov o5.z, r2.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o7.xyzw, l(0,0,0,0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o8.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o9.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// SV_InstanceID            0   x           9     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_output o9.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad r0.yzw, cb5[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
					mul r1.yzw, r1.yyyy, cb5[r0.x + 1].yyzx
					mad r1.xyz, cb5[r0.x + 0].yzxy, r1.xxxx, r1.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					dp3 r2.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					mul r3.xyz, r1.xyzx, r2.wxyw
					mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
					mul r3.xyz, r3.xyzx, -cb2[9].wwww
					mov o3.y, r3.x
					mov o3.x, r1.z
					mov o3.z, r2.x
					mov o3.w, r0.y
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.w, r0.z
					mov o5.w, r0.w
					mov o4.y, r3.y
					mov o5.y, r3.z
					mov o4.z, r2.y
					mov o5.z, r2.w
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o7.xyzw, l(0,0,0,0)
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad o8.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
					mov o9.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mul r0.xyzw, v2.zwzw, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t4.xyzw, s4
					sample r0.xyzw, r0.zwzz, t4.xyzw, s4
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t3.xyzw, s3
					sample r1.xyzw, r1.zwzz, t3.xyzw, s3
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s1
					sample r2.xyzw, r2.zwzz, t1.xyzw, s1
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s2
					sample r3.xyzw, r3.zwzz, t2.xyzw, s2
					add r3.xyz, r3.xyzx, r4.xyzx
					sample r4.xyzw, v5.xyxx, t0.xyzw, s0
					dp4 r0.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r4.xyzw, r4.xyzw, r1.wwww
					mul r4.xyzw, r4.xyzw, cb0[5].zzzz
					mul r3.xyz, r3.xyzx, r4.yyyy
					mad r2.xyz, r4.xxxx, r2.xyzx, r3.xyzx
					mad r1.xyz, r4.zzzz, r1.xyzx, r2.xyzx
					mad r0.xyz, r4.wwww, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad r0.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o3.xyzw, r0.wwww
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 6
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r1.y, cb2[0].z, l(0.500000)
					  mad r1.z, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r2.x, r1.z, r0.w
					  sample r3.xyzw, r2.xzwx, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r4.xyzw, r1.yzwy, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r2.xyzw, r1.yzwy, t5.xyzw, s0
					  mov r5.xyz, v3.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v3.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r1.yzw, r3.xxyz, v7.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r2.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.yzw, r0.xxyz, r1.yyzw
					exp r3.xyz, -r1.yzwy
					mul o0.xyz, r1.xxxx, r0.xyzx
					mul o2.xyz, r1.xxxx, r2.xyzx
					mov r3.w, l(1.000000)
					mul o3.xyzw, r1.xxxx, r3.xyzw
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 6
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r1.y, cb2[0].z, l(0.500000)
					  mad r1.z, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r2.x, r1.z, r0.w
					  sample r3.xyzw, r2.xzwx, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r4.xyzw, r1.yzwy, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r2.xyzw, r1.yzwy, t5.xyzw, s0
					  mov r5.xyz, v3.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v3.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r1.yzw, r3.xxyz, v7.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r2.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r3.xyz, r0.xyzx, r1.yzwy
					mul o0.xyz, r1.xxxx, r0.xyzx
					mul o2.xyz, r1.xxxx, r2.xyzx
					mov r3.w, l(1.000000)
					mul o3.xyzw, r1.xxxx, r3.xyzw
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// SV_InstanceID            0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mul r0.xyzw, v2.zwzw, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t4.xyzw, s4
					sample r0.xyzw, r0.zwzz, t4.xyzw, s4
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t3.xyzw, s3
					sample r1.xyzw, r1.zwzz, t3.xyzw, s3
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s1
					sample r2.xyzw, r2.zwzz, t1.xyzw, s1
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s2
					sample r3.xyzw, r3.zwzz, t2.xyzw, s2
					add r3.xyz, r3.xyzx, r4.xyzx
					sample r4.xyzw, v5.xyxx, t0.xyzw, s0
					dp4 r0.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r4.xyzw, r4.xyzw, r1.wwww
					mul r4.xyzw, r4.xyzw, cb0[5].zzzz
					mul r3.xyz, r3.xyzx, r4.yyyy
					mad r2.xyz, r4.xxxx, r2.xyzx, r3.xyzx
					mad r1.xyz, r4.zzzz, r1.xyzx, r2.xyzx
					mad r0.xyz, r4.wwww, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad r0.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o3.xyzw, r0.wwww
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 6
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r1.y, cb2[0].z, l(0.500000)
					  mad r1.z, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r2.x, r1.z, r0.w
					  sample r3.xyzw, r2.xzwx, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r4.xyzw, r1.yzwy, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r2.xyzw, r1.yzwy, t5.xyzw, s0
					  mov r5.xyz, v3.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v3.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r1.yzw, r3.xxyz, v7.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r2.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.yzw, r0.xxyz, r1.yyzw
					exp r3.xyz, -r1.yzwy
					mul o0.xyz, r1.xxxx, r0.xyzx
					mul o2.xyz, r1.xxxx, r2.xyzx
					mov r3.w, l(1.000000)
					mul o3.xyzw, r1.xxxx, r3.xyzw
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 6
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r1.y, cb2[0].z, l(0.500000)
					  mad r1.z, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r2.x, r1.z, r0.w
					  sample r3.xyzw, r2.xzwx, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r4.xyzw, r1.yzwy, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r2.xyzw, r1.yzwy, t5.xyzw, s0
					  mov r5.xyz, v3.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v3.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r1.yzw, r3.xxyz, v7.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r2.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r3.xyz, r0.xyzx, r1.yzwy
					mul o0.xyz, r1.xxxx, r0.xyzx
					mul o2.xyz, r1.xxxx, r2.xyzx
					mov r3.w, l(1.000000)
					mul o3.xyzw, r1.xxxx, r3.xyzw
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 9
					mov o0.w, l(1.000000)
					mul r0.xyzw, v2.zwzw, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t8.xyzw, s4
					sample r2.xyzw, r0.zwzz, t8.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t7.xyzw, s3
					sample r4.xyzw, r2.zwzz, t7.xyzw, s3
					add r3.xyz, r3.xyzx, r4.xyzx
					mul r4.xyzw, v1.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t5.xyzw, s1
					sample r6.xyzw, r4.zwzz, t5.xyzw, s1
					add r5.xyz, r5.xyzx, r6.xyzx
					mul r6.xyzw, v1.zwzw, cb0[5].xxyy
					sample r7.xyzw, r6.xyxx, t6.xyzw, s2
					sample r8.xyzw, r6.zwzz, t6.xyzw, s2
					add r7.xyz, r7.xyzx, r8.xyzx
					sample r8.xyzw, v6.xyxx, t0.xyzw, s0
					dp4 r1.w, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r3.w, r1.w, l(0.001000)
					div r8.xyzw, r8.xyzw, r3.wwww
					mul r8.xyzw, r8.xyzw, cb0[5].zzzz
					mul r7.xyz, r7.xyzx, r8.yyyy
					mad r5.xyz, r8.xxxx, r5.xyzx, r7.xyzx
					mad r3.xyz, r8.zzzz, r3.xyzx, r5.xyzx
					mad r1.xyz, r8.wwww, r1.xyzx, r3.xyzx
					mul o0.xyz, r1.wwww, r1.xyzx
					mov o1.xyzw, l(0,0,0,0)
					sample r3.xyzw, r2.xyxx, t3.xyzw, s7
					sample r2.xyzw, r2.zwzz, t3.xyzw, s7
					add r1.xyz, r2.xywx, r3.xywx
					sample r2.xyzw, r4.xyxx, t1.xyzw, s5
					sample r3.xyzw, r4.zwzz, t1.xyzw, s5
					add r2.xyz, r2.xywx, r3.xywx
					sample r3.xyzw, r6.xyxx, t2.xyzw, s6
					sample r4.xyzw, r6.zwzz, t2.xyzw, s6
					add r3.xyz, r3.xywx, r4.xywx
					mul r3.xyz, r3.xyzx, r8.yyyy
					mad r2.xyz, r8.xxxx, r2.xyzx, r3.xyzx
					mad r1.xyz, r8.zzzz, r1.xyzx, r2.xyzx
					sample r2.xyzw, r0.xyxx, t4.xyzw, s8
					sample r0.xyzw, r0.zwzz, t4.xyzw, s8
					add r0.xyz, r0.xywx, r2.xywx
					mad r0.yzw, r8.wwww, r0.xxyz, r1.xxyz
					mul r0.x, r0.w, r0.y
					mad r0.xy, r0.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r0.xyxx, r0.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.z, r0.w
					dp3 r1.x, v3.xyzx, r0.xyzx
					dp3 r1.y, v4.xyzx, r0.xyzx
					dp3 r1.z, v5.xyzx, r0.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul o2.xyz, r1.wwww, r0.xyzx
					mov o3.xyzw, r1.wwww
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s6
					sample r4.xyzw, r2.zwzz, t1.xyzw, s6
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s7
					sample r5.xyzw, r3.zwzz, t2.xyzw, s7
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s8
					sample r6.xyzw, r4.zwzz, t3.xyzw, s8
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s9
					sample r7.xyzw, r5.zwzz, t4.xyzw, s9
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s2
					sample r2.xyzw, r2.zwzz, t5.xyzw, s2
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s3
					sample r3.xyzw, r3.zwzz, t6.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s4
					sample r3.xyzw, r4.zwzz, t7.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s5
					sample r3.xyzw, r5.zwzz, t8.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.wwww, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v3.wwww, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v5.wwww, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  mov r3.y, v3.w
					  mov r3.z, v4.w
					  mov r3.w, v5.w
					  movc r1.yzw, r0.wwww, r1.yyzw, r3.yyzw
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r3.yzw, r1.yyzw, cb2[5].xxyz
					  mul r0.w, r3.y, l(0.250000)
					  mul r1.y, cb2[0].z, l(0.500000)
					  mad r1.z, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r3.x, r1.z, r0.w
					  sample r4.xyzw, r3.xzwx, t9.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r5.xyzw, r1.yzwy, t9.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r3.xyzw, r1.yzwy, t9.xyzw, s0
					  mov r2.w, l(1.000000)
					  dp4 r4.x, r4.xyzw, r2.xyzw
					  dp4 r4.y, r5.xyzw, r2.xyzw
					  dp4 r4.z, r3.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r4.x, cb1[39].xyzw, r2.xyzw
					  dp4 r4.y, cb1[40].xyzw, r2.xyzw
					  dp4 r4.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r1.yzw, r4.xxyz, v8.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.yzw, r0.xxyz, r1.yyzw
					exp r3.xyz, -r1.yzwy
					mul o0.xyz, r1.xxxx, r0.xyzx
					mul o2.xyz, r1.xxxx, r2.xyzx
					mov r3.w, l(1.000000)
					mul o3.xyzw, r1.xxxx, r3.xyzw
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s6
					sample r4.xyzw, r2.zwzz, t1.xyzw, s6
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s7
					sample r5.xyzw, r3.zwzz, t2.xyzw, s7
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s8
					sample r6.xyzw, r4.zwzz, t3.xyzw, s8
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s9
					sample r7.xyzw, r5.zwzz, t4.xyzw, s9
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s2
					sample r2.xyzw, r2.zwzz, t5.xyzw, s2
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s3
					sample r3.xyzw, r3.zwzz, t6.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s4
					sample r3.xyzw, r4.zwzz, t7.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s5
					sample r3.xyzw, r5.zwzz, t8.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.wwww, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v3.wwww, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v5.wwww, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  mov r3.y, v3.w
					  mov r3.z, v4.w
					  mov r3.w, v5.w
					  movc r1.yzw, r0.wwww, r1.yyzw, r3.yyzw
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r3.yzw, r1.yyzw, cb2[5].xxyz
					  mul r0.w, r3.y, l(0.250000)
					  mul r1.y, cb2[0].z, l(0.500000)
					  mad r1.z, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r3.x, r1.z, r0.w
					  sample r4.xyzw, r3.xzwx, t9.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r5.xyzw, r1.yzwy, t9.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r3.xyzw, r1.yzwy, t9.xyzw, s0
					  mov r2.w, l(1.000000)
					  dp4 r4.x, r4.xyzw, r2.xyzw
					  dp4 r4.y, r5.xyzw, r2.xyzw
					  dp4 r4.z, r3.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r4.x, cb1[39].xyzw, r2.xyzw
					  dp4 r4.y, cb1[40].xyzw, r2.xyzw
					  dp4 r4.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r1.yzw, r4.xxyz, v8.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r3.xyz, r0.xyzx, r1.yzwy
					mul o0.xyz, r1.xxxx, r0.xyzx
					mul o2.xyz, r1.xxxx, r2.xyzx
					mov r3.w, l(1.000000)
					mul o3.xyzw, r1.xxxx, r3.xyzw
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
					// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 9
					mov o0.w, l(1.000000)
					mul r0.xyzw, v2.zwzw, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t8.xyzw, s4
					sample r2.xyzw, r0.zwzz, t8.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t7.xyzw, s3
					sample r4.xyzw, r2.zwzz, t7.xyzw, s3
					add r3.xyz, r3.xyzx, r4.xyzx
					mul r4.xyzw, v1.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t5.xyzw, s1
					sample r6.xyzw, r4.zwzz, t5.xyzw, s1
					add r5.xyz, r5.xyzx, r6.xyzx
					mul r6.xyzw, v1.zwzw, cb0[5].xxyy
					sample r7.xyzw, r6.xyxx, t6.xyzw, s2
					sample r8.xyzw, r6.zwzz, t6.xyzw, s2
					add r7.xyz, r7.xyzx, r8.xyzx
					sample r8.xyzw, v6.xyxx, t0.xyzw, s0
					dp4 r1.w, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r3.w, r1.w, l(0.001000)
					div r8.xyzw, r8.xyzw, r3.wwww
					mul r8.xyzw, r8.xyzw, cb0[5].zzzz
					mul r7.xyz, r7.xyzx, r8.yyyy
					mad r5.xyz, r8.xxxx, r5.xyzx, r7.xyzx
					mad r3.xyz, r8.zzzz, r3.xyzx, r5.xyzx
					mad r1.xyz, r8.wwww, r1.xyzx, r3.xyzx
					mul o0.xyz, r1.wwww, r1.xyzx
					mov o1.xyzw, l(0,0,0,0)
					sample r3.xyzw, r2.xyxx, t3.xyzw, s7
					sample r2.xyzw, r2.zwzz, t3.xyzw, s7
					add r1.xyz, r2.xywx, r3.xywx
					sample r2.xyzw, r4.xyxx, t1.xyzw, s5
					sample r3.xyzw, r4.zwzz, t1.xyzw, s5
					add r2.xyz, r2.xywx, r3.xywx
					sample r3.xyzw, r6.xyxx, t2.xyzw, s6
					sample r4.xyzw, r6.zwzz, t2.xyzw, s6
					add r3.xyz, r3.xywx, r4.xywx
					mul r3.xyz, r3.xyzx, r8.yyyy
					mad r2.xyz, r8.xxxx, r2.xyzx, r3.xyzx
					mad r1.xyz, r8.zzzz, r1.xyzx, r2.xyzx
					sample r2.xyzw, r0.xyxx, t4.xyzw, s8
					sample r0.xyzw, r0.zwzz, t4.xyzw, s8
					add r0.xyz, r0.xywx, r2.xywx
					mad r0.yzw, r8.wwww, r0.xxyz, r1.xxyz
					mul r0.x, r0.w, r0.y
					mad r0.xy, r0.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r0.w, r0.xyxx, r0.xyxx
					min r0.w, r0.w, l(1.000000)
					add r0.w, -r0.w, l(1.000000)
					sqrt r0.z, r0.w
					dp3 r1.x, v3.xyzx, r0.xyzx
					dp3 r1.y, v4.xyzx, r0.xyzx
					dp3 r1.z, v5.xyzx, r0.xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul o2.xyz, r1.wwww, r0.xyzx
					mov o3.xyzw, r1.wwww
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// SV_InstanceID            0   x           9     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s6
					sample r4.xyzw, r2.zwzz, t1.xyzw, s6
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s7
					sample r5.xyzw, r3.zwzz, t2.xyzw, s7
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s8
					sample r6.xyzw, r4.zwzz, t3.xyzw, s8
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s9
					sample r7.xyzw, r5.zwzz, t4.xyzw, s9
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s2
					sample r2.xyzw, r2.zwzz, t5.xyzw, s2
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s3
					sample r3.xyzw, r3.zwzz, t6.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s4
					sample r3.xyzw, r4.zwzz, t7.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s5
					sample r3.xyzw, r5.zwzz, t8.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.wwww, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v3.wwww, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v5.wwww, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  mov r3.y, v3.w
					  mov r3.z, v4.w
					  mov r3.w, v5.w
					  movc r1.yzw, r0.wwww, r1.yyzw, r3.yyzw
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r3.yzw, r1.yyzw, cb2[5].xxyz
					  mul r0.w, r3.y, l(0.250000)
					  mul r1.y, cb2[0].z, l(0.500000)
					  mad r1.z, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r3.x, r1.z, r0.w
					  sample r4.xyzw, r3.xzwx, t9.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r5.xyzw, r1.yzwy, t9.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r3.xyzw, r1.yzwy, t9.xyzw, s0
					  mov r2.w, l(1.000000)
					  dp4 r4.x, r4.xyzw, r2.xyzw
					  dp4 r4.y, r5.xyzw, r2.xyzw
					  dp4 r4.z, r3.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r4.x, cb1[39].xyzw, r2.xyzw
					  dp4 r4.y, cb1[40].xyzw, r2.xyzw
					  dp4 r4.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r1.yzw, r4.xxyz, v8.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.yzw, r0.xxyz, r1.yyzw
					exp r3.xyz, -r1.yzwy
					mul o0.xyz, r1.xxxx, r0.xyzx
					mul o2.xyz, r1.xxxx, r2.xyzx
					mov r3.w, l(1.000000)
					mul o3.xyzw, r1.xxxx, r3.xyzw
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					// TEXCOORD                 6   xyzw        7     NONE   float       
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// SV_InstanceID            0   x           9     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_sampler s9, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_resource_texture3d (float,float,float,float) t9
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xy
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 8
					sample r0.xyzw, v6.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s6
					sample r4.xyzw, r2.zwzz, t1.xyzw, s6
					add r1.yzw, r3.xxyw, r4.xxyw
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s7
					sample r5.xyzw, r3.zwzz, t2.xyzw, s7
					add r4.xyz, r4.xywx, r5.xywx
					mul r4.xyz, r0.yyyy, r4.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r4.xxyz
					mul r4.xyzw, v2.xyxy, cb0[5].xxyy
					sample r5.xyzw, r4.xyxx, t3.xyzw, s8
					sample r6.xyzw, r4.zwzz, t3.xyzw, s8
					add r5.xyz, r5.xywx, r6.xywx
					mad r1.yzw, r0.zzzz, r5.xxyz, r1.yyzw
					mul r5.xyzw, v2.zwzw, cb0[5].xxyy
					sample r6.xyzw, r5.xyxx, t4.xyzw, s9
					sample r7.xyzw, r5.zwzz, t4.xyzw, s9
					add r6.xyz, r6.xywx, r7.xywx
					mad r6.yzw, r0.wwww, r6.xxyz, r1.yyzw
					mul r6.x, r6.w, r6.y
					mad r6.xy, r6.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.y, r6.xyxx, r6.xyxx
					min r1.y, r1.y, l(1.000000)
					add r1.y, -r1.y, l(1.000000)
					sqrt r6.z, r1.y
					sample r7.xyzw, r2.xyxx, t5.xyzw, s2
					sample r2.xyzw, r2.zwzz, t5.xyzw, s2
					add r1.yzw, r2.xxyz, r7.xxyz
					sample r2.xyzw, r3.xyxx, t6.xyzw, s3
					sample r3.xyzw, r3.zwzz, t6.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					sample r2.xyzw, r4.xyxx, t7.xyzw, s4
					sample r3.xyzw, r4.zwzz, t7.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					sample r2.xyzw, r5.xyxx, t8.xyzw, s5
					sample r3.xyzw, r5.zwzz, t8.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					dp3 r2.x, v3.xyzx, r6.xyzx
					dp3 r2.y, v4.xyzx, r6.xyzx
					dp3 r2.z, v5.xyzx, r6.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.wwww, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v3.wwww, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v5.wwww, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  mov r3.y, v3.w
					  mov r3.z, v4.w
					  mov r3.w, v5.w
					  movc r1.yzw, r0.wwww, r1.yyzw, r3.yyzw
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r3.yzw, r1.yyzw, cb2[5].xxyz
					  mul r0.w, r3.y, l(0.250000)
					  mul r1.y, cb2[0].z, l(0.500000)
					  mad r1.z, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r3.x, r1.z, r0.w
					  sample r4.xyzw, r3.xzwx, t9.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r5.xyzw, r1.yzwy, t9.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r3.xyzw, r1.yzwy, t9.xyzw, s0
					  mov r2.w, l(1.000000)
					  dp4 r4.x, r4.xyzw, r2.xyzw
					  dp4 r4.y, r5.xyzw, r2.xyzw
					  dp4 r4.z, r3.xyzw, r2.xyzw
					else 
					  mov r2.w, l(1.000000)
					  dp4 r4.x, cb1[39].xyzw, r2.xyzw
					  dp4 r4.y, cb1[40].xyzw, r2.xyzw
					  dp4 r4.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r1.yzw, r4.xxyz, v8.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r3.xyz, r0.xyzx, r1.yzwy
					mul o0.xyz, r1.xxxx, r0.xyzx
					mul o2.xyz, r1.xxxx, r2.xyzx
					mov r3.w, l(1.000000)
					mul o3.xyzw, r1.xxxx, r3.xyzw
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "META"
			Tags { "LIGHTMODE" = "META" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 363816
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_temps 2
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
					mad o1.zw, v3.xxxy, cb0[8].xxxy, cb0[8].zzzw
					mad o2.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad o2.zw, v3.xxxy, cb0[10].xxxy, cb0[10].zzzw
					mul r0.xyz, v0.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_TERRAIN_NORMAL_MAP" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[10], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xy
					dcl_temps 4
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
					mad o1.zw, v3.xxxy, cb0[8].xxxy, cb0[8].zzzw
					mad o2.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad o2.zw, v3.xxxy, cb0[10].xxxy, cb0[10].zzzw
					mul r0.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r0.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xyxx
					mul r0.yzw, r0.yyyy, cb1[1].yyzx
					mad r0.xyz, cb1[0].yzxy, r0.xxxx, r0.yzwy
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r1.y, v2.xyzx, cb1[4].xyzx
					dp3 r1.z, v2.xyzx, cb1[5].xyzx
					dp3 r1.x, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r2.xyz, r0.xyzx, r1.xyzx
					mad r2.xyz, r1.zxyz, r0.yzxy, -r2.xyzx
					mul r2.xyz, r2.xyzx, -cb1[9].wwww
					mov o3.y, r2.x
					mul r3.xyz, v0.yyyy, cb1[1].xyzx
					mad r3.xyz, cb1[0].xyzx, v0.xxxx, r3.xyzx
					mad r3.xyz, cb1[2].xyzx, v0.zzzz, r3.xyzx
					mad r3.xyz, cb1[3].xyzx, v0.wwww, r3.xyzx
					mov o3.w, r3.x
					mov o3.x, r0.z
					mov o3.z, r1.y
					mov o4.x, r0.x
					mov o5.x, r0.y
					mov o4.z, r1.z
					mov o5.z, r1.x
					mov o4.w, r3.y
					mov o5.w, r3.z
					mov o4.y, r2.y
					mov o5.y, r2.z
					mad o6.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v1.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					sample r0.xyzw, r0.zwzz, t1.xyzw, s1
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t2.xyzw, s2
					sample r1.xyzw, r1.zwzz, t2.xyzw, s2
					add r1.xyz, r1.xyzx, r2.xyzx
					sample r2.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r0.w, r0.w, l(0.001000)
					div r2.xyzw, r2.xyzw, r0.wwww
					mul r2.xyzw, r2.xyzw, cb0[5].zzzz
					mul r1.xyz, r1.xyzx, r2.yyyy
					mad r0.xyz, r2.xxxx, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r1.xyxx, t3.xyzw, s3
					sample r1.xyzw, r1.zwzz, t3.xyzw, s3
					add r1.xyz, r1.xyzx, r3.xyzx
					mad r0.xyz, r2.zzzz, r1.xyzx, r0.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r3.xyzx
					mad r0.xyz, r2.wwww, r1.xyzx, r0.xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[5].w
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[6].xxxx
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "_TERRAIN_NORMAL_MAP" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        3     NONE   float       
					// TEXCOORD                 3   xyzw        4     NONE   float       
					// TEXCOORD                 4   xyzw        5     NONE   float       
					// TEXCOORD                 5   xy          6     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v6.xy
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v1.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					sample r0.xyzw, r0.zwzz, t1.xyzw, s1
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t2.xyzw, s2
					sample r1.xyzw, r1.zwzz, t2.xyzw, s2
					add r1.xyz, r1.xyzx, r2.xyzx
					sample r2.xyzw, v6.xyxx, t0.xyzw, s0
					dp4 r0.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r0.w, r0.w, l(0.001000)
					div r2.xyzw, r2.xyzw, r0.wwww
					mul r2.xyzw, r2.xyzw, cb0[5].zzzz
					mul r1.xyz, r1.xyzx, r2.yyyy
					mad r0.xyz, r2.xxxx, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r1.xyxx, t3.xyzw, s3
					sample r1.xyzw, r1.zwzz, t3.xyzw, s3
					add r1.xyz, r1.xyzx, r3.xyzx
					mad r0.xyz, r2.zzzz, r1.xyzx, r0.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r3.xyzx
					mad r0.xyz, r2.wwww, r1.xyzx, r0.xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[5].w
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[6].xxxx
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Tags { "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			GpuProgramID 456776
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 3
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o4.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb3[4].xyzx
					dp3 r1.y, v2.xyzx, cb3[5].xyzx
					dp3 r1.z, v2.xyzx, cb3[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r1.w, r1.y, r1.y
					mad r1.w, r1.x, r1.x, -r1.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r1.x, cb2[42].xyzw, r2.xyzw
					dp4 r1.y, cb2[43].xyzw, r2.xyzw
					dp4 r1.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o7.zw, r0.zzzw
					add o7.xy, r1.zzzz, r1.xwxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb3[18].xyzw
					mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb1[39].xyzw, r1.xyzw
					dp4 r3.y, cb1[40].xyzw, r1.xyzw
					dp4 r3.z, cb1[41].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb1[4].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb1[3].xyzw
					add r0.xyzw, -r0.zzzz, cb1[5].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb1[8].xyzx
					mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					add o6.xyz, r2.xyzx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb2[4].xyzx
					dp3 r1.y, v2.xyzx, cb2[5].xyzx
					dp3 r1.z, v2.xyzx, cb2[6].xyzx
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul o3.xyz, r1.wwww, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o6.zw, r0.zzzw
					add o6.xy, r1.zzzz, r1.xwxx
					mov o7.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb4[18].xyzw
					mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
					mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.x, v2.xyzx, cb3[4].xyzx
					dp3 r2.y, v2.xyzx, cb3[5].xyzx
					dp3 r2.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					add r3.xyzw, -r0.xxxx, cb2[3].xyzw
					add r4.xyzw, -r0.yyyy, cb2[4].xyzw
					add r0.xyzw, -r0.zzzz, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o6.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					mov o8.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					// SV_InstanceID            0   x           7     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_temps 3
					iadd r0.x, v8.x, cb2[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb3[r0.x + 1].xyzw
					mad r1.xyzw, cb3[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb3[r0.x + 3].xyzw
					mad o4.xyz, cb3[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb3[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb3[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb3[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o3.xyz, r0.xxxx, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mov o7.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.x
					dcl_temps 3
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad o4.xyz, cb4[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					mov o7.xyzw, l(0,0,0,0)
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.x
					dcl_temps 3
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad o4.xyz, cb4[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul o3.xyz, r0.xxxx, r2.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// SV_InstanceID            0   x           9     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.x
					dcl_temps 3
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad o4.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r2.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb2[42].xyzw, r2.xyzw
					dp4 r0.y, cb2[43].xyzw, r2.xyzw
					dp4 r0.z, cb2[44].xyzw, r2.xyzw
					mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					mov o8.xyzw, l(0,0,0,0)
					mov o9.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 7   xyzw        6     NONE   float   xyzw
					// SV_InstanceID            0   x           7     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_temps 3
					iadd r0.x, v8.x, cb2[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb3[r0.x + 1].xyzw
					mad r1.xyzw, cb3[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb3[r0.x + 3].xyzw
					mad o4.xyz, cb3[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb3[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb3[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb3[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o3.xyz, r0.xxxx, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mov o7.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.x
					dcl_temps 5
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad r0.yzw, cb4[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r1.xyzx
					mov o4.xyz, r0.yzwy
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					add r2.xyzw, -r0.yyyy, cb1[3].xyzw
					add r3.xyzw, -r0.zzzz, cb1[4].xyzw
					add r0.xyzw, -r0.wwww, cb1[5].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
					mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
					mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r2.xyzw, r2.xyzw, r3.xyzw
					max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r2.xyzw
					mul r2.xyz, r0.yyyy, cb1[8].xyzx
					mad r2.xyz, cb1[7].xyzx, r0.xxxx, r2.xyzx
					mad r0.xyz, cb1[9].xyzx, r0.zzzz, r2.xyzx
					mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r1.xyzw, r1.yzzx, r1.xyzz
					dp4 r2.x, cb1[42].xyzw, r1.xyzw
					dp4 r2.y, cb1[43].xyzw, r1.xyzw
					dp4 r2.z, cb1[44].xyzw, r1.xyzw
					mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
					add o6.xyz, r0.xyzx, r1.xyzx
					mov o7.xyzw, l(0,0,0,0)
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyzw
					dcl_output o8.x
					dcl_temps 3
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad o4.xyz, cb4[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul o3.xyz, r0.xxxx, r2.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o6.zw, r1.zzzw
					add o6.xy, r0.zzzz, r0.xwxx
					mov o7.xyzw, l(0,0,0,0)
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
					// SV_InstanceID            0   x           9     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyzw
					dcl_output o9.x
					dcl_temps 6
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad r0.yzw, cb5[r0.x + 3].xxyz, v0.wwww, r1.xxyz
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r2.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r2.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r2.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyz, r0.xxxx, r2.xyzx
					mov o3.xyz, r2.xyzx
					mov o4.xyz, r0.yzwy
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					add r3.xyzw, -r0.yyyy, cb2[3].xyzw
					add r4.xyzw, -r0.zzzz, cb2[4].xyzw
					add r0.xyzw, -r0.wwww, cb2[5].xyzw
					mul r5.xyzw, r2.yyyy, r4.xyzw
					mul r4.xyzw, r4.xyzw, r4.xyzw
					mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
					mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
					mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r4.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r3.xyzw, r3.xyzw, r4.xyzw
					max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r3.xyzw
					mul r3.xyz, r0.yyyy, cb2[8].xyzx
					mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.yzzx, r2.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					add o6.xyz, r0.xyzx, r2.xyzx
					mul r0.x, r1.y, cb1[5].x
					mul r0.w, r0.x, l(0.500000)
					mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o7.zw, r1.zzzw
					add o7.xy, r0.zzzz, r0.xwxx
					mov o8.xyzw, l(0,0,0,0)
					mov o9.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.y
					  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.y
					  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r1.yzw, r0.xxyz, r1.yyzw
					mul r0.xyz, r0.xyzx, v6.xyzx
					mad r0.xyz, r1.yzwy, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s4
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s5
					sample r2.xyzw, r2.zwzz, t3.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					add r1.yzw, -v4.xxyz, cb1[4].xxyz
					mov r2.x, cb4[9].z
					mov r2.y, cb4[10].z
					mov r2.z, cb4[11].z
					dp3 r0.w, r1.yzwy, r2.xyzx
					add r1.yzw, v4.xxyz, -cb3[25].xxyz
					dp3 r1.y, r1.yzwy, r1.yzwy
					sqrt r1.y, r1.y
					add r1.y, -r0.w, r1.y
					mad r0.w, cb3[25].w, r1.y, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.y, cb5[0].x, l(1.000000)
					if_nz r1.y
					  eq r1.z, cb5[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb5[2].xyzx
					  mad r2.xyz, cb5[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb5[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb5[4].xyzx
					  movc r2.xyz, r1.zzzz, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r1.z, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.w, r1.z
					  sample r2.xyzw, r2.xzwx, t6.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.z, r2.xyzw, cb2[46].xyzw
					div r2.xy, v6.xyxx, v6.wwww
					sample r2.xyzw, r2.xyxx, t5.xyzw, s1
					add_sat r0.w, r0.w, r2.x
					min r1.z, r0.w, r1.z
					movc r0.w, r1.y, r1.z, r0.w
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s4
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s5
					sample r2.xyzw, r2.zwzz, t3.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					add r1.yzw, -v4.xxyz, cb1[4].xxyz
					mov r2.x, cb4[9].z
					mov r2.y, cb4[10].z
					mov r2.z, cb4[11].z
					dp3 r0.w, r1.yzwy, r2.xyzx
					add r1.yzw, v4.xxyz, -cb3[25].xxyz
					dp3 r1.y, r1.yzwy, r1.yzwy
					sqrt r1.y, r1.y
					add r1.y, -r0.w, r1.y
					mad r0.w, cb3[25].w, r1.y, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.y, cb5[0].x, l(1.000000)
					if_nz r1.y
					  eq r1.z, cb5[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb5[2].xyzx
					  mad r2.xyz, cb5[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb5[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb5[4].xyzx
					  movc r2.xyz, r1.zzzz, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r1.z, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.w, r1.z
					  sample r2.xyzw, r2.xzwx, t6.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.z, r2.xyzw, cb2[46].xyzw
					div r2.xy, v7.xyxx, v7.wwww
					sample r2.xyzw, r2.xyxx, t5.xyzw, s1
					add_sat r0.w, r0.w, r2.x
					min r1.z, r0.w, r1.z
					movc r0.w, r1.y, r1.z, r0.w
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					if_nz r1.y
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb5[2].xxyz
					  mad r1.yzw, cb5[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb5[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb5[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r3.yzw, r1.yyzw, cb5[5].xxyz
					  mul r0.w, r3.y, l(0.250000)
					  mul r1.y, cb5[0].z, l(0.500000)
					  mad r1.z, -cb5[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r3.x, r1.z, r0.w
					  sample r4.xyzw, r3.xzwx, t6.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r5.xyzw, r1.yzwy, t6.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r3.xyzw, r1.yzwy, t6.xyzw, s0
					  mov r6.xyz, v3.xyzx
					  mov r6.w, l(1.000000)
					  dp4 r4.x, r4.xyzw, r6.xyzw
					  dp4 r4.y, r5.xyzw, r6.xyzw
					  dp4 r4.z, r3.xyzw, r6.xyzw
					else 
					  mov r3.xyz, v3.xyzx
					  mov r3.w, l(1.000000)
					  dp4 r4.x, cb2[39].xyzw, r3.xyzw
					  dp4 r4.y, cb2[40].xyzw, r3.xyzw
					  dp4 r4.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r1.yzw, r4.xxyz, v6.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.w, v3.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r2.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r1.yzwy
					mad r0.xyz, r2.xyzx, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 7   xyzw        6     NONE   float       
					// SV_InstanceID            0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.y
					  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 7   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyz
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r1.y, cb2[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r1.yzw, r1.yyyy, r2.xxyz, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r1.y, r2.y, l(0.250000), l(0.750000)
					  mad r1.z, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.z, r1.y
					  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.y, r2.xyzw, cb1[46].xyzw
					mul r1.yzw, r1.yyyy, cb0[2].xxyz
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r2.y, cb2[0].z, l(0.500000)
					  mad r3.x, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r2.y
					  min r2.x, r3.x, r0.w
					  sample r3.xyzw, r2.xzwx, t5.xyzw, s0
					  add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
					  sample r4.xyzw, r4.xyzx, t5.xyzw, s0
					  add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
					  sample r2.xyzw, r2.xyzx, t5.xyzw, s0
					  mov r5.xyz, v3.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v3.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r2.xyz, r3.xyzx, v6.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r1.yzw, r0.xxyz, r1.yyzw
					mul r0.xyz, r0.xyzx, r2.xyzx
					mad r0.xyz, r1.yzwy, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 6   xyzw        6     NONE   float   xy w
					// TEXCOORD                 7   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyw
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s4
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s5
					sample r2.xyzw, r2.zwzz, t3.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					add r1.yzw, -v4.xxyz, cb1[4].xxyz
					mov r2.x, cb4[9].z
					mov r2.y, cb4[10].z
					mov r2.z, cb4[11].z
					dp3 r0.w, r1.yzwy, r2.xyzx
					add r1.yzw, v4.xxyz, -cb3[25].xxyz
					dp3 r1.y, r1.yzwy, r1.yzwy
					sqrt r1.y, r1.y
					add r1.y, -r0.w, r1.y
					mad r0.w, cb3[25].w, r1.y, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.y, cb5[0].x, l(1.000000)
					if_nz r1.y
					  eq r1.z, cb5[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb5[2].xyzx
					  mad r2.xyz, cb5[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb5[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb5[4].xyzx
					  movc r2.xyz, r1.zzzz, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r1.z, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.w, r1.z
					  sample r2.xyzw, r2.xzwx, t6.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.z, r2.xyzw, cb2[46].xyzw
					div r2.xy, v6.xyxx, v6.wwww
					sample r2.xyzw, r2.xyxx, t5.xyzw, s1
					add_sat r0.w, r0.w, r2.x
					min r1.z, r0.w, r1.z
					movc r0.w, r1.y, r1.z, r0.w
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// TEXCOORD                 6   xyzw        7     NONE   float   xy w
					// TEXCOORD                 7   xyzw        8     NONE   float       
					// SV_InstanceID            0   x           9     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[26], immediateIndexed
					dcl_constantbuffer CB4[12], immediateIndexed
					dcl_constantbuffer CB5[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyw
					dcl_output o0.xyzw
					dcl_temps 7
					sample r0.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s4
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s5
					sample r2.xyzw, r2.zwzz, t3.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					add r1.yzw, -v4.xxyz, cb1[4].xxyz
					mov r2.x, cb4[9].z
					mov r2.y, cb4[10].z
					mov r2.z, cb4[11].z
					dp3 r0.w, r1.yzwy, r2.xyzx
					add r1.yzw, v4.xxyz, -cb3[25].xxyz
					dp3 r1.y, r1.yzwy, r1.yzwy
					sqrt r1.y, r1.y
					add r1.y, -r0.w, r1.y
					mad r0.w, cb3[25].w, r1.y, r0.w
					mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
					eq r1.y, cb5[0].x, l(1.000000)
					if_nz r1.y
					  eq r1.z, cb5[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb5[2].xyzx
					  mad r2.xyz, cb5[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb5[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb5[4].xyzx
					  movc r2.xyz, r1.zzzz, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb5[6].xyzx
					  mul r2.yzw, r2.xxyz, cb5[5].xxyz
					  mad r1.z, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
					  max r2.x, r1.w, r1.z
					  sample r2.xyzw, r2.xzwx, t6.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.z, r2.xyzw, cb2[46].xyzw
					div r2.xy, v7.xyxx, v7.wwww
					sample r2.xyzw, r2.xyxx, t5.xyzw, s1
					add_sat r0.w, r0.w, r2.x
					min r1.z, r0.w, r1.z
					movc r0.w, r1.y, r1.z, r0.w
					mul r2.xyz, r0.wwww, cb0[2].xyzx
					if_nz r1.y
					  eq r0.w, cb5[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb5[2].xxyz
					  mad r1.yzw, cb5[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb5[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb5[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb5[6].xxyz
					  mul r3.yzw, r1.yyzw, cb5[5].xxyz
					  mul r0.w, r3.y, l(0.250000)
					  mul r1.y, cb5[0].z, l(0.500000)
					  mad r1.z, -cb5[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r3.x, r1.z, r0.w
					  sample r4.xyzw, r3.xzwx, t6.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r5.xyzw, r1.yzwy, t6.xyzw, s0
					  add r1.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r3.xyzw, r1.yzwy, t6.xyzw, s0
					  mov r6.xyz, v3.xyzx
					  mov r6.w, l(1.000000)
					  dp4 r4.x, r4.xyzw, r6.xyzw
					  dp4 r4.y, r5.xyzw, r6.xyzw
					  dp4 r4.z, r3.xyzw, r6.xyzw
					else 
					  mov r3.xyz, v3.xyzx
					  mov r3.w, l(1.000000)
					  dp4 r4.x, cb2[39].xyzw, r3.xyzw
					  dp4 r4.y, cb2[40].xyzw, r3.xyzw
					  dp4 r4.z, cb2[41].xyzw, r3.xyzw
					endif 
					add r1.yzw, r4.xxyz, v6.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.w, v3.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r2.xyz, r0.xyzx, r2.xyzx
					mul r0.xyz, r0.xyzx, r1.yzwy
					mad r0.xyz, r2.xyzx, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			Tags { "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
			Blend One One, One One
			ZWrite Off
			GpuProgramID 503301
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[14], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
					mad o1.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
					mad o2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
					mad o2.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v4.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r2.x, r0.w, l(0.001000)
					div r1.xyzw, r1.xyzw, r2.xxxx
					mul r1.xyzw, r1.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s4
					sample r3.xyzw, r3.zwzz, t2.xyzw, s4
					add r3.xyz, r3.xyzx, r4.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mad r2.xyz, r1.xxxx, r2.xyzx, r3.xyzx
					mul r3.xyzw, v2.xyxy, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t3.xyzw, s5
					sample r3.xyzw, r3.zwzz, t3.xyzw, s5
					add r3.xyz, r3.xyzx, r4.xyzx
					mad r1.xyz, r1.zzzz, r3.xyzx, r2.xyzx
					mul r2.xyzw, v2.zwzw, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
					mul r2.xyz, v4.yyyy, cb0[5].xyzx
					mad r2.xyz, cb0[4].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb0[6].xyzx, v4.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[7].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v4.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v4.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v4.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v4.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t6.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r2.xyzw, r2.xxxx, t5.xyzw, s1
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r0.x, v3.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.y
					  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v4.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v5.xyxx, t0.xyzw, s3
					dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r2.x, r0.w, l(0.001000)
					div r1.xyzw, r1.xyzw, r2.xxxx
					mul r1.xyzw, r1.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s4
					sample r2.xyzw, r2.zwzz, t1.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s5
					sample r3.xyzw, r3.zwzz, t2.xyzw, s5
					add r3.xyz, r3.xyzx, r4.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mad r2.xyz, r1.xxxx, r2.xyzx, r3.xyzx
					mul r3.xyzw, v2.xyxy, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t3.xyzw, s6
					sample r3.xyzw, r3.zwzz, t3.xyzw, s6
					add r3.xyz, r3.xyzx, r4.xyzx
					mad r1.xyz, r1.zzzz, r3.xyzx, r2.xyzx
					mul r2.xyzw, v2.zwzw, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s7
					sample r2.xyzw, r2.zwzz, t4.xyzw, s7
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
					mul r2.xyzw, v4.yyyy, cb0[5].xyzw
					mad r2.xyzw, cb0[4].xyzw, v4.xxxx, r2.xyzw
					mad r2.xyzw, cb0[6].xyzw, v4.zzzz, r2.xyzw
					add r2.xyzw, r2.xyzw, cb0[7].xyzw
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v4.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v4.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v4.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v4.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r3.y, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r3.y
					  sample r3.xyzw, r3.xzwx, t7.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					lt r3.x, l(0.000000), r2.z
					and r3.x, r3.x, l(0x3f800000)
					div r3.yz, r2.xxyx, r2.wwww
					add r3.yz, r3.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r4.xyzw, r3.yzyy, t5.xyzw, s1
					mul r2.w, r3.x, r4.w
					dp3 r2.x, r2.xyzx, r2.xyzx
					sample r3.xyzw, r2.xxxx, t6.xyzw, s2
					mul r2.x, r2.w, r3.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r0.x, v3.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texturecube (float,float,float,float) t6
					dcl_resource_texture3d (float,float,float,float) t7
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 5
					add r0.xyz, -v4.xyzx, cb1[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					sample r1.xyzw, v5.xyxx, t0.xyzw, s3
					dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r2.x, r0.w, l(0.001000)
					div r1.xyzw, r1.xyzw, r2.xxxx
					mul r1.xyzw, r1.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s4
					sample r2.xyzw, r2.zwzz, t1.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s5
					sample r3.xyzw, r3.zwzz, t2.xyzw, s5
					add r3.xyz, r3.xyzx, r4.xyzx
					mul r3.xyz, r1.yyyy, r3.xyzx
					mad r2.xyz, r1.xxxx, r2.xyzx, r3.xyzx
					mul r3.xyzw, v2.xyxy, cb0[9].xxyy
					sample r4.xyzw, r3.xyxx, t3.xyzw, s6
					sample r3.xyzw, r3.zwzz, t3.xyzw, s6
					add r3.xyz, r3.xyzx, r4.xyzx
					mad r1.xyz, r1.zzzz, r3.xyzx, r2.xyzx
					mul r2.xyzw, v2.zwzw, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s7
					sample r2.xyzw, r2.zwzz, t4.xyzw, s7
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
					mul r2.xyz, v4.yyyy, cb0[5].xyzx
					mad r2.xyz, cb0[4].xyzx, v4.xxxx, r2.xyzx
					mad r2.xyz, cb0[6].xyzx, v4.zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb0[7].xyzx
					eq r1.w, cb2[0].x, l(1.000000)
					if_nz r1.w
					  eq r1.w, cb2[0].y, l(1.000000)
					  mul r3.xyz, v4.yyyy, cb2[2].xyzx
					  mad r3.xyz, cb2[1].xyzx, v4.xxxx, r3.xyzx
					  mad r3.xyz, cb2[3].xyzx, v4.zzzz, r3.xyzx
					  add r3.xyz, r3.xyzx, cb2[4].xyzx
					  movc r3.xyz, r1.wwww, r3.xyzx, v4.xyzx
					  add r3.xyz, r3.xyzx, -cb2[6].xyzx
					  mul r3.yzw, r3.xxyz, cb2[5].xxyz
					  mad r1.w, r3.y, l(0.250000), l(0.750000)
					  mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r3.x, r1.w, r2.w
					  sample r3.xyzw, r3.xzwx, t7.xyzw, s0
					else 
					  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
					dp3 r2.w, r2.xyzx, r2.xyzx
					sample r3.xyzw, r2.wwww, t5.xyzw, s2
					sample r2.xyzw, r2.xyzx, t6.xyzw, s1
					mul r2.x, r2.w, r3.x
					mul r1.w, r1.w, r2.x
					mul r2.xyz, r1.wwww, cb0[2].xyzx
					dp3 r0.x, v3.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r1.xyz, r1.xyzx, r2.xyzx
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[47], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v5.xyxx, t0.xyzw, s2
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[9].zzzz
					mul r2.xyzw, v1.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s3
					sample r2.xyzw, r2.zwzz, t1.xyzw, s3
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s4
					sample r2.xyzw, r2.zwzz, t2.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s5
					sample r2.xyzw, r2.zwzz, t3.xyzw, s5
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[9].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s6
					sample r2.xyzw, r2.zwzz, t4.xyzw, s6
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					mul r1.yz, v4.yyyy, cb0[5].xxyx
					mad r1.yz, cb0[4].xxyx, v4.xxxx, r1.yyzy
					mad r1.yz, cb0[6].xxyx, v4.zzzz, r1.yyzy
					add r1.yz, r1.yyzy, cb0[7].xxyx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r2.xyz, v4.yyyy, cb2[2].xyzx
					  mad r2.xyz, cb2[1].xyzx, v4.xxxx, r2.xyzx
					  mad r2.xyz, cb2[3].xyzx, v4.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb2[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v4.xyzx
					  add r2.xyz, r2.xyzx, -cb2[6].xyzx
					  mul r2.yzw, r2.xxyz, cb2[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.w
					  sample r2.xyzw, r2.xzwx, t6.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
					sample r2.xyzw, r1.yzyy, t5.xyzw, s1
					mul r0.w, r0.w, r2.w
					mul r1.yzw, r0.wwww, cb0[2].xxyz
					dp3 r0.w, v3.xyzx, cb1[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, r1.yzwy
					mul r0.xyz, r0.wwww, r0.xyzx
					mul o0.xyz, r1.xxxx, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "PREPASS"
			Tags { "LIGHTMODE" = "PREPASSBASE" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
			GpuProgramID 535519
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					mad o3.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					// SV_InstanceID            0   x           4     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xy
					dcl_output o4.x
					dcl_temps 3
					iadd r0.x, v8.x, cb2[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb3[r0.x + 1].xyzw
					mad r1.xyzw, cb3[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb3[r0.x + 3].xyzw
					mad o2.xyz, cb3[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r2.wwww, r1.xyzw
					dp3 r1.x, v2.xyzx, cb3[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb3[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb3[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o1.xyz, r0.xxxx, r1.xyzx
					mad o3.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o4.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_temps 2
					sample r0.xyzw, v3.xyxx, t0.xyzw, s0
					dp4 r0.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					mad r1.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov r1.w, l(0)
					mul o0.xyzw, r0.xxxx, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float       
					// TEXCOORD                 2   xy          3     NONE   float   xy  
					// SV_InstanceID            0   x           4     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v3.xy
					dcl_output o0.xyzw
					dcl_temps 2
					sample r0.xyzw, v3.xyxx, t0.xyzw, s0
					dp4 r0.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					mad r1.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mov r1.w, l(0)
					mul o0.xyzw, r0.xxxx, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "PREPASS"
			Tags { "LIGHTMODE" = "PREPASSFINAL" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
			ZWrite Off
			GpuProgramID 631387
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o5.zw, r0.zzzw
					add o5.xy, r1.zzzz, r1.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o5.zw, r0.zzzw
					add o5.xy, r1.zzzz, r1.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb3[1].xyzw
					mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb3[3].xyzw
					mad o3.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb4[18].xyzw
					mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
					mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
					mov o0.xyzw, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r0.y, cb1[5].x
					mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
					mov o5.zw, r0.zzzw
					add o5.xy, r1.zzzz, r1.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r0.x, v2.xyzx, cb3[4].xyzx
					dp3 r0.y, v2.xyzx, cb3[5].xyzx
					dp3 r0.z, v2.xyzx, cb3[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad o3.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r1.y, cb1[5].x
					mul r2.w, r0.y, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r2.zzzz, r2.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r1.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad o3.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r1.y, cb1[5].x
					mul r2.w, r0.y, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r2.zzzz, r2.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r1.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_constantbuffer CB5[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 4
					iadd r0.x, v8.x, cb4[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
					mad r1.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb5[r0.x + 3].xyzw
					mad o3.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r2.zzzz, r1.xyzw
					mad r1.xyzw, cb3[20].xyzw, r2.wwww, r1.xyzw
					mov o0.xyzw, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mul r0.y, r1.y, cb1[5].x
					mul r2.w, r0.y, l(0.500000)
					mul r2.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
					mov o5.zw, r1.zzzw
					add o5.xy, r2.zzzz, r2.xwxx
					mov o6.xyzw, l(0,0,0,0)
					dp3 r1.x, v2.xyzx, cb5[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb5[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb5[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb2[39].xyzw, r0.xyzw
					dp4 r2.y, cb2[40].xyzw, r0.xyzw
					dp4 r2.z, cb2[41].xyzw, r0.xyzw
					add o7.xyz, r1.xyzx, r2.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					add r1.xyz, r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					log r1.xyz, r1.xyzx
					add r1.xyz, -r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					// TEXCOORD                 4   xyzw        5     NONE   float   xy w
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_input_ps linear v5.xyw
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v2.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t3.xyzw, s3
					sample r0.xyzw, r0.zwzz, t3.xyzw, s3
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t1.xyzw, s1
					sample r1.xyzw, r1.zwzz, t1.xyzw, s1
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s2
					sample r2.xyzw, r2.zwzz, t2.xyzw, s2
					add r2.xyz, r2.xyzx, r3.xyzx
					sample r3.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r3.xyzw, r3.xyzw, r1.wwww
					mul r3.xyzw, r3.xyzw, cb0[5].zzzz
					mul r2.xyz, r2.xyzx, r3.yyyy
					mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r0.xyz, r3.wwww, r1.xyzx, r0.xyzx
					div r1.xy, v5.xyxx, v5.wwww
					sample r1.xyzw, r1.xyxx, t5.xyzw, s5
					add r1.xyz, r1.xyzx, v7.xyzx
					mul r0.xyz, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DEFERRED"
			Tags { "LIGHTMODE" = "DEFERRED" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
			GpuProgramID 715510
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o3.xyz, r0.wwww, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb2[3].xyzw
					mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb3[18].xyzw
					mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r0.x, v2.xyzx, cb2[4].xyzx
					dp3 r0.y, v2.xyzx, cb2[5].xyzx
					dp3 r0.z, v2.xyzx, cb2[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb1[42].xyzw, r2.xyzw
					dp4 r3.y, cb1[43].xyzw, r2.xyzw
					dp4 r3.z, cb1[44].xyzw, r2.xyzw
					mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb1[39].xyzw, r0.xyzw
					dp4 r2.y, cb1[40].xyzw, r0.xyzw
					dp4 r2.z, cb1[41].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// SV_InstanceID            0   x           7     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[1], immediateIndexed
					dcl_constantbuffer CB3[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.x
					dcl_temps 3
					iadd r0.x, v8.x, cb2[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb3[r0.x + 1].xyzw
					mad r1.xyzw, cb3[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb3[r0.x + 3].xyzw
					mad o4.xyz, cb3[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb3[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb3[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb3[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul o3.xyz, r0.xxxx, r1.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mov o7.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 3
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad o4.xyz, cb4[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o7.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" }
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					// SV_InstanceID            0   x           8   INSTID    uint   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[46], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_constantbuffer CB4[15], dynamicIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input_sgv v8.x, instance_id
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xy
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.x
					dcl_temps 3
					iadd r0.x, v8.x, cb3[0].x
					ishl r0.x, r0.x, l(3)
					mul r1.xyzw, v0.yyyy, cb4[r0.x + 1].xyzw
					mad r1.xyzw, cb4[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
					mad r1.xyzw, cb4[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb4[r0.x + 3].xyzw
					mad o4.xyz, cb4[r0.x + 3].xyzx, v0.wwww, r1.xyzx
					mul r1.xyzw, r2.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r2.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r2.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r2.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
					mad o1.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
					mad o2.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
					mad o2.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
					dp3 r1.x, v2.xyzx, cb4[r0.x + 4].xyzx
					dp3 r1.y, v2.xyzx, cb4[r0.x + 5].xyzx
					dp3 r1.z, v2.xyzx, cb4[r0.x + 6].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r1.xyzx
					mov o3.xyz, r0.xyzx
					mad o5.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					mov o6.xyzw, l(0,0,0,0)
					mul r0.w, r0.y, r0.y
					mad r0.w, r0.x, r0.x, -r0.w
					mul r1.xyzw, r0.yzzx, r0.xyzz
					dp4 r0.x, cb1[42].xyzw, r1.xyzw
					dp4 r0.y, cb1[43].xyzw, r1.xyzw
					dp4 r0.z, cb1[44].xyzw, r1.xyzw
					mad o7.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
					mov o8.x, v8.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mul r0.xyzw, v2.zwzw, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t4.xyzw, s4
					sample r0.xyzw, r0.zwzz, t4.xyzw, s4
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t3.xyzw, s3
					sample r1.xyzw, r1.zwzz, t3.xyzw, s3
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s1
					sample r2.xyzw, r2.zwzz, t1.xyzw, s1
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s2
					sample r3.xyzw, r3.zwzz, t2.xyzw, s2
					add r3.xyz, r3.xyzx, r4.xyzx
					sample r4.xyzw, v5.xyxx, t0.xyzw, s0
					dp4 r0.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r4.xyzw, r4.xyzw, r1.wwww
					mul r4.xyzw, r4.xyzw, cb0[5].zzzz
					mul r3.xyz, r3.xyzx, r4.yyyy
					mad r2.xyz, r4.xxxx, r2.xyzx, r3.xyzx
					mad r1.xyz, r4.zzzz, r1.xyzx, r2.xyzx
					mad r0.xyz, r4.wwww, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad r0.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o3.xyzw, r0.wwww
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mul r0.xyzw, v2.zwzw, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t4.xyzw, s4
					sample r0.xyzw, r0.zwzz, t4.xyzw, s4
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t3.xyzw, s3
					sample r1.xyzw, r1.zwzz, t3.xyzw, s3
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s1
					sample r2.xyzw, r2.zwzz, t1.xyzw, s1
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s2
					sample r3.xyzw, r3.zwzz, t2.xyzw, s2
					add r3.xyz, r3.xyzx, r4.xyzx
					sample r4.xyzw, v5.xyxx, t0.xyzw, s0
					dp4 r0.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r4.xyzw, r4.xyzw, r1.wwww
					mul r4.xyzw, r4.xyzw, cb0[5].zzzz
					mul r3.xyz, r3.xyzx, r4.yyyy
					mad r2.xyz, r4.xxxx, r2.xyzx, r3.xyzx
					mad r1.xyz, r4.zzzz, r1.xyzx, r2.xyzx
					mad r0.xyz, r4.wwww, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mul r0.xyz, r0.xyzx, v7.xyzx
					exp r1.xyz, -r0.xyzx
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad r0.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o2.w, l(1.000000)
					mov r1.w, l(1.000000)
					mul o3.xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mul r0.xyzw, v2.zwzw, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t4.xyzw, s4
					sample r0.xyzw, r0.zwzz, t4.xyzw, s4
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t3.xyzw, s3
					sample r1.xyzw, r1.zwzz, t3.xyzw, s3
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s1
					sample r2.xyzw, r2.zwzz, t1.xyzw, s1
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s2
					sample r3.xyzw, r3.zwzz, t2.xyzw, s2
					add r3.xyz, r3.xyzx, r4.xyzx
					sample r4.xyzw, v5.xyxx, t0.xyzw, s0
					dp4 r0.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r4.xyzw, r4.xyzw, r1.wwww
					mul r4.xyzw, r4.xyzw, cb0[5].zzzz
					mul r3.xyz, r3.xyzx, r4.yyyy
					mad r2.xyz, r4.xxxx, r2.xyzx, r3.xyzx
					mad r1.xyz, r4.zzzz, r1.xyzx, r2.xyzx
					mad r0.xyz, r4.wwww, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mul r1.xyz, r0.xyzx, v7.xyzx
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad r0.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o2.w, l(1.000000)
					mov r1.w, l(1.000000)
					mul o3.xyzw, r0.wwww, r1.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float       
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// SV_InstanceID            0   x           7     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v5.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 5
					mul r0.xyzw, v2.zwzw, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t4.xyzw, s4
					sample r0.xyzw, r0.zwzz, t4.xyzw, s4
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.xyxy, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t3.xyzw, s3
					sample r1.xyzw, r1.zwzz, t3.xyzw, s3
					add r1.xyz, r1.xyzx, r2.xyzx
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s1
					sample r2.xyzw, r2.zwzz, t1.xyzw, s1
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r3.xyzw, v1.zwzw, cb0[5].xxyy
					sample r4.xyzw, r3.xyxx, t2.xyzw, s2
					sample r3.xyzw, r3.zwzz, t2.xyzw, s2
					add r3.xyz, r3.xyzx, r4.xyzx
					sample r4.xyzw, v5.xyxx, t0.xyzw, s0
					dp4 r0.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.w, r0.w, l(0.001000)
					div r4.xyzw, r4.xyzw, r1.wwww
					mul r4.xyzw, r4.xyzw, cb0[5].zzzz
					mul r3.xyz, r3.xyzx, r4.yyyy
					mad r2.xyz, r4.xxxx, r2.xyzx, r3.xyzx
					mad r1.xyz, r4.zzzz, r1.xyzx, r2.xyzx
					mad r0.xyz, r4.wwww, r0.xyzx, r1.xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mad r0.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul o2.xyz, r0.wwww, r0.xyzx
					mov o3.xyzw, r0.wwww
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 6
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r1.y, cb2[0].z, l(0.500000)
					  mad r1.z, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r2.x, r1.z, r0.w
					  sample r3.xyzw, r2.xzwx, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r4.xyzw, r1.yzwy, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r2.xyzw, r1.yzwy, t5.xyzw, s0
					  mov r5.xyz, v3.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v3.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r1.yzw, r3.xxyz, v7.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r2.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.yzw, r0.xxyz, r1.yyzw
					exp r3.xyz, -r1.yzwy
					mul o0.xyz, r1.xxxx, r0.xyzx
					mul o2.xyz, r1.xxxx, r2.xyzx
					mov r3.w, l(1.000000)
					mul o3.xyzw, r1.xxxx, r3.xyzw
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" }
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xy          5     NONE   float   xy  
					// TEXCOORD                 5   xyzw        6     NONE   float       
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// SV_InstanceID            0   x           8     NONE    uint       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					// SV_Target                2   xyzw        2   TARGET   float   xyzw
					// SV_Target                3   xyzw        3   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[42], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xy
					dcl_input_ps linear v7.xyz
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyzw
					dcl_temps 6
					sample r0.xyzw, v5.xyxx, t0.xyzw, s1
					dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r1.y, r1.x, l(0.001000)
					div r0.xyzw, r0.xyzw, r1.yyyy
					mul r0.xyzw, r0.xyzw, cb0[5].zzzz
					mul r2.xyzw, v1.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s2
					sample r2.xyzw, r2.zwzz, t1.xyzw, s2
					add r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyzw, v1.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t2.xyzw, s3
					sample r2.xyzw, r2.zwzz, t2.xyzw, s3
					add r2.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r0.yyyy, r2.xyzx
					mad r1.yzw, r0.xxxx, r1.yyzw, r2.xxyz
					mul r2.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t3.xyzw, s4
					sample r2.xyzw, r2.zwzz, t3.xyzw, s4
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r0.xyz, r0.zzzz, r2.xyzx, r1.yzwy
					mul r2.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r2.xyxx, t4.xyzw, s5
					sample r2.xyzw, r2.zwzz, t4.xyzw, s5
					add r1.yzw, r2.xxyz, r3.xxyz
					mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
					eq r0.w, cb2[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb2[0].y, l(1.000000)
					  mul r1.yzw, v4.yyyy, cb2[2].xxyz
					  mad r1.yzw, cb2[1].xxyz, v4.xxxx, r1.yyzw
					  mad r1.yzw, cb2[3].xxyz, v4.zzzz, r1.yyzw
					  add r1.yzw, r1.yyzw, cb2[4].xxyz
					  movc r1.yzw, r0.wwww, r1.yyzw, v4.xxyz
					  add r1.yzw, r1.yyzw, -cb2[6].xxyz
					  mul r2.yzw, r1.yyzw, cb2[5].xxyz
					  mul r0.w, r2.y, l(0.250000)
					  mul r1.y, cb2[0].z, l(0.500000)
					  mad r1.z, -cb2[0].z, l(0.500000), l(0.250000)
					  max r0.w, r0.w, r1.y
					  min r2.x, r1.z, r0.w
					  sample r3.xyzw, r2.xzwx, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r4.xyzw, r1.yzwy, t5.xyzw, s0
					  add r1.yzw, r2.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r2.xyzw, r1.yzwy, t5.xyzw, s0
					  mov r5.xyz, v3.xyzx
					  mov r5.w, l(1.000000)
					  dp4 r3.x, r3.xyzw, r5.xyzw
					  dp4 r3.y, r4.xyzw, r5.xyzw
					  dp4 r3.z, r2.xyzw, r5.xyzw
					else 
					  mov r2.xyz, v3.xyzx
					  mov r2.w, l(1.000000)
					  dp4 r3.x, cb1[39].xyzw, r2.xyzw
					  dp4 r3.y, cb1[40].xyzw, r2.xyzw
					  dp4 r3.z, cb1[41].xyzw, r2.xyzw
					endif 
					add r1.yzw, r3.xxyz, v7.xxyz
					max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r2.xyz, v3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r3.xyz, r0.xyzx, r1.yzwy
					mul o0.xyz, r1.xxxx, r0.xyzx
					mul o2.xyz, r1.xxxx, r2.xyzx
					mov r3.w, l(1.000000)
					mul o3.xyzw, r1.xxxx, r3.xyzw
					mov o0.w, l(1.000000)
					mov o1.xyzw, l(0,0,0,0)
					mov o2.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "META"
			Tags { "LIGHTMODE" = "META" "QUEUE" = "Geometry-99" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 744063
			Program "vp" {
				SubProgram "d3d11 " {
					"!!DX11VertexSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[11], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_constantbuffer CB3[2], immediateIndexed
					dcl_constantbuffer CB4[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xyzw
					dcl_output o3.xyz
					dcl_output o4.xy
					dcl_temps 2
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb3[0].xyxx, cb3[0].zwzz
					movc r0.xyz, cb4[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb3[1].xyxx, cb3[1].zwzz
					movc r0.xyz, cb4[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb1[1].xyzw
					mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb1[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
					mad o1.zw, v3.xxxy, cb0[8].xxxy, cb0[8].zzzw
					mad o2.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
					mad o2.zw, v3.xxxy, cb0[10].xxxy, cb0[10].zzzw
					mul r0.xyz, v0.yyyy, cb1[1].xyzx
					mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
					mad o3.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mad o4.xy, v3.xyxx, cb0[4].xyxx, cb0[4].zwzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!DX11PixelSM40
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 2   xyz         3     NONE   float       
					// TEXCOORD                 3   xy          4     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[2], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xyzw
					dcl_input_ps linear v4.xy
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xyzw, v1.xyxy, cb0[5].xxyy
					sample r1.xyzw, r0.xyxx, t1.xyzw, s1
					sample r0.xyzw, r0.zwzz, t1.xyzw, s1
					add r0.xyz, r0.xyzx, r1.xyzx
					mul r1.xyzw, v1.zwzw, cb0[5].xxyy
					sample r2.xyzw, r1.xyxx, t2.xyzw, s2
					sample r1.xyzw, r1.zwzz, t2.xyzw, s2
					add r1.xyz, r1.xyzx, r2.xyzx
					sample r2.xyzw, v4.xyxx, t0.xyzw, s0
					dp4 r0.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					add r0.w, r0.w, l(0.001000)
					div r2.xyzw, r2.xyzw, r0.wwww
					mul r2.xyzw, r2.xyzw, cb0[5].zzzz
					mul r1.xyz, r1.xyzx, r2.yyyy
					mad r0.xyz, r2.xxxx, r0.xyzx, r1.xyzx
					mul r1.xyzw, v2.xyxy, cb0[5].xxyy
					sample r3.xyzw, r1.xyxx, t3.xyzw, s3
					sample r1.xyzw, r1.zwzz, t3.xyzw, s3
					add r1.xyz, r1.xyzx, r3.xyzx
					mad r0.xyz, r2.zzzz, r1.xyzx, r0.xyzx
					mul r1.xyzw, v2.zwzw, cb0[5].xxyy
					sample r3.xyzw, r1.xyxx, t4.xyzw, s4
					sample r1.xyzw, r1.zwzz, t4.xyzw, s4
					add r1.xyz, r1.xyzx, r3.xyzx
					mad r0.xyz, r2.wwww, r1.xyzx, r0.xyzx
					log r0.xyz, r0.xyzx
					mov_sat r0.w, cb0[5].w
					mul r0.xyz, r0.xyzx, r0.wwww
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[6].xxxx
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb1[1].xxxx, r0.xyzw, l(0,0,0,0)
					movc o0.xyzw, cb1[1].yyyy, l(0,0,0,1.000000), r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Diffuse"
}